### YamlMime:ManagedReference
items:
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  commentId: T:Xunit.Sdk.AssertEqualityResult
  id: AssertEqualityResult
  parent: v3.2.0.0:Xunit.Sdk
  children:
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equal
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals(System.Object)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Exception
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.GetHashCode
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.InnerResult
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexX
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexY
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.X
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Y
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  - v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  langs:
  - csharp
  - vb
  name: AssertEqualityResult
  nameWithType: AssertEqualityResult
  fullName: Xunit.Sdk.AssertEqualityResult
  type: Class
  source:
    id: AssertEqualityResult
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 22
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Indicates the result of comparing two values for equality. Includes success/failure information, as well

    as indices where the values differ, if the values are indexed (e.g., collections or strings).
  example: []
  syntax:
    content: 'public class AssertEqualityResult : IEquatable<AssertEqualityResult>'
    content.vb: Public Class AssertEqualityResult Implements IEquatable(Of AssertEqualityResult)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Xunit.Sdk.AssertEqualityResult}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equal
  commentId: P:Xunit.Sdk.AssertEqualityResult.Equal
  id: Equal
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: Equal
  nameWithType: AssertEqualityResult.Equal
  fullName: Xunit.Sdk.AssertEqualityResult.Equal
  type: Property
  source:
    id: Equal
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 55
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Returns <code>true</code> if the values were equal; <code>false</code>, otherwise.
  example: []
  syntax:
    content: public bool Equal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Equal As Boolean
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equal*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Exception
  commentId: P:Xunit.Sdk.AssertEqualityResult.Exception
  id: Exception
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: AssertEqualityResult.Exception
  fullName: Xunit.Sdk.AssertEqualityResult.Exception
  type: Property
  source:
    id: Exception
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 61
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Returns the exception that caused the failure, if it was based on an exception.
  example: []
  syntax:
    content: public Exception? Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Exception*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.InnerResult
  commentId: P:Xunit.Sdk.AssertEqualityResult.InnerResult
  id: InnerResult
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: InnerResult
  nameWithType: AssertEqualityResult.InnerResult
  fullName: Xunit.Sdk.AssertEqualityResult.InnerResult
  type: Property
  source:
    id: InnerResult
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 76
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Returns the comparer result for any inner comparison that caused this result

    to fail; returns <code>null</code> if there was no inner comparison.
  remarks: >-
    If this value is set, then it generally indicates that this comparison was a

    failed collection comparison, and the inner result indicates the specific

    item comparison that caused the failure.
  example: []
  syntax:
    content: public AssertEqualityResult? InnerResult { get; }
    parameters: []
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public ReadOnly Property InnerResult As AssertEqualityResult
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.InnerResult*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexX
  commentId: P:Xunit.Sdk.AssertEqualityResult.MismatchIndexX
  id: MismatchIndexX
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: MismatchIndexX
  nameWithType: AssertEqualityResult.MismatchIndexX
  fullName: Xunit.Sdk.AssertEqualityResult.MismatchIndexX
  type: Property
  source:
    id: MismatchIndexX
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 85
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Returns the index of the mismatch for the <code>X</code> value, if the comparison

    failed on a specific index.
  example: []
  syntax:
    content: public int? MismatchIndexX { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property MismatchIndexX As Integer?
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexX*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexY
  commentId: P:Xunit.Sdk.AssertEqualityResult.MismatchIndexY
  id: MismatchIndexY
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: MismatchIndexY
  nameWithType: AssertEqualityResult.MismatchIndexY
  fullName: Xunit.Sdk.AssertEqualityResult.MismatchIndexY
  type: Property
  source:
    id: MismatchIndexY
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 91
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Returns the index of the mismatch for the <code>Y</code> value, if the comparison

    failed on a specific index.
  example: []
  syntax:
    content: public int? MismatchIndexY { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property MismatchIndexY As Integer?
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexY*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.X
  commentId: P:Xunit.Sdk.AssertEqualityResult.X
  id: X
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: X
  nameWithType: AssertEqualityResult.X
  fullName: Xunit.Sdk.AssertEqualityResult.X
  type: Property
  source:
    id: X
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 97
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: The left-hand value in the comparison
  example: []
  syntax:
    content: public object? X { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property X As Object
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.X*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Y
  commentId: P:Xunit.Sdk.AssertEqualityResult.Y
  id: Y
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: AssertEqualityResult.Y
  fullName: Xunit.Sdk.AssertEqualityResult.Y
  type: Property
  source:
    id: Y
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 106
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: The right-hand value in the comparison
  example: []
  syntax:
    content: public object? Y { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Y As Object
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Y*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals(System.Object)
  commentId: M:Xunit.Sdk.AssertEqualityResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: AssertEqualityResult.Equals(object?)
  fullName: Xunit.Sdk.AssertEqualityResult.Equals(object?)
  type: Method
  source:
    id: Equals
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 117
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals*
  nameWithType.vb: AssertEqualityResult.Equals(Object)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.Equals(Object)
  name.vb: Equals(Object)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)
  id: Equals(Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: Equals(AssertEqualityResult?)
  nameWithType: AssertEqualityResult.Equals(AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult?)
  type: Method
  source:
    id: Equals
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 129
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public bool Equals(AssertEqualityResult? other)
    parameters:
    - id: other
      type: Xunit.Sdk.AssertEqualityResult
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.
    content.vb: Public Function Equals(other As AssertEqualityResult) As Boolean
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals*
  implements:
  - System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)
  nameWithType.vb: AssertEqualityResult.Equals(AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.Equals(Xunit.Sdk.AssertEqualityResult)
  name.vb: Equals(AssertEqualityResult)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  id: ForMismatch(System.Object,System.Object,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)
  nameWithType: AssertEqualityResult.ForMismatch(object?, object?, int, Exception?, AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.ForMismatch(object?, object?, int, System.Exception?, Xunit.Sdk.AssertEqualityResult?)
  type: Method
  source:
    id: ForMismatch
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 156
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates an instance of <xref href="v3.2.0.0:Xunit.Sdk.AssertEqualityResult" data-throw-if-not-resolved="false"></xref> where the values were

    not equal, and there is a single mismatch index (for example, when comparing two

    collections).
  example: []
  syntax:
    content: public static AssertEqualityResult ForMismatch(object? x, object? y, int mismatchIndex, Exception? exception = null, AssertEqualityResult? innerResult = null)
    parameters:
    - id: x
      type: System.Object
      description: The left-hand value in the comparison
    - id: y
      type: System.Object
      description: The right-hand value in the comparison
    - id: mismatchIndex
      type: System.Int32
      description: The mismatch index for both <code>X</code> and <code>Y</code> values
    - id: exception
      type: System.Exception
      description: The optional exception that was thrown to cause the failure
    - id: innerResult
      type: Xunit.Sdk.AssertEqualityResult
      description: The optional inner result that caused the equality failure
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public Shared Function ForMismatch(x As Object, y As Object, mismatchIndex As Integer, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch*
  nameWithType.vb: AssertEqualityResult.ForMismatch(Object, Object, Integer, Exception, AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.ForMismatch(Object, Object, Integer, System.Exception, Xunit.Sdk.AssertEqualityResult)
  name.vb: ForMismatch(Object, Object, Integer, Exception, AssertEqualityResult)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  id: ForMismatch(System.Object,System.Object,System.Int32,System.Int32,System.Exception,Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)
  nameWithType: AssertEqualityResult.ForMismatch(object?, object?, int, int, Exception?, AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.ForMismatch(object?, object?, int, int, System.Exception?, Xunit.Sdk.AssertEqualityResult?)
  type: Method
  source:
    id: ForMismatch
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 185
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates an instance of <xref href="v3.2.0.0:Xunit.Sdk.AssertEqualityResult" data-throw-if-not-resolved="false"></xref> where the values were

    not equal, and there are separate mismatch indices (for example, when comparing two

    strings under special circumstances).
  example: []
  syntax:
    content: public static AssertEqualityResult ForMismatch(object? x, object? y, int mismatchIndexX, int mismatchIndexY, Exception? exception = null, AssertEqualityResult? innerResult = null)
    parameters:
    - id: x
      type: System.Object
      description: The left-hand value in the comparison
    - id: y
      type: System.Object
      description: The right-hand value in the comparison
    - id: mismatchIndexX
      type: System.Int32
      description: The mismatch index for the <code>X</code> value
    - id: mismatchIndexY
      type: System.Int32
      description: The mismatch index for the <code>Y</code> value
    - id: exception
      type: System.Exception
      description: The optional exception that was thrown to cause the failure
    - id: innerResult
      type: Xunit.Sdk.AssertEqualityResult
      description: The optional inner result that caused the equality failure
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public Shared Function ForMismatch(x As Object, y As Object, mismatchIndexX As Integer, mismatchIndexY As Integer, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch*
  nameWithType.vb: AssertEqualityResult.ForMismatch(Object, Object, Integer, Integer, Exception, AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.ForMismatch(Object, Object, Integer, Integer, System.Exception, Xunit.Sdk.AssertEqualityResult)
  name.vb: ForMismatch(Object, Object, Integer, Integer, Exception, AssertEqualityResult)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)
  id: ForResult(System.Boolean,System.Object,System.Object,System.Exception,Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)
  nameWithType: AssertEqualityResult.ForResult(bool, object?, object?, Exception?, AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.ForResult(bool, object?, object?, System.Exception?, Xunit.Sdk.AssertEqualityResult?)
  type: Method
  source:
    id: ForResult
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 212
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Creates an instance of <xref href="v3.2.0.0:Xunit.Sdk.AssertEqualityResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static AssertEqualityResult ForResult(bool equal, object? x, object? y, Exception? exception = null, AssertEqualityResult? innerResult = null)
    parameters:
    - id: equal
      type: System.Boolean
      description: A flag which indicates whether the values were equal
    - id: x
      type: System.Object
      description: The left-hand value in the comparison
    - id: y
      type: System.Object
      description: The right-hand value in the comparison
    - id: exception
      type: System.Exception
      description: The optional exception that was thrown to cause the failure
    - id: innerResult
      type: Xunit.Sdk.AssertEqualityResult
      description: The optional inner result that caused the equality failure
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public Shared Function ForResult(equal As Boolean, x As Object, y As Object, exception As Exception = Nothing, innerResult As AssertEqualityResult = Nothing) As AssertEqualityResult
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForResult*
  nameWithType.vb: AssertEqualityResult.ForResult(Boolean, Object, Object, Exception, AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.ForResult(Boolean, Object, Object, System.Exception, Xunit.Sdk.AssertEqualityResult)
  name.vb: ForResult(Boolean, Object, Object, Exception, AssertEqualityResult)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.GetHashCode
  commentId: M:Xunit.Sdk.AssertEqualityResult.GetHashCode
  id: GetHashCode
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AssertEqualityResult.GetHashCode()
  fullName: Xunit.Sdk.AssertEqualityResult.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 230
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Gets a hash code for the object, to be used in hashed containers.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.GetHashCode*
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  id: op_Equality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: operator ==(AssertEqualityResult?, AssertEqualityResult?)
  nameWithType: AssertEqualityResult.operator ==(AssertEqualityResult?, AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.operator ==(Xunit.Sdk.AssertEqualityResult?, Xunit.Sdk.AssertEqualityResult?)
  type: Operator
  source:
    id: op_Equality
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 239
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Determines whether two instances of <xref href="v3.2.0.0:Xunit.Sdk.AssertEqualityResult" data-throw-if-not-resolved="false"></xref> are equal.
  example: []
  syntax:
    content: public static bool operator ==(AssertEqualityResult? left, AssertEqualityResult? right)
    parameters:
    - id: left
      type: Xunit.Sdk.AssertEqualityResult
      description: The first value
    - id: right
      type: Xunit.Sdk.AssertEqualityResult
      description: The second value
    return:
      type: System.Boolean
      description: Returns <code>true</code> if the values are equal; <code>false</code>, otherwise.
    content.vb: Public Shared Operator =(left As AssertEqualityResult, right As AssertEqualityResult) As Boolean
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Equality*
  nameWithType.vb: AssertEqualityResult.=(AssertEqualityResult, AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.=(Xunit.Sdk.AssertEqualityResult, Xunit.Sdk.AssertEqualityResult)
  name.vb: =(AssertEqualityResult, AssertEqualityResult)
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  commentId: M:Xunit.Sdk.AssertEqualityResult.op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  id: op_Inequality(Xunit.Sdk.AssertEqualityResult,Xunit.Sdk.AssertEqualityResult)
  parent: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  langs:
  - csharp
  - vb
  name: operator !=(AssertEqualityResult?, AssertEqualityResult?)
  nameWithType: AssertEqualityResult.operator !=(AssertEqualityResult?, AssertEqualityResult?)
  fullName: Xunit.Sdk.AssertEqualityResult.operator !=(Xunit.Sdk.AssertEqualityResult?, Xunit.Sdk.AssertEqualityResult?)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Dev\xunit\xunit\src\xunit.v3.assert\Asserts\Sdk\AssertEqualityResult.cs
    startLine: 255
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Determines whether two instances of <xref href="v3.2.0.0:Xunit.Sdk.AssertEqualityResult" data-throw-if-not-resolved="false"></xref> are not equal.
  example: []
  syntax:
    content: public static bool operator !=(AssertEqualityResult? left, AssertEqualityResult? right)
    parameters:
    - id: left
      type: Xunit.Sdk.AssertEqualityResult
      description: The first value
    - id: right
      type: Xunit.Sdk.AssertEqualityResult
      description: The second value
    return:
      type: System.Boolean
      description: Returns <code>true</code> if the values are not equal; <code>false</code>, otherwise.
    content.vb: Public Shared Operator <>(left As AssertEqualityResult, right As AssertEqualityResult) As Boolean
  overload: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Inequality*
  nameWithType.vb: AssertEqualityResult.<>(AssertEqualityResult, AssertEqualityResult)
  fullName.vb: Xunit.Sdk.AssertEqualityResult.<>(Xunit.Sdk.AssertEqualityResult, Xunit.Sdk.AssertEqualityResult)
  name.vb: <>(AssertEqualityResult, AssertEqualityResult)
references:
- uid: v3.2.0.0:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.2.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.2.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Xunit.Sdk.AssertEqualityResult}
  commentId: T:System.IEquatable{Xunit.Sdk.AssertEqualityResult}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<AssertEqualityResult>
  nameWithType: IEquatable<AssertEqualityResult>
  fullName: System.IEquatable<Xunit.Sdk.AssertEqualityResult>
  nameWithType.vb: IEquatable(Of AssertEqualityResult)
  fullName.vb: System.IEquatable(Of Xunit.Sdk.AssertEqualityResult)
  name.vb: IEquatable(Of AssertEqualityResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
    name: AssertEqualityResult
    href: Xunit.Sdk.AssertEqualityResult.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
    name: AssertEqualityResult
    href: Xunit.Sdk.AssertEqualityResult.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equal*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.Equal
  href: Xunit.Sdk.AssertEqualityResult.Equal.html#Xunit_Sdk_AssertEqualityResult_Equal
  name: Equal
  nameWithType: AssertEqualityResult.Equal
  fullName: Xunit.Sdk.AssertEqualityResult.Equal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Exception*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.Exception
  href: Xunit.Sdk.AssertEqualityResult.Exception.html#Xunit_Sdk_AssertEqualityResult_Exception
  name: Exception
  nameWithType: AssertEqualityResult.Exception
  fullName: Xunit.Sdk.AssertEqualityResult.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.InnerResult*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.InnerResult
  href: Xunit.Sdk.AssertEqualityResult.InnerResult.html#Xunit_Sdk_AssertEqualityResult_InnerResult
  name: InnerResult
  nameWithType: AssertEqualityResult.InnerResult
  fullName: Xunit.Sdk.AssertEqualityResult.InnerResult
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
  commentId: T:Xunit.Sdk.AssertEqualityResult
  parent: v3.2.0.0:Xunit.Sdk
  href: Xunit.Sdk.AssertEqualityResult.html
  name: AssertEqualityResult
  nameWithType: AssertEqualityResult
  fullName: Xunit.Sdk.AssertEqualityResult
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexX*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.MismatchIndexX
  href: Xunit.Sdk.AssertEqualityResult.MismatchIndexX.html#Xunit_Sdk_AssertEqualityResult_MismatchIndexX
  name: MismatchIndexX
  nameWithType: AssertEqualityResult.MismatchIndexX
  fullName: Xunit.Sdk.AssertEqualityResult.MismatchIndexX
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.MismatchIndexY*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.MismatchIndexY
  href: Xunit.Sdk.AssertEqualityResult.MismatchIndexY.html#Xunit_Sdk_AssertEqualityResult_MismatchIndexY
  name: MismatchIndexY
  nameWithType: AssertEqualityResult.MismatchIndexY
  fullName: Xunit.Sdk.AssertEqualityResult.MismatchIndexY
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.X*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.X
  href: Xunit.Sdk.AssertEqualityResult.X.html#Xunit_Sdk_AssertEqualityResult_X
  name: X
  nameWithType: AssertEqualityResult.X
  fullName: Xunit.Sdk.AssertEqualityResult.X
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Y*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.Y
  href: Xunit.Sdk.AssertEqualityResult.Y.html#Xunit_Sdk_AssertEqualityResult_Y
  name: Y
  nameWithType: AssertEqualityResult.Y
  fullName: Xunit.Sdk.AssertEqualityResult.Y
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.Equals*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.Equals
  href: Xunit.Sdk.AssertEqualityResult.Equals.html#Xunit_Sdk_AssertEqualityResult_Equals_System_Object_
  name: Equals
  nameWithType: AssertEqualityResult.Equals
  fullName: Xunit.Sdk.AssertEqualityResult.Equals
- uid: System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)
  commentId: M:System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)
  parent: System.IEquatable{Xunit.Sdk.AssertEqualityResult}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(AssertEqualityResult)
  nameWithType: IEquatable<AssertEqualityResult>.Equals(AssertEqualityResult)
  fullName: System.IEquatable<Xunit.Sdk.AssertEqualityResult>.Equals(Xunit.Sdk.AssertEqualityResult)
  nameWithType.vb: IEquatable(Of AssertEqualityResult).Equals(AssertEqualityResult)
  fullName.vb: System.IEquatable(Of Xunit.Sdk.AssertEqualityResult).Equals(Xunit.Sdk.AssertEqualityResult)
  spec.csharp:
  - uid: System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
    name: AssertEqualityResult
    href: Xunit.Sdk.AssertEqualityResult.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Xunit.Sdk.AssertEqualityResult}.Equals(Xunit.Sdk.AssertEqualityResult)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult
    name: AssertEqualityResult
    href: Xunit.Sdk.AssertEqualityResult.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForMismatch*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.ForMismatch
  href: Xunit.Sdk.AssertEqualityResult.ForMismatch.html#Xunit_Sdk_AssertEqualityResult_ForMismatch_System_Object_System_Object_System_Int32_System_Exception_Xunit_Sdk_AssertEqualityResult_
  name: ForMismatch
  nameWithType: AssertEqualityResult.ForMismatch
  fullName: Xunit.Sdk.AssertEqualityResult.ForMismatch
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.ForResult*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.ForResult
  href: Xunit.Sdk.AssertEqualityResult.ForResult.html#Xunit_Sdk_AssertEqualityResult_ForResult_System_Boolean_System_Object_System_Object_System_Exception_Xunit_Sdk_AssertEqualityResult_
  name: ForResult
  nameWithType: AssertEqualityResult.ForResult
  fullName: Xunit.Sdk.AssertEqualityResult.ForResult
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.GetHashCode*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.GetHashCode
  href: Xunit.Sdk.AssertEqualityResult.GetHashCode.html#Xunit_Sdk_AssertEqualityResult_GetHashCode
  name: GetHashCode
  nameWithType: AssertEqualityResult.GetHashCode
  fullName: Xunit.Sdk.AssertEqualityResult.GetHashCode
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Equality*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.op_Equality
  href: Xunit.Sdk.AssertEqualityResult.op_Equality.html#Xunit_Sdk_AssertEqualityResult_op_Equality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_
  name: operator ==
  nameWithType: AssertEqualityResult.operator ==
  fullName: Xunit.Sdk.AssertEqualityResult.operator ==
  nameWithType.vb: AssertEqualityResult.=
  fullName.vb: Xunit.Sdk.AssertEqualityResult.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Equality*
    name: ==
    href: Xunit.Sdk.AssertEqualityResult.op_Equality.html#Xunit_Sdk_AssertEqualityResult_op_Equality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_
- uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Inequality*
  commentId: Overload:Xunit.Sdk.AssertEqualityResult.op_Inequality
  href: Xunit.Sdk.AssertEqualityResult.op_Inequality.html#Xunit_Sdk_AssertEqualityResult_op_Inequality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_
  name: operator !=
  nameWithType: AssertEqualityResult.operator !=
  fullName: Xunit.Sdk.AssertEqualityResult.operator !=
  nameWithType.vb: AssertEqualityResult.<>
  fullName.vb: Xunit.Sdk.AssertEqualityResult.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: v3.2.0.0:Xunit.Sdk.AssertEqualityResult.op_Inequality*
    name: '!='
    href: Xunit.Sdk.AssertEqualityResult.op_Inequality.html#Xunit_Sdk_AssertEqualityResult_op_Inequality_Xunit_Sdk_AssertEqualityResult_Xunit_Sdk_AssertEqualityResult_
memberLayout: SeparatePages
