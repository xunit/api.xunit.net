### YamlMime:ManagedReference
items:
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper
  commentId: T:Xunit.Sdk.TypeHelper
  id: TypeHelper
  parent: v3.1.0.0:Xunit.Sdk
  children:
  - v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArgument(System.Object,System.Type)
  - v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArguments(System.Object[],System.Type[])
  - v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument},System.Type)
  - v3.1.0.0:Xunit.Sdk.TypeHelper.GetType(System.String)
  - v3.1.0.0:Xunit.Sdk.TypeHelper.GetType(System.String,System.String)
  - v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  - v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeStrict(System.String)
  langs:
  - csharp
  - vb
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: Xunit.Sdk.TypeHelper
  type: Class
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: TypeHelper
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 14
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Utility methods related to <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class TypeHelper
    content.vb: Public Module TypeHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArgument(System.Object,System.Type)
  commentId: M:Xunit.Sdk.TypeHelper.ConvertArgument(System.Object,System.Type)
  id: ConvertArgument(System.Object,System.Type)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: ConvertArgument(object?, Type)
  nameWithType: TypeHelper.ConvertArgument(object?, Type)
  fullName: Xunit.Sdk.TypeHelper.ConvertArgument(object?, System.Type)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: ConvertArgument
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 42
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Converts an argument into its target type. Can be particularly useful when pulling attribute

    constructor arguments, whose types may not strictly match the parameter type.
  example: []
  syntax:
    content: public static object? ConvertArgument(object? arg, Type type)
    parameters:
    - id: arg
      type: System.Object
      description: The argument to be converted.
    - id: type
      type: System.Type
      description: The target type for the conversion.
    return:
      type: System.Object
      description: The converted argument.
    content.vb: Public Shared Function ConvertArgument(arg As Object, type As Type) As Object
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArgument*
  nameWithType.vb: TypeHelper.ConvertArgument(Object, Type)
  fullName.vb: Xunit.Sdk.TypeHelper.ConvertArgument(Object, System.Type)
  name.vb: ConvertArgument(Object, Type)
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArguments(System.Object[],System.Type[])
  commentId: M:Xunit.Sdk.TypeHelper.ConvertArguments(System.Object[],System.Type[])
  id: ConvertArguments(System.Object[],System.Type[])
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: ConvertArguments(object?[], Type[])
  nameWithType: TypeHelper.ConvertArguments(object?[], Type[])
  fullName: Xunit.Sdk.TypeHelper.ConvertArguments(object?[], System.Type[])
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: ConvertArguments
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 88
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Converts arguments into their target types. Can be particularly useful when pulling attribute

    constructor arguments, whose types may not strictly match the parameter types.
  example: []
  syntax:
    content: public static object?[] ConvertArguments(object?[] args, Type[] types)
    parameters:
    - id: args
      type: System.Object[]
      description: The arguments to be converted.
    - id: types
      type: System.Type[]
      description: The target types for the conversion.
    return:
      type: System.Object[]
      description: The converted arguments.
    content.vb: Public Shared Function ConvertArguments(args As Object(), types As Type()) As Object()
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArguments*
  nameWithType.vb: TypeHelper.ConvertArguments(Object(), Type())
  fullName.vb: Xunit.Sdk.TypeHelper.ConvertArguments(Object(), System.Type())
  name.vb: ConvertArguments(Object(), Type())
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument},System.Type)
  commentId: M:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument},System.Type)
  id: ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument},System.Type)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: ConvertAttributeArgumentCollection(IReadOnlyCollection<CustomAttributeTypedArgument>, Type)
  nameWithType: TypeHelper.ConvertAttributeArgumentCollection(IReadOnlyCollection<CustomAttributeTypedArgument>, Type)
  fullName: Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection<System.Reflection.CustomAttributeTypedArgument>, System.Type)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: ConvertAttributeArgumentCollection
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 108
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Converts an argument collection from an attribute initializer into an array of the raw values.
  example: []
  syntax:
    content: public static Array ConvertAttributeArgumentCollection(IReadOnlyCollection<CustomAttributeTypedArgument> collection, Type elementType)
    parameters:
    - id: collection
      type: System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument}
      description: The attribute argument collection.
    - id: elementType
      type: System.Type
      description: The element type of the array.
    return:
      type: System.Array
      description: The collection of the raw attribute values.
    content.vb: Public Shared Function ConvertAttributeArgumentCollection(collection As IReadOnlyCollection(Of CustomAttributeTypedArgument), elementType As Type) As Array
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection*
  nameWithType.vb: TypeHelper.ConvertAttributeArgumentCollection(IReadOnlyCollection(Of CustomAttributeTypedArgument), Type)
  fullName.vb: Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection(System.Collections.Generic.IReadOnlyCollection(Of System.Reflection.CustomAttributeTypedArgument), System.Type)
  name.vb: ConvertAttributeArgumentCollection(IReadOnlyCollection(Of CustomAttributeTypedArgument), Type)
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetType(System.String)
  commentId: M:Xunit.Sdk.TypeHelper.GetType(System.String)
  id: GetType(System.String)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: GetType(string)
  nameWithType: TypeHelper.GetType(string)
  fullName: Xunit.Sdk.TypeHelper.GetType(string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: GetType
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 129
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Converts an assembly qualified type name from <xref href="v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)" data-throw-if-not-resolved="false"></xref> back into

    a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static Type? GetType(string assemblyQualifiedTypeName)
    parameters:
    - id: assemblyQualifiedTypeName
      type: System.String
      description: The assembly qualified type name.
    return:
      type: System.Type
      description: The instance of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>, if available; <code>null</code>, otherwise.
    content.vb: Public Shared Function [GetType](assemblyQualifiedTypeName As String) As Type
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.GetType*
  nameWithType.vb: TypeHelper.GetType(String)
  fullName.vb: Xunit.Sdk.TypeHelper.GetType(String)
  name.vb: GetType(String)
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetType(System.String,System.String)
  commentId: M:Xunit.Sdk.TypeHelper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: GetType(string, string)
  nameWithType: TypeHelper.GetType(string, string)
  fullName: Xunit.Sdk.TypeHelper.GetType(string, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: GetType
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 217
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Converts an assembly name + type name into a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static Type? GetType(string assemblyName, string typeName)
    parameters:
    - id: assemblyName
      type: System.String
      description: The assembly name.
    - id: typeName
      type: System.String
      description: The type name.
    return:
      type: System.Type
      description: The instance of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>, if available; <code>null</code>, otherwise.
    content.vb: Public Shared Function [GetType](assemblyName As String, typeName As String) As Type
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.GetType*
  nameWithType.vb: TypeHelper.GetType(String, String)
  fullName.vb: Xunit.Sdk.TypeHelper.GetType(String, String)
  name.vb: GetType(String, String)
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  commentId: M:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  id: GetTypeName(System.Type)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: GetTypeName(Type)
  nameWithType: TypeHelper.GetTypeName(Type)
  fullName: Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: GetTypeName
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 248
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Gets an assembly-qualified type name suitable for serialization.
  remarks: Dynamic types, or types which live in the GAC, are not supported.
  example: []
  syntax:
    content: public static string GetTypeName(Type value)
    parameters:
    - id: value
      type: System.Type
      description: The type value
    return:
      type: System.String
      description: A string in "TypeName" format (for mscorlib types) or "TypeName,AssemblyName" format (for all others)
    content.vb: Public Shared Function GetTypeName(value As Type) As String
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName*
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeStrict(System.String)
  commentId: M:Xunit.Sdk.TypeHelper.GetTypeStrict(System.String)
  id: GetTypeStrict(System.String)
  parent: v3.1.0.0:Xunit.Sdk.TypeHelper
  langs:
  - csharp
  - vb
  name: GetTypeStrict(string)
  nameWithType: TypeHelper.GetTypeStrict(string)
  fullName: Xunit.Sdk.TypeHelper.GetTypeStrict(string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Utility/TypeHelper.cs
      branch: 5b41c61aa173b9f17ecedfd886891917b8528a87
      repo: https://github.com/xunit/xunit
    id: GetTypeStrict
    path: ../src/xunit.v3.common/Utility/TypeHelper.cs
    startLine: 310
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Converts an assembly qualified type name into a <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object. If the

    type does not exist, throws an <xref href="System.ArgumentException" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Type GetTypeStrict(string assemblyQualifiedTypeName)
    parameters:
    - id: assemblyQualifiedTypeName
      type: System.String
      description: The assembly qualified type name.
    return:
      type: System.Type
      description: The instance of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetTypeStrict(assemblyQualifiedTypeName As String) As Type
  overload: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeStrict*
  nameWithType.vb: TypeHelper.GetTypeStrict(String)
  fullName.vb: Xunit.Sdk.TypeHelper.GetTypeStrict(String)
  name.vb: GetTypeStrict(String)
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: v3.1.0.0:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.1.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.1.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArgument*
  commentId: Overload:Xunit.Sdk.TypeHelper.ConvertArgument
  href: Xunit.Sdk.TypeHelper.ConvertArgument.html#Xunit_Sdk_TypeHelper_ConvertArgument_System_Object_System_Type_
  name: ConvertArgument
  nameWithType: TypeHelper.ConvertArgument
  fullName: Xunit.Sdk.TypeHelper.ConvertArgument
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertArguments*
  commentId: Overload:Xunit.Sdk.TypeHelper.ConvertArguments
  href: Xunit.Sdk.TypeHelper.ConvertArguments.html#Xunit_Sdk_TypeHelper_ConvertArguments_System_Object___System_Type___
  name: ConvertArguments
  nameWithType: TypeHelper.ConvertArguments
  fullName: Xunit.Sdk.TypeHelper.ConvertArguments
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection*
  commentId: Overload:Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection
  href: Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection.html#Xunit_Sdk_TypeHelper_ConvertAttributeArgumentCollection_System_Collections_Generic_IReadOnlyCollection_System_Reflection_CustomAttributeTypedArgument__System_Type_
  name: ConvertAttributeArgumentCollection
  nameWithType: TypeHelper.ConvertAttributeArgumentCollection
  fullName: Xunit.Sdk.TypeHelper.ConvertAttributeArgumentCollection
- uid: System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Reflection.CustomAttributeTypedArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<CustomAttributeTypedArgument>
  nameWithType: IReadOnlyCollection<CustomAttributeTypedArgument>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Reflection.CustomAttributeTypedArgument>
  nameWithType.vb: IReadOnlyCollection(Of CustomAttributeTypedArgument)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Reflection.CustomAttributeTypedArgument)
  name.vb: IReadOnlyCollection(Of CustomAttributeTypedArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.customattributetypedargument
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.CustomAttributeTypedArgument
    name: CustomAttributeTypedArgument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.customattributetypedargument
  - name: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  commentId: M:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  isExternal: true
  href: Xunit.Sdk.TypeHelper.GetTypeName.html#Xunit_Sdk_TypeHelper_GetTypeName_System_Type_
  name: GetTypeName(Type)
  nameWithType: TypeHelper.GetTypeName(Type)
  fullName: Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
  spec.csharp:
  - uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
    name: GetTypeName
    href: Xunit.Sdk.TypeHelper.GetTypeName.html#Xunit_Sdk_TypeHelper_GetTypeName_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName(System.Type)
    name: GetTypeName
    href: Xunit.Sdk.TypeHelper.GetTypeName.html#Xunit_Sdk_TypeHelper_GetTypeName_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetType*
  commentId: Overload:Xunit.Sdk.TypeHelper.GetType
  href: Xunit.Sdk.TypeHelper.GetType.html#Xunit_Sdk_TypeHelper_GetType_System_String_
  name: GetType
  nameWithType: TypeHelper.GetType
  fullName: Xunit.Sdk.TypeHelper.GetType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeName*
  commentId: Overload:Xunit.Sdk.TypeHelper.GetTypeName
  href: Xunit.Sdk.TypeHelper.GetTypeName.html#Xunit_Sdk_TypeHelper_GetTypeName_System_Type_
  name: GetTypeName
  nameWithType: TypeHelper.GetTypeName
  fullName: Xunit.Sdk.TypeHelper.GetTypeName
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: v3.1.0.0:Xunit.Sdk.TypeHelper.GetTypeStrict*
  commentId: Overload:Xunit.Sdk.TypeHelper.GetTypeStrict
  href: Xunit.Sdk.TypeHelper.GetTypeStrict.html#Xunit_Sdk_TypeHelper_GetTypeStrict_System_String_
  name: GetTypeStrict
  nameWithType: TypeHelper.GetTypeStrict
  fullName: Xunit.Sdk.TypeHelper.GetTypeStrict
memberLayout: SeparatePages
