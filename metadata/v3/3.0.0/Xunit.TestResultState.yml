### YamlMime:ManagedReference
items:
- uid: v3.3.0.0:Xunit.TestResultState
  commentId: T:Xunit.TestResultState
  id: TestResultState
  parent: v3.3.0.0:Xunit
  children:
  - v3.3.0.0:Xunit.TestResultState.ExceptionMessages
  - v3.3.0.0:Xunit.TestResultState.ExceptionParentIndices
  - v3.3.0.0:Xunit.TestResultState.ExceptionStackTraces
  - v3.3.0.0:Xunit.TestResultState.ExceptionTypes
  - v3.3.0.0:Xunit.TestResultState.ExecutionTime
  - v3.3.0.0:Xunit.TestResultState.FailureCause
  - v3.3.0.0:Xunit.TestResultState.ForNotRun(System.Nullable{System.Decimal})
  - v3.3.0.0:Xunit.TestResultState.ForPassed(System.Nullable{System.Decimal})
  - v3.3.0.0:Xunit.TestResultState.ForSkipped(System.Nullable{System.Decimal})
  - v3.3.0.0:Xunit.TestResultState.FromException(System.Decimal,System.Exception)
  - v3.3.0.0:Xunit.TestResultState.FromTestResult(Xunit.Sdk.ITestResultMessage)
  - v3.3.0.0:Xunit.TestResultState.Result
  langs:
  - csharp
  - vb
  name: TestResultState
  nameWithType: TestResultState
  fullName: Xunit.TestResultState
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: TestResultState
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 10
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Represents information about the current state of a test after it has run.
  example: []
  syntax:
    content: public class TestResultState
    content.vb: Public Class TestResultState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionMessages
  commentId: P:Xunit.TestResultState.ExceptionMessages
  id: ExceptionMessages
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ExceptionMessages
  nameWithType: TestResultState.ExceptionMessages
  fullName: Xunit.TestResultState.ExceptionMessages
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ExceptionMessages
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 19
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets the message(s) of the exception(s). This value is only available

    when <xref href="v3.3.0.0:Xunit.TestResultState.Result" data-throw-if-not-resolved="false"></xref> is <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string[]? ExceptionMessages { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ExceptionMessages As String()
  overload: v3.3.0.0:Xunit.TestResultState.ExceptionMessages*
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionParentIndices
  commentId: P:Xunit.TestResultState.ExceptionParentIndices
  id: ExceptionParentIndices
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ExceptionParentIndices
  nameWithType: TestResultState.ExceptionParentIndices
  fullName: Xunit.TestResultState.ExceptionParentIndices
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ExceptionParentIndices
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 26
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets the parent exception index(es) for the exception(s); a -1 indicates

    that the exception in question has no parent. This value is only available

    when <xref href="v3.3.0.0:Xunit.TestResultState.Result" data-throw-if-not-resolved="false"></xref> is <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int[]? ExceptionParentIndices { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property ExceptionParentIndices As Integer()
  overload: v3.3.0.0:Xunit.TestResultState.ExceptionParentIndices*
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionStackTraces
  commentId: P:Xunit.TestResultState.ExceptionStackTraces
  id: ExceptionStackTraces
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ExceptionStackTraces
  nameWithType: TestResultState.ExceptionStackTraces
  fullName: Xunit.TestResultState.ExceptionStackTraces
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ExceptionStackTraces
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 32
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets the stack trace(s) of the exception(s). This value is only available

    when <xref href="v3.3.0.0:Xunit.TestResultState.Result" data-throw-if-not-resolved="false"></xref> is <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string?[]? ExceptionStackTraces { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ExceptionStackTraces As String()
  overload: v3.3.0.0:Xunit.TestResultState.ExceptionStackTraces*
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionTypes
  commentId: P:Xunit.TestResultState.ExceptionTypes
  id: ExceptionTypes
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ExceptionTypes
  nameWithType: TestResultState.ExceptionTypes
  fullName: Xunit.TestResultState.ExceptionTypes
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ExceptionTypes
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 38
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets the fully-qualified type name(s) of the exception(s). This value is

    only available when <xref href="v3.3.0.0:Xunit.TestResultState.Result" data-throw-if-not-resolved="false"></xref> is <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string?[]? ExceptionTypes { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ExceptionTypes As String()
  overload: v3.3.0.0:Xunit.TestResultState.ExceptionTypes*
- uid: v3.3.0.0:Xunit.TestResultState.ExecutionTime
  commentId: P:Xunit.TestResultState.ExecutionTime
  id: ExecutionTime
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ExecutionTime
  nameWithType: TestResultState.ExecutionTime
  fullName: Xunit.TestResultState.ExecutionTime
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ExecutionTime
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 45
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets the amount of time the test ran, in seconds. The value may be <code>0</code> if no

    test code was run (for example, a statically skipped test). Note that the value may

    be a partial value because of further timing being done while cleaning up.
  example: []
  syntax:
    content: public decimal? ExecutionTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Property ExecutionTime As Decimal?
  overload: v3.3.0.0:Xunit.TestResultState.ExecutionTime*
- uid: v3.3.0.0:Xunit.TestResultState.FailureCause
  commentId: P:Xunit.TestResultState.FailureCause
  id: FailureCause
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: FailureCause
  nameWithType: TestResultState.FailureCause
  fullName: Xunit.TestResultState.FailureCause
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: FailureCause
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 51
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Gets a value which indicates what the cause of the test failure was. This value is only

    available when <xref href="v3.3.0.0:Xunit.TestResultState.Result" data-throw-if-not-resolved="false"></xref> is <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public FailureCause? FailureCause { get; }
    parameters: []
    return:
      type: System.Nullable{Xunit.Sdk.FailureCause}
    content.vb: Public Property FailureCause As FailureCause?
  overload: v3.3.0.0:Xunit.TestResultState.FailureCause*
- uid: v3.3.0.0:Xunit.TestResultState.Result
  commentId: P:Xunit.TestResultState.Result
  id: Result
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: TestResultState.Result
  fullName: Xunit.TestResultState.Result
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: Result
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 56
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Returns the result from the test run.
  example: []
  syntax:
    content: public TestResult Result { get; }
    parameters: []
    return:
      type: Xunit.TestResult
    content.vb: Public Property Result As TestResult
  overload: v3.3.0.0:Xunit.TestResultState.Result*
- uid: v3.3.0.0:Xunit.TestResultState.ForNotRun(System.Nullable{System.Decimal})
  commentId: M:Xunit.TestResultState.ForNotRun(System.Nullable{System.Decimal})
  id: ForNotRun(System.Nullable{System.Decimal})
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ForNotRun(decimal?)
  nameWithType: TestResultState.ForNotRun(decimal?)
  fullName: Xunit.TestResultState.ForNotRun(decimal?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ForNotRun
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 62
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Create a not run test result.
  example: []
  syntax:
    content: public static TestResultState ForNotRun(decimal? executionTime = null)
    parameters:
    - id: executionTime
      type: System.Nullable{System.Decimal}
      description: The optional execution time
    return:
      type: Xunit.TestResultState
    content.vb: Public Shared Function ForNotRun(executionTime As Decimal? = Nothing) As TestResultState
  overload: v3.3.0.0:Xunit.TestResultState.ForNotRun*
  nameWithType.vb: TestResultState.ForNotRun(Decimal?)
  fullName.vb: Xunit.TestResultState.ForNotRun(Decimal?)
  name.vb: ForNotRun(Decimal?)
- uid: v3.3.0.0:Xunit.TestResultState.ForPassed(System.Nullable{System.Decimal})
  commentId: M:Xunit.TestResultState.ForPassed(System.Nullable{System.Decimal})
  id: ForPassed(System.Nullable{System.Decimal})
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ForPassed(decimal?)
  nameWithType: TestResultState.ForPassed(decimal?)
  fullName: Xunit.TestResultState.ForPassed(decimal?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ForPassed
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 69
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Create a passing test result.
  example: []
  syntax:
    content: public static TestResultState ForPassed(decimal? executionTime = null)
    parameters:
    - id: executionTime
      type: System.Nullable{System.Decimal}
      description: The optional execution time
    return:
      type: Xunit.TestResultState
    content.vb: Public Shared Function ForPassed(executionTime As Decimal? = Nothing) As TestResultState
  overload: v3.3.0.0:Xunit.TestResultState.ForPassed*
  nameWithType.vb: TestResultState.ForPassed(Decimal?)
  fullName.vb: Xunit.TestResultState.ForPassed(Decimal?)
  name.vb: ForPassed(Decimal?)
- uid: v3.3.0.0:Xunit.TestResultState.ForSkipped(System.Nullable{System.Decimal})
  commentId: M:Xunit.TestResultState.ForSkipped(System.Nullable{System.Decimal})
  id: ForSkipped(System.Nullable{System.Decimal})
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: ForSkipped(decimal?)
  nameWithType: TestResultState.ForSkipped(decimal?)
  fullName: Xunit.TestResultState.ForSkipped(decimal?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: ForSkipped
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 76
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Create a skipped test result.
  example: []
  syntax:
    content: public static TestResultState ForSkipped(decimal? executionTime = null)
    parameters:
    - id: executionTime
      type: System.Nullable{System.Decimal}
      description: The optional execution time
    return:
      type: Xunit.TestResultState
    content.vb: Public Shared Function ForSkipped(executionTime As Decimal? = Nothing) As TestResultState
  overload: v3.3.0.0:Xunit.TestResultState.ForSkipped*
  nameWithType.vb: TestResultState.ForSkipped(Decimal?)
  fullName.vb: Xunit.TestResultState.ForSkipped(Decimal?)
  name.vb: ForSkipped(Decimal?)
- uid: v3.3.0.0:Xunit.TestResultState.FromException(System.Decimal,System.Exception)
  commentId: M:Xunit.TestResultState.FromException(System.Decimal,System.Exception)
  id: FromException(System.Decimal,System.Exception)
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: FromException(decimal, Exception?)
  nameWithType: TestResultState.FromException(decimal, Exception?)
  fullName: Xunit.TestResultState.FromException(decimal, System.Exception?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: FromException
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 86
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Creates an instance based on the presence or absence of an exception. If the exception

    is <code>null</code>, then it will be for <xref href="v3.3.0.0:Xunit.TestResult.Passed" data-throw-if-not-resolved="false"></xref>; otherwise, it will

    be for <xref href="v3.3.0.0:Xunit.TestResult.Failed" data-throw-if-not-resolved="false"></xref>;
  example: []
  syntax:
    content: public static TestResultState FromException(decimal executionTime, Exception? exception)
    parameters:
    - id: executionTime
      type: System.Decimal
      description: The time spent executing the test
    - id: exception
      type: System.Exception
      description: The exception, if the test failed
    return:
      type: Xunit.TestResultState
    content.vb: Public Shared Function FromException(executionTime As Decimal, exception As Exception) As TestResultState
  overload: v3.3.0.0:Xunit.TestResultState.FromException*
  nameWithType.vb: TestResultState.FromException(Decimal, Exception)
  fullName.vb: Xunit.TestResultState.FromException(Decimal, System.Exception)
  name.vb: FromException(Decimal, Exception)
- uid: v3.3.0.0:Xunit.TestResultState.FromTestResult(Xunit.Sdk.ITestResultMessage)
  commentId: M:Xunit.TestResultState.FromTestResult(Xunit.Sdk.ITestResultMessage)
  id: FromTestResult(Xunit.Sdk.ITestResultMessage)
  parent: v3.3.0.0:Xunit.TestResultState
  langs:
  - csharp
  - vb
  name: FromTestResult(ITestResultMessage)
  nameWithType: TestResultState.FromTestResult(ITestResultMessage)
  fullName: Xunit.TestResultState.FromTestResult(Xunit.Sdk.ITestResultMessage)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TestResultState.cs
      branch: d0213fc4e5d673d4c3abcb807d2eab72cfd80fe9
      repo: https://github.com/xunit/xunit
    id: FromTestResult
    path: ../src/xunit.v3.core/TestResultState.cs
    startLine: 114
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Creates an instance based on inspecting the type identity of the

    <code class="paramref">testResult</code> instance.
  example: []
  syntax:
    content: public static TestResultState FromTestResult(ITestResultMessage testResult)
    parameters:
    - id: testResult
      type: Xunit.Sdk.ITestResultMessage
      description: The test result
    return:
      type: Xunit.TestResultState
    content.vb: Public Shared Function FromTestResult(testResult As ITestResultMessage) As TestResultState
  overload: v3.3.0.0:Xunit.TestResultState.FromTestResult*
references:
- uid: v3.3.0.0:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.3.0.0:Xunit.TestResultState.Result
  commentId: P:Xunit.TestResultState.Result
  href: Xunit.TestResultState.Result.html#Xunit_TestResultState_Result
  name: Result
  nameWithType: TestResultState.Result
  fullName: Xunit.TestResultState.Result
- uid: v3.3.0.0:Xunit.TestResult.Failed
  commentId: F:Xunit.TestResult.Failed
  href: Xunit.TestResult.html#Xunit_TestResult_Failed
  name: Failed
  nameWithType: TestResult.Failed
  fullName: Xunit.TestResult.Failed
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionMessages*
  commentId: Overload:Xunit.TestResultState.ExceptionMessages
  href: Xunit.TestResultState.ExceptionMessages.html#Xunit_TestResultState_ExceptionMessages
  name: ExceptionMessages
  nameWithType: TestResultState.ExceptionMessages
  fullName: Xunit.TestResultState.ExceptionMessages
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionParentIndices*
  commentId: Overload:Xunit.TestResultState.ExceptionParentIndices
  href: Xunit.TestResultState.ExceptionParentIndices.html#Xunit_TestResultState_ExceptionParentIndices
  name: ExceptionParentIndices
  nameWithType: TestResultState.ExceptionParentIndices
  fullName: Xunit.TestResultState.ExceptionParentIndices
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionStackTraces*
  commentId: Overload:Xunit.TestResultState.ExceptionStackTraces
  href: Xunit.TestResultState.ExceptionStackTraces.html#Xunit_TestResultState_ExceptionStackTraces
  name: ExceptionStackTraces
  nameWithType: TestResultState.ExceptionStackTraces
  fullName: Xunit.TestResultState.ExceptionStackTraces
- uid: v3.3.0.0:Xunit.TestResultState.ExceptionTypes*
  commentId: Overload:Xunit.TestResultState.ExceptionTypes
  href: Xunit.TestResultState.ExceptionTypes.html#Xunit_TestResultState_ExceptionTypes
  name: ExceptionTypes
  nameWithType: TestResultState.ExceptionTypes
  fullName: Xunit.TestResultState.ExceptionTypes
- uid: v3.3.0.0:Xunit.TestResultState.ExecutionTime*
  commentId: Overload:Xunit.TestResultState.ExecutionTime
  href: Xunit.TestResultState.ExecutionTime.html#Xunit_TestResultState_ExecutionTime
  name: ExecutionTime
  nameWithType: TestResultState.ExecutionTime
  fullName: Xunit.TestResultState.ExecutionTime
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: v3.3.0.0:Xunit.TestResultState.FailureCause*
  commentId: Overload:Xunit.TestResultState.FailureCause
  href: Xunit.TestResultState.FailureCause.html#Xunit_TestResultState_FailureCause
  name: FailureCause
  nameWithType: TestResultState.FailureCause
  fullName: Xunit.TestResultState.FailureCause
- uid: System.Nullable{Xunit.Sdk.FailureCause}
  commentId: T:System.Nullable{Xunit.Sdk.FailureCause}
  parent: System
  definition: System.Nullable`1
  name: FailureCause?
  nameWithType: FailureCause?
  fullName: Xunit.Sdk.FailureCause?
  spec.csharp:
  - uid: v3.3.0.0:Xunit.Sdk.FailureCause
    name: FailureCause
  - name: '?'
  spec.vb:
  - uid: v3.3.0.0:Xunit.Sdk.FailureCause
    name: FailureCause
  - name: '?'
- uid: v3.3.0.0:Xunit.TestResultState.Result*
  commentId: Overload:Xunit.TestResultState.Result
  href: Xunit.TestResultState.Result.html#Xunit_TestResultState_Result
  name: Result
  nameWithType: TestResultState.Result
  fullName: Xunit.TestResultState.Result
- uid: v3.3.0.0:Xunit.TestResult
  commentId: T:Xunit.TestResult
  parent: v3.3.0.0:Xunit
  href: Xunit.TestResult.html
  name: TestResult
  nameWithType: TestResult
  fullName: Xunit.TestResult
- uid: v3.3.0.0:Xunit.TestResultState.ForNotRun*
  commentId: Overload:Xunit.TestResultState.ForNotRun
  href: Xunit.TestResultState.ForNotRun.html#Xunit_TestResultState_ForNotRun_System_Nullable_System_Decimal__
  name: ForNotRun
  nameWithType: TestResultState.ForNotRun
  fullName: Xunit.TestResultState.ForNotRun
- uid: v3.3.0.0:Xunit.TestResultState
  commentId: T:Xunit.TestResultState
  parent: v3.3.0.0:Xunit
  href: Xunit.TestResultState.html
  name: TestResultState
  nameWithType: TestResultState
  fullName: Xunit.TestResultState
- uid: v3.3.0.0:Xunit.TestResultState.ForPassed*
  commentId: Overload:Xunit.TestResultState.ForPassed
  href: Xunit.TestResultState.ForPassed.html#Xunit_TestResultState_ForPassed_System_Nullable_System_Decimal__
  name: ForPassed
  nameWithType: TestResultState.ForPassed
  fullName: Xunit.TestResultState.ForPassed
- uid: v3.3.0.0:Xunit.TestResultState.ForSkipped*
  commentId: Overload:Xunit.TestResultState.ForSkipped
  href: Xunit.TestResultState.ForSkipped.html#Xunit_TestResultState_ForSkipped_System_Nullable_System_Decimal__
  name: ForSkipped
  nameWithType: TestResultState.ForSkipped
  fullName: Xunit.TestResultState.ForSkipped
- uid: v3.3.0.0:Xunit.TestResult.Passed
  commentId: F:Xunit.TestResult.Passed
  href: Xunit.TestResult.html#Xunit_TestResult_Passed
  name: Passed
  nameWithType: TestResult.Passed
  fullName: Xunit.TestResult.Passed
- uid: v3.3.0.0:Xunit.TestResultState.FromException*
  commentId: Overload:Xunit.TestResultState.FromException
  href: Xunit.TestResultState.FromException.html#Xunit_TestResultState_FromException_System_Decimal_System_Exception_
  name: FromException
  nameWithType: TestResultState.FromException
  fullName: Xunit.TestResultState.FromException
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: v3.3.0.0:Xunit.TestResultState.FromTestResult*
  commentId: Overload:Xunit.TestResultState.FromTestResult
  href: Xunit.TestResultState.FromTestResult.html#Xunit_TestResultState_FromTestResult_Xunit_Sdk_ITestResultMessage_
  name: FromTestResult
  nameWithType: TestResultState.FromTestResult
  fullName: Xunit.TestResultState.FromTestResult
- uid: v3.3.0.0:Xunit.Sdk.ITestResultMessage
  commentId: T:Xunit.Sdk.ITestResultMessage
  parent: v3.3.0.0:Xunit.Sdk
  href: Xunit.Sdk.ITestResultMessage.html
  name: ITestResultMessage
  nameWithType: ITestResultMessage
  fullName: Xunit.Sdk.ITestResultMessage
- uid: v3.3.0.0:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.3.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.3.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.3.0.0:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.3.0.0:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
memberLayout: SeparatePages
