### YamlMime:ManagedReference
items:
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  commentId: T:Xunit.Assert.RaisedEvent`1
  id: Assert.RaisedEvent`1
  parent: v3.2.0.2:Xunit
  children:
  - v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor(System.Object,`0)
  - v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor(`0)
  - v3.2.0.2:Xunit.Assert.RaisedEvent`1.Arguments
  - v3.2.0.2:Xunit.Assert.RaisedEvent`1.Sender
  langs:
  - csharp
  - vb
  name: Assert.RaisedEvent<T>
  nameWithType: Assert.RaisedEvent<T>
  fullName: Xunit.Assert.RaisedEvent<T>
  type: Class
  source:
    remote:
      path: EventAsserts.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: RaisedEvent
    path: ../src/xunit.v3.assert/Asserts/EventAsserts.cs
    startLine: 598
  assemblies:
  - xunit.v3.assert
  namespace: Xunit
  summary: Represents a raised event after the fact.
  example: []
  syntax:
    content: public class Assert.RaisedEvent<T>
    typeParameters:
    - id: T
      description: The type of the event arguments.
    content.vb: Public Class Assert.RaisedEvent(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Assert.RaisedEvent(Of T)
  fullName.vb: Xunit.Assert.RaisedEvent(Of T)
  name.vb: Assert.RaisedEvent(Of T)
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Sender
  commentId: P:Xunit.Assert.RaisedEvent`1.Sender
  id: Sender
  parent: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: Assert.RaisedEvent<T>.Sender
  fullName: Xunit.Assert.RaisedEvent<T>.Sender
  type: Property
  source:
    remote:
      path: EventAsserts.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: Sender
    path: ../src/xunit.v3.assert/Asserts/EventAsserts.cs
    startLine: 606
  assemblies:
  - xunit.v3.assert
  namespace: Xunit
  summary: >-
    The sender of the event. When the event is recorded via <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> rather

    than <xref href="System.EventHandler%601" data-throw-if-not-resolved="false"></xref>, this value will always be <code>null</code>,

    since there is no sender value when using actions.
  example: []
  syntax:
    content: public object? Sender { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Sender As Object
  overload: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Sender*
  nameWithType.vb: Assert.RaisedEvent(Of T).Sender
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).Sender
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Arguments
  commentId: P:Xunit.Assert.RaisedEvent`1.Arguments
  id: Arguments
  parent: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: Assert.RaisedEvent<T>.Arguments
  fullName: Xunit.Assert.RaisedEvent<T>.Arguments
  type: Property
  source:
    remote:
      path: EventAsserts.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: Arguments
    path: ../src/xunit.v3.assert/Asserts/EventAsserts.cs
    startLine: 614
  assemblies:
  - xunit.v3.assert
  namespace: Xunit
  summary: The event arguments.
  example: []
  syntax:
    content: public T Arguments { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Arguments As T
  overload: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Arguments*
  nameWithType.vb: Assert.RaisedEvent(Of T).Arguments
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).Arguments
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor(`0)
  commentId: M:Xunit.Assert.RaisedEvent`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  langs:
  - csharp
  - vb
  name: RaisedEvent(T)
  nameWithType: Assert.RaisedEvent<T>.RaisedEvent(T)
  fullName: Xunit.Assert.RaisedEvent<T>.RaisedEvent(T)
  type: Constructor
  source:
    remote:
      path: EventAsserts.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: .ctor
    path: ../src/xunit.v3.assert/Asserts/EventAsserts.cs
    startLine: 620
  assemblies:
  - xunit.v3.assert
  namespace: Xunit
  summary: Creates a new instance of the <xref href="v3.2.0.2:Xunit.Assert.RaisedEvent%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RaisedEvent(T args)
    parameters:
    - id: args
      type: '{T}'
      description: The event arguments
    content.vb: Public Sub New(args As T)
  overload: v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor*
  nameWithType.vb: Assert.RaisedEvent(Of T).New(T)
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).New(T)
  name.vb: New(T)
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor(System.Object,`0)
  commentId: M:Xunit.Assert.RaisedEvent`1.#ctor(System.Object,`0)
  id: '#ctor(System.Object,`0)'
  parent: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  langs:
  - csharp
  - vb
  name: RaisedEvent(object?, T)
  nameWithType: Assert.RaisedEvent<T>.RaisedEvent(object?, T)
  fullName: Xunit.Assert.RaisedEvent<T>.RaisedEvent(object?, T)
  type: Constructor
  source:
    remote:
      path: EventAsserts.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: .ctor
    path: ../src/xunit.v3.assert/Asserts/EventAsserts.cs
    startLine: 629
  assemblies:
  - xunit.v3.assert
  namespace: Xunit
  summary: Creates a new instance of the <xref href="v3.2.0.2:Xunit.Assert.RaisedEvent%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RaisedEvent(object? sender, T args)
    parameters:
    - id: sender
      type: System.Object
      description: The sender of the event.
    - id: args
      type: '{T}'
      description: The event arguments
    content.vb: Public Sub New(sender As Object, args As T)
  overload: v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor*
  nameWithType.vb: Assert.RaisedEvent(Of T).New(Object, T)
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).New(Object, T)
  name.vb: New(Object, T)
references:
- uid: v3.2.0.2:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Sender*
  commentId: Overload:Xunit.Assert.RaisedEvent`1.Sender
  href: Xunit.Assert.RaisedEvent-1.Sender.html#Xunit_Assert_RaisedEvent_1_Sender
  name: Sender
  nameWithType: Assert.RaisedEvent<T>.Sender
  fullName: Xunit.Assert.RaisedEvent<T>.Sender
  nameWithType.vb: Assert.RaisedEvent(Of T).Sender
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).Sender
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.Arguments*
  commentId: Overload:Xunit.Assert.RaisedEvent`1.Arguments
  href: Xunit.Assert.RaisedEvent-1.Arguments.html#Xunit_Assert_RaisedEvent_1_Arguments
  name: Arguments
  nameWithType: Assert.RaisedEvent<T>.Arguments
  fullName: Xunit.Assert.RaisedEvent<T>.Arguments
  nameWithType.vb: Assert.RaisedEvent(Of T).Arguments
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).Arguments
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1
  commentId: T:Xunit.Assert.RaisedEvent`1
  href: Xunit.Assert.html
  name: Assert.RaisedEvent<T>
  nameWithType: Assert.RaisedEvent<T>
  fullName: Xunit.Assert.RaisedEvent<T>
  nameWithType.vb: Assert.RaisedEvent(Of T)
  fullName.vb: Xunit.Assert.RaisedEvent(Of T)
  name.vb: Assert.RaisedEvent(Of T)
  spec.csharp:
  - uid: v3.2.0.2:Xunit.Assert
    name: Assert
    href: Xunit.Assert.html
  - name: .
  - uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1
    name: RaisedEvent
    href: Xunit.Assert.RaisedEvent-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: v3.2.0.2:Xunit.Assert
    name: Assert
    href: Xunit.Assert.html
  - name: .
  - uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1
    name: RaisedEvent
    href: Xunit.Assert.RaisedEvent-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: v3.2.0.2:Xunit.Assert.RaisedEvent`1.#ctor*
  commentId: Overload:Xunit.Assert.RaisedEvent`1.#ctor
  href: Xunit.Assert.RaisedEvent-1.-ctor.html#Xunit_Assert_RaisedEvent_1__ctor__0_
  name: RaisedEvent
  nameWithType: Assert.RaisedEvent<T>.RaisedEvent
  fullName: Xunit.Assert.RaisedEvent<T>.RaisedEvent
  nameWithType.vb: Assert.RaisedEvent(Of T).New
  fullName.vb: Xunit.Assert.RaisedEvent(Of T).New
  name.vb: New
memberLayout: SeparatePages
