### YamlMime:ManagedReference
items:
- uid: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer
  commentId: T:Xunit.Sdk.StringAssertEqualityComparer
  id: StringAssertEqualityComparer
  parent: v3.2.0.2:Xunit.Sdk
  children:
  - v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: StringAssertEqualityComparer
  nameWithType: StringAssertEqualityComparer
  fullName: Xunit.Sdk.StringAssertEqualityComparer
  type: Class
  source:
    remote:
      path: Sdk/StringAssertEqualityComparer.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: StringAssertEqualityComparer
    path: ../src/xunit.v3.assert/Asserts/Sdk/StringAssertEqualityComparer.cs
    startLine: 19
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: This static class offers equivalence comparisons for string values
  example: []
  syntax:
    content: public static class StringAssertEqualityComparer
    content.vb: Public Module StringAssertEqualityComparer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Equivalent(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer
  langs:
  - csharp
  - vb
  name: Equivalent(string?, string?, bool, bool, bool, bool)
  nameWithType: StringAssertEqualityComparer.Equivalent(string?, string?, bool, bool, bool, bool)
  fullName: Xunit.Sdk.StringAssertEqualityComparer.Equivalent(string?, string?, bool, bool, bool, bool)
  type: Method
  source:
    remote:
      path: Sdk/StringAssertEqualityComparer.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: Equivalent
    path: ../src/xunit.v3.assert/Asserts/Sdk/StringAssertEqualityComparer.cs
    startLine: 87
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Compare two string values for equalivalence.
  remarks: >-
    The <code class="paramref">ignoreWhiteSpaceDifferences</code> and <code class="paramref">ignoreAllWhiteSpace</code> flags consider

    the following characters to be white-space:

    <a href="https://unicode-explorer.com/c/0009">Tab</a> (\t),

    <a href="https://unicode-explorer.com/c/0020">Space</a> (\u0020),

    <a href="https://unicode-explorer.com/c/00A0">No-Break Space</a> (\u00A0),

    <a href="https://unicode-explorer.com/c/1680">Ogham Space Mark</a> (\u1680),

    <a href="https://unicode-explorer.com/c/180E">Mongolian Vowel Separator</a> (\u180E),

    <a href="https://unicode-explorer.com/c/2000">En Quad</a> (\u2000),

    <a href="https://unicode-explorer.com/c/2001">Em Quad</a> (\u2001),

    <a href="https://unicode-explorer.com/c/2002">En Space</a> (\u2002),

    <a href="https://unicode-explorer.com/c/2003">Em Space</a> (\u2003),

    <a href="https://unicode-explorer.com/c/2004">Three-Per-Em Space</a> (\u2004),

    <a href="https://unicode-explorer.com/c/2005">Four-Per-Em Space</a> (\u2004),

    <a href="https://unicode-explorer.com/c/2006">Six-Per-Em Space</a> (\u2006),

    <a href="https://unicode-explorer.com/c/2007">Figure Space</a> (\u2007),

    <a href="https://unicode-explorer.com/c/2008">Punctuation Space</a> (\u2008),

    <a href="https://unicode-explorer.com/c/2009">Thin Space</a> (\u2009),

    <a href="https://unicode-explorer.com/c/200A">Hair Space</a> (\u200A),

    <a href="https://unicode-explorer.com/c/200B">Zero Width Space</a> (\u200B),

    <a href="https://unicode-explorer.com/c/202F">Narrow No-Break Space</a> (\u202F),

    <a href="https://unicode-explorer.com/c/205F">Medium Mathematical Space</a> (\u205F),

    <a href="https://unicode-explorer.com/c/3000">Ideographic Space</a> (\u3000),

    and <a href="https://unicode-explorer.com/c/FEFF">Zero Width No-Break Space</a> (\uFEFF).

    In particular, it does not include carriage return (\r) or line feed (\n), which are covered by

    <code class="paramref">ignoreLineEndingDifferences</code>.
  example: []
  syntax:
    content: public static AssertEqualityResult Equivalent(string? expected, string? actual, bool ignoreCase = false, bool ignoreLineEndingDifferences = false, bool ignoreWhiteSpaceDifferences = false, bool ignoreAllWhiteSpace = false)
    parameters:
    - id: expected
      type: System.String
      description: The expected string value.
    - id: actual
      type: System.String
      description: The actual string value.
    - id: ignoreCase
      type: System.Boolean
      description: If set to <code>true</code>, ignores cases differences. The invariant culture is used.
    - id: ignoreLineEndingDifferences
      type: System.Boolean
      description: If set to <code>true</code>, treats \r\n, \r, and \n as equivalent.
    - id: ignoreWhiteSpaceDifferences
      type: System.Boolean
      description: If set to <code>true</code>, treats horizontal white-space (i.e. spaces, tabs, and others; see remarks) in any non-zero quantity as equivalent.
    - id: ignoreAllWhiteSpace
      type: System.Boolean
      description: If set to <code>true</code>, treats horizontal white-space (i.e. spaces, tabs, and others; see remarks), including zero quantities, as equivalent.
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public Shared Function Equivalent(expected As String, actual As String, ignoreCase As Boolean = False, ignoreLineEndingDifferences As Boolean = False, ignoreWhiteSpaceDifferences As Boolean = False, ignoreAllWhiteSpace As Boolean = False) As AssertEqualityResult
  overload: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent*
  nameWithType.vb: StringAssertEqualityComparer.Equivalent(String, String, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: Xunit.Sdk.StringAssertEqualityComparer.Equivalent(String, String, Boolean, Boolean, Boolean, Boolean)
  name.vb: Equivalent(String, String, Boolean, Boolean, Boolean, Boolean)
- uid: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Equivalent(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer
  langs:
  - csharp
  - vb
  name: Equivalent(ReadOnlySpan<char>, ReadOnlySpan<char>, bool, bool, bool, bool)
  nameWithType: StringAssertEqualityComparer.Equivalent(ReadOnlySpan<char>, ReadOnlySpan<char>, bool, bool, bool, bool)
  fullName: Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.ReadOnlySpan<char>, System.ReadOnlySpan<char>, bool, bool, bool, bool)
  type: Method
  source:
    remote:
      path: Sdk/StringAssertEqualityComparer.cs
      branch: 892ce2e9656c2424790b1cd3a209e9d42882e62d
      repo: https://github.com/xunit/assert.xunit
    id: Equivalent
    path: ../src/xunit.v3.assert/Asserts/Sdk/StringAssertEqualityComparer.cs
    startLine: 144
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Compare two string values for equalivalence.
  remarks: >-
    The <code class="paramref">ignoreWhiteSpaceDifferences</code> and <code class="paramref">ignoreAllWhiteSpace</code> flags consider

    the following characters to be white-space:

    <a href="https://unicode-explorer.com/c/0009">Tab</a> (\t),

    <a href="https://unicode-explorer.com/c/0020">Space</a> (\u0020),

    <a href="https://unicode-explorer.com/c/00A0">No-Break Space</a> (\u00A0),

    <a href="https://unicode-explorer.com/c/1680">Ogham Space Mark</a> (\u1680),

    <a href="https://unicode-explorer.com/c/180E">Mongolian Vowel Separator</a> (\u180E),

    <a href="https://unicode-explorer.com/c/2000">En Quad</a> (\u2000),

    <a href="https://unicode-explorer.com/c/2001">Em Quad</a> (\u2001),

    <a href="https://unicode-explorer.com/c/2002">En Space</a> (\u2002),

    <a href="https://unicode-explorer.com/c/2003">Em Space</a> (\u2003),

    <a href="https://unicode-explorer.com/c/2004">Three-Per-Em Space</a> (\u2004),

    <a href="https://unicode-explorer.com/c/2005">Four-Per-Em Space</a> (\u2004),

    <a href="https://unicode-explorer.com/c/2006">Six-Per-Em Space</a> (\u2006),

    <a href="https://unicode-explorer.com/c/2007">Figure Space</a> (\u2007),

    <a href="https://unicode-explorer.com/c/2008">Punctuation Space</a> (\u2008),

    <a href="https://unicode-explorer.com/c/2009">Thin Space</a> (\u2009),

    <a href="https://unicode-explorer.com/c/200A">Hair Space</a> (\u200A),

    <a href="https://unicode-explorer.com/c/200B">Zero Width Space</a> (\u200B),

    <a href="https://unicode-explorer.com/c/202F">Narrow No-Break Space</a> (\u202F),

    <a href="https://unicode-explorer.com/c/205F">Medium Mathematical Space</a> (\u205F),

    <a href="https://unicode-explorer.com/c/3000">Ideographic Space</a> (\u3000),

    and <a href="https://unicode-explorer.com/c/FEFF">Zero Width No-Break Space</a> (\uFEFF).

    In particular, it does not include carriage return (\r) or line feed (\n), which are covered by

    <code class="paramref">ignoreLineEndingDifferences</code>.
  example: []
  syntax:
    content: public static AssertEqualityResult Equivalent(ReadOnlySpan<char> expected, ReadOnlySpan<char> actual, bool ignoreCase = false, bool ignoreLineEndingDifferences = false, bool ignoreWhiteSpaceDifferences = false, bool ignoreAllWhiteSpace = false)
    parameters:
    - id: expected
      type: System.ReadOnlySpan{System.Char}
      description: The expected string value.
    - id: actual
      type: System.ReadOnlySpan{System.Char}
      description: The actual string value.
    - id: ignoreCase
      type: System.Boolean
      description: If set to <code>true</code>, ignores cases differences. The invariant culture is used.
    - id: ignoreLineEndingDifferences
      type: System.Boolean
      description: If set to <code>true</code>, treats \r\n, \r, and \n as equivalent.
    - id: ignoreWhiteSpaceDifferences
      type: System.Boolean
      description: If set to <code>true</code>, treats horizontal white-space (i.e. spaces, tabs, and others; see remarks) in any non-zero quantity as equivalent.
    - id: ignoreAllWhiteSpace
      type: System.Boolean
      description: If set to <code>true</code>, treats horizontal white-space (i.e. spaces, tabs, and others; see remarks), including zero quantities, as equivalent.
    return:
      type: Xunit.Sdk.AssertEqualityResult
    content.vb: Public Shared Function Equivalent(expected As ReadOnlySpan(Of Char), actual As ReadOnlySpan(Of Char), ignoreCase As Boolean = False, ignoreLineEndingDifferences As Boolean = False, ignoreWhiteSpaceDifferences As Boolean = False, ignoreAllWhiteSpace As Boolean = False) As AssertEqualityResult
  overload: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent*
  nameWithType.vb: StringAssertEqualityComparer.Equivalent(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Boolean, Boolean, Boolean, Boolean)
  fullName.vb: Xunit.Sdk.StringAssertEqualityComparer.Equivalent(System.ReadOnlySpan(Of Char), System.ReadOnlySpan(Of Char), Boolean, Boolean, Boolean, Boolean)
  name.vb: Equivalent(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Boolean, Boolean, Boolean, Boolean)
references:
- uid: v3.2.0.2:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.2.0.2:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.2:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.2.0.2:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.2:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.2.0.2:Xunit.Sdk.StringAssertEqualityComparer.Equivalent*
  commentId: Overload:Xunit.Sdk.StringAssertEqualityComparer.Equivalent
  href: Xunit.Sdk.StringAssertEqualityComparer.Equivalent.html#Xunit_Sdk_StringAssertEqualityComparer_Equivalent_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: Equivalent
  nameWithType: StringAssertEqualityComparer.Equivalent
  fullName: Xunit.Sdk.StringAssertEqualityComparer.Equivalent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: v3.2.0.2:Xunit.Sdk.AssertEqualityResult
  commentId: T:Xunit.Sdk.AssertEqualityResult
  parent: v3.2.0.2:Xunit.Sdk
  href: Xunit.Sdk.AssertEqualityResult.html
  name: AssertEqualityResult
  nameWithType: AssertEqualityResult
  fullName: Xunit.Sdk.AssertEqualityResult
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
