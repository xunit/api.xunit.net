### YamlMime:ManagedReference
items:
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  commentId: T:Xunit.v3.ExtensibilityPointFactory
  id: ExtensibilityPointFactory
  parent: v3.2.0.2:Xunit.v3
  children:
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)
  - v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])
  langs:
  - csharp
  - vb
  name: ExtensibilityPointFactory
  nameWithType: ExtensibilityPointFactory
  fullName: Xunit.v3.ExtensibilityPointFactory
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: ExtensibilityPointFactory
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
    startLine: 11
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Represents a factory for the types used for extensibility throughout the system.
  example: []
  syntax:
    content: public static class ExtensibilityPointFactory
    content.vb: Public Module ExtensibilityPointFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])
  commentId: M:Xunit.v3.ExtensibilityPointFactory.Get``1(System.Type,System.Object[])
  id: Get``1(System.Type,System.Object[])
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: Get<TInterface>(Type?, object?[]?)
  nameWithType: ExtensibilityPointFactory.Get<TInterface>(Type?, object?[]?)
  fullName: Xunit.v3.ExtensibilityPointFactory.Get<TInterface>(System.Type?, object?[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: Get
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
    startLine: 51
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets an instance of the given type, casting it to <code class="typeparamref">TInterface</code>, using the provided

    constructor arguments.
  example: []
  syntax:
    content: 'public static TInterface? Get<TInterface>(Type? type, object?[]? ctorArgs = null) where TInterface : class'
    parameters:
    - id: type
      type: System.Type
      description: The implementation type.
    - id: ctorArgs
      type: System.Object[]
      description: >-
        The constructor arguments. Since diagnostic message sinks are optional,
            the code first looks for a type that takes the given arguments plus the message sink, and only
            falls back to the message sink-less constructor if none was found.
    typeParameters:
    - id: TInterface
      description: The interface type.
    return:
      type: '{TInterface}'
      description: The instance of the type.
    content.vb: Public Shared Function [Get](Of TInterface As Class)(type As Type, ctorArgs As Object() = Nothing) As TInterface
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.Get*
  nameWithType.vb: ExtensibilityPointFactory.Get(Of TInterface)(Type, Object())
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.Get(Of TInterface)(System.Type, Object())
  name.vb: Get(Of TInterface)(Type, Object())
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)
  id: GetTestFramework(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetTestFramework(Assembly)
  nameWithType: ExtensibilityPointFactory.GetTestFramework(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetTestFramework(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetTestFramework
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
    startLine: 66
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the test framework object for the given test assembly. It is important that callers to this function have

    called <xref href="v3.2.0.2:Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> before calling this, so that the test framework and

    any ancillary helper classes have access to the diagnostic and internal diagnostic message sinks.
  example: []
  syntax:
    content: public static ITestFramework GetTestFramework(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly to get the test framework for
    return:
      type: Xunit.v3.ITestFramework
      description: The test framework object
    content.vb: Public Shared Function GetTestFramework(testAssembly As Assembly) As ITestFramework
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetTestFramework*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)
  id: GetXunitTestCaseDiscoverer(System.Type)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetXunitTestCaseDiscoverer(Type)
  nameWithType: ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(Type)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer(System.Type)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetXunitTestCaseDiscoverer
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
    startLine: 89
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets an xUnit.net v3 test discoverer.
  example: []
  syntax:
    content: public static IXunitTestCaseDiscoverer? GetXunitTestCaseDiscoverer(Type testCaseDiscovererType)
    parameters:
    - id: testCaseDiscovererType
      type: System.Type
      description: The test case discoverer type
    return:
      type: Xunit.v3.IXunitTestCaseDiscoverer
    content.vb: Public Shared Function GetXunitTestCaseDiscoverer(testCaseDiscovererType As Type) As IXunitTestCaseDiscoverer
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)
  id: GetXunitTestCollectionFactory(System.Type,Xunit.v3.IXunitTestAssembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)
  nameWithType: ExtensibilityPointFactory.GetXunitTestCollectionFactory(Type?, IXunitTestAssembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type?, Xunit.v3.IXunitTestAssembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetXunitTestCollectionFactory
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.cs
    startLine: 97
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets an xUnit.net v3 test collection factory.
  example: []
  syntax:
    content: public static IXunitTestCollectionFactory? GetXunitTestCollectionFactory(Type? testCollectionFactoryType, IXunitTestAssembly testAssembly)
    parameters:
    - id: testCollectionFactoryType
      type: System.Type
      description: The test collection factory type
    - id: testAssembly
      type: Xunit.v3.IXunitTestAssembly
      description: The test assembly under test
    return:
      type: Xunit.v3.IXunitTestCollectionFactory
    content.vb: Public Shared Function GetXunitTestCollectionFactory(testCollectionFactoryType As Type, testAssembly As IXunitTestAssembly) As IXunitTestCollectionFactory
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory*
  nameWithType.vb: ExtensibilityPointFactory.GetXunitTestCollectionFactory(Type, IXunitTestAssembly)
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory(System.Type, Xunit.v3.IXunitTestAssembly)
  name.vb: GetXunitTestCollectionFactory(Type, IXunitTestAssembly)
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)
  id: GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyBeforeAfterTestAttributes(Assembly)
  nameWithType: ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetAssemblyBeforeAfterTestAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
    startLine: 18
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given test assembly.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetAssemblyBeforeAfterTestAttributes(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
    content.vb: Public Shared Function GetAssemblyBeforeAfterTestAttributes(testAssembly As Assembly) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)
  id: GetAssemblyFixtureTypes(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyFixtureTypes(Assembly)
  nameWithType: ExtensibilityPointFactory.GetAssemblyFixtureTypes(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetAssemblyFixtureTypes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
    startLine: 28
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the fixture types that are attached to the test assembly via <xref href="v3.2.0.2:Xunit.v3.IAssemblyFixtureAttribute" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static IReadOnlyCollection<Type> GetAssemblyFixtureTypes(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
    content.vb: Public Shared Function GetAssemblyFixtureTypes(testAssembly As Assembly) As IReadOnlyCollection(Of Type)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)
  id: GetAssemblyTestCaseOrderer(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyTestCaseOrderer(Assembly)
  nameWithType: ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetAssemblyTestCaseOrderer
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
    startLine: 40
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the test case orderer that's attached to a test assembly. Returns <code>null</code> if there

    isn't one attached.
  example: []
  syntax:
    content: public static ITestCaseOrderer? GetAssemblyTestCaseOrderer(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: Xunit.v3.ITestCaseOrderer
    content.vb: Public Shared Function GetAssemblyTestCaseOrderer(testAssembly As Assembly) As ITestCaseOrderer
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)
  id: GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyTestCollectionOrderer(Assembly)
  nameWithType: ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetAssemblyTestCollectionOrderer
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
    startLine: 81
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the test collection orderer that's attached to a test assembly. Returns <code>null</code> if there

    isn't one attached.
  example: []
  syntax:
    content: public static ITestCollectionOrderer? GetAssemblyTestCollectionOrderer(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: Xunit.v3.ITestCollectionOrderer
    content.vb: Public Shared Function GetAssemblyTestCollectionOrderer(testAssembly As Assembly) As ITestCollectionOrderer
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)
  id: GetAssemblyTraits(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyTraits(Assembly)
  nameWithType: ExtensibilityPointFactory.GetAssemblyTraits(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetAssemblyTraits
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestAssembly.cs
    startLine: 119
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the traits that are attached to the test assembly via <xref href="v3.2.0.2:Xunit.v3.ITraitAttribute" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetAssemblyTraits(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Shared Function GetAssemblyTraits(testAssembly As Assembly) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  id: GetClassBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  nameWithType: ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetClassBeforeAfterTestAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
    startLine: 19
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given test class.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetClassBeforeAfterTestAttributes(Type testClass, IReadOnlyCollection<IBeforeAfterTestAttribute> collectionBeforeAfterAttributes)
    parameters:
    - id: testClass
      type: System.Type
      description: The test class
    - id: collectionBeforeAfterAttributes
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
      description: >-
        The before after attributes from the test collection,
            to be merged into the result.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
    content.vb: Public Shared Function GetClassBeforeAfterTestAttributes(testClass As Type, collectionBeforeAfterAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes*
  nameWithType.vb: ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))
  name.vb: GetClassBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})
  id: GetClassClassFixtureTypes(System.Type,System.Collections.Generic.IReadOnlyCollection{System.Type})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetClassClassFixtureTypes(Type, IReadOnlyCollection<Type>)
  nameWithType: ExtensibilityPointFactory.GetClassClassFixtureTypes(Type, IReadOnlyCollection<Type>)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type, System.Collections.Generic.IReadOnlyCollection<System.Type>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetClassClassFixtureTypes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
    startLine: 32
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the fixture types that are attached to the test class via <xref href="v3.2.0.2:Xunit.IClassFixture%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IReadOnlyCollection<Type> GetClassClassFixtureTypes(Type testClass, IReadOnlyCollection<Type> collectionClassFixtureTypes)
    parameters:
    - id: testClass
      type: System.Type
      description: The test class
    - id: collectionClassFixtureTypes
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
      description: >-
        The class fixture types from the test collection, which
            will be merged into the result
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
    content.vb: Public Shared Function GetClassClassFixtureTypes(testClass As Type, collectionClassFixtureTypes As IReadOnlyCollection(Of Type)) As IReadOnlyCollection(Of Type)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes*
  nameWithType.vb: ExtensibilityPointFactory.GetClassClassFixtureTypes(Type, IReadOnlyCollection(Of Type))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of System.Type))
  name.vb: GetClassClassFixtureTypes(Type, IReadOnlyCollection(Of Type))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)
  id: GetClassTestCaseOrderer(System.Type)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetClassTestCaseOrderer(Type)
  nameWithType: ExtensibilityPointFactory.GetClassTestCaseOrderer(Type)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer(System.Type)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetClassTestCaseOrderer
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
    startLine: 47
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the test case orderer that's attached to a test class. Returns <code>null</code> if there

    isn't one attached.
  example: []
  syntax:
    content: public static ITestCaseOrderer? GetClassTestCaseOrderer(Type testClass)
    parameters:
    - id: testClass
      type: System.Type
      description: The test class
    return:
      type: Xunit.v3.ITestCaseOrderer
    content.vb: Public Shared Function GetClassTestCaseOrderer(testClass As Type) As ITestCaseOrderer
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  id: GetClassTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetClassTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  nameWithType: ExtensibilityPointFactory.GetClassTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type?, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetClassTraits
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestClass.cs
    startLine: 90
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the traits that are attached to the test class via <xref href="v3.2.0.2:Xunit.v3.ITraitAttribute" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetClassTraits(Type? testClass, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testCollectionTraits)
    parameters:
    - id: testClass
      type: System.Type
      description: The test class
    - id: testCollectionTraits
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
      description: The traits inherited from the test collection
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Shared Function GetClassTraits(testClass As Type, testCollectionTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTraits*
  nameWithType.vb: ExtensibilityPointFactory.GetClassTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetClassTraits(System.Type, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))
  name.vb: GetClassTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  id: GetCollectionBeforeAfterTestAttributes(System.Type,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  nameWithType: ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(Type?, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type?, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionBeforeAfterTestAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 20
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given test collection.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetCollectionBeforeAfterTestAttributes(Type? collectionDefinition, IReadOnlyCollection<IBeforeAfterTestAttribute> assemblyBeforeAfterTestAttributes)
    parameters:
    - id: collectionDefinition
      type: System.Type
      description: The collection definition type
    - id: assemblyBeforeAfterTestAttributes
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
      description: >-
        The before after attributes from the test assembly,
            to be merged into the result.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
    content.vb: Public Shared Function GetCollectionBeforeAfterTestAttributes(collectionDefinition As Type, assemblyBeforeAfterTestAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes*
  nameWithType.vb: ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes(System.Type, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))
  name.vb: GetCollectionBeforeAfterTestAttributes(Type, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)
  id: GetCollectionBehavior(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionBehavior(Assembly)
  nameWithType: ExtensibilityPointFactory.GetCollectionBehavior(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionBehavior
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 38
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.ICollectionBehaviorAttribute" data-throw-if-not-resolved="false"></xref> that's attached to the test assembly, if there is one.
  example: []
  syntax:
    content: public static ICollectionBehaviorAttribute? GetCollectionBehavior(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: Xunit.v3.ICollectionBehaviorAttribute
    content.vb: Public Shared Function GetCollectionBehavior(testAssembly As Assembly) As ICollectionBehaviorAttribute
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)
  id: GetCollectionDefinitions(System.Reflection.Assembly)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionDefinitions(Assembly)
  nameWithType: ExtensibilityPointFactory.GetCollectionDefinitions(Assembly)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionDefinitions
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 60
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the <xref href="v3.2.0.2:Xunit.CollectionDefinitionAttribute" data-throw-if-not-resolved="false"></xref>s that are attached to the test assembly.

    Verifies that there are no collection definitions with identical names.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)> GetCollectionDefinitions(Assembly testAssembly)
    parameters:
    - id: testAssembly
      type: System.Reflection.Assembly
      description: The test assembly
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}}
    content.vb: Public Shared Function GetCollectionDefinitions(testAssembly As Assembly) As IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)
  id: GetCollectionClassFixtureTypes(System.Type)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionClassFixtureTypes(Type?)
  nameWithType: ExtensibilityPointFactory.GetCollectionClassFixtureTypes(Type?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionClassFixtureTypes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 94
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the fixture types that are attached to the test collection via <xref href="v3.2.0.2:Xunit.IClassFixture%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IReadOnlyCollection<Type> GetCollectionClassFixtureTypes(Type? collectionDefinition)
    parameters:
    - id: collectionDefinition
      type: System.Type
      description: The test collection definition type
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
      description: ''
    content.vb: Public Shared Function GetCollectionClassFixtureTypes(collectionDefinition As Type) As IReadOnlyCollection(Of Type)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes*
  nameWithType.vb: ExtensibilityPointFactory.GetCollectionClassFixtureTypes(Type)
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes(System.Type)
  name.vb: GetCollectionClassFixtureTypes(Type)
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)
  id: GetCollectionCollectionFixtureTypes(System.Type)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionCollectionFixtureTypes(Type?)
  nameWithType: ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(Type?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionCollectionFixtureTypes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 108
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the fixture types that are attached to the test collection via <xref href="v3.2.0.2:Xunit.ICollectionFixture%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IReadOnlyCollection<Type> GetCollectionCollectionFixtureTypes(Type? collectionDefinition)
    parameters:
    - id: collectionDefinition
      type: System.Type
      description: The test collection definition type
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Type}
      description: ''
    content.vb: Public Shared Function GetCollectionCollectionFixtureTypes(collectionDefinition As Type) As IReadOnlyCollection(Of Type)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes*
  nameWithType.vb: ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(Type)
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes(System.Type)
  name.vb: GetCollectionCollectionFixtureTypes(Type)
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)
  id: GetCollectionTestCaseOrderer(System.Type)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionTestCaseOrderer(Type?)
  nameWithType: ExtensibilityPointFactory.GetCollectionTestCaseOrderer(Type?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionTestCaseOrderer
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 122
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the test case orderer that's attached to a test collection. Returns <code>null</code> if there

    isn't one attached.
  example: []
  syntax:
    content: public static ITestCaseOrderer? GetCollectionTestCaseOrderer(Type? collectionDefinition)
    parameters:
    - id: collectionDefinition
      type: System.Type
      description: The test collection definition
    return:
      type: Xunit.v3.ITestCaseOrderer
    content.vb: Public Shared Function GetCollectionTestCaseOrderer(collectionDefinition As Type) As ITestCaseOrderer
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer*
  nameWithType.vb: ExtensibilityPointFactory.GetCollectionTestCaseOrderer(Type)
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer(System.Type)
  name.vb: GetCollectionTestCaseOrderer(Type)
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  id: GetCollectionTraits(System.Type,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetCollectionTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  nameWithType: ExtensibilityPointFactory.GetCollectionTraits(Type?, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type?, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetCollectionTraits
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestCollection.cs
    startLine: 166
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the traits that are attached to the test collection via <xref href="v3.2.0.2:Xunit.v3.ITraitAttribute" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetCollectionTraits(Type? testCollectionDefinition, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testAssemblyTraits)
    parameters:
    - id: testCollectionDefinition
      type: System.Type
      description: The test collection
    - id: testAssemblyTraits
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
      description: The traits inherited from the test assembly
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Shared Function GetCollectionTraits(testCollectionDefinition As Type, testAssemblyTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits*
  nameWithType.vb: ExtensibilityPointFactory.GetCollectionTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits(System.Type, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))
  name.vb: GetCollectionTraits(Type, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  id: GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  nameWithType: ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection<IBeforeAfterTestAttribute>)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetMethodBeforeAfterTestAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
    startLine: 19
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given method.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IBeforeAfterTestAttribute> GetMethodBeforeAfterTestAttributes(MethodInfo testMethod, IReadOnlyCollection<IBeforeAfterTestAttribute> classBeforeAfterAttributes)
    parameters:
    - id: testMethod
      type: System.Reflection.MethodInfo
      description: The test method
    - id: classBeforeAfterAttributes
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
      description: >-
        The before after attributes from the test class,
            to be merged into the result.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
    content.vb: Public Shared Function GetMethodBeforeAfterTestAttributes(testMethod As MethodInfo, classBeforeAfterAttributes As IReadOnlyCollection(Of IBeforeAfterTestAttribute)) As IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes*
  nameWithType.vb: ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute))
  name.vb: GetMethodBeforeAfterTestAttributes(MethodInfo, IReadOnlyCollection(Of IBeforeAfterTestAttribute))
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)
  id: GetMethodDataAttributes(System.Reflection.MethodInfo)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetMethodDataAttributes(MethodInfo)
  nameWithType: ExtensibilityPointFactory.GetMethodDataAttributes(MethodInfo)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes(System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetMethodDataAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
    startLine: 30
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IDataAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given test method.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IDataAttribute> GetMethodDataAttributes(MethodInfo testMethod)
    parameters:
    - id: testMethod
      type: System.Reflection.MethodInfo
      description: The test method
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IDataAttribute}
    content.vb: Public Shared Function GetMethodDataAttributes(testMethod As MethodInfo) As IReadOnlyCollection(Of IDataAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)
  id: GetMethodFactAttributes(System.Reflection.MethodInfo)
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetMethodFactAttributes(MethodInfo)
  nameWithType: ExtensibilityPointFactory.GetMethodFactAttributes(MethodInfo)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes(System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetMethodFactAttributes
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
    startLine: 48
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the <xref href="v3.2.0.2:Xunit.v3.IFactAttribute" data-throw-if-not-resolved="false"></xref>s attached to the given test method.
  example: []
  syntax:
    content: public static IReadOnlyCollection<IFactAttribute> GetMethodFactAttributes(MethodInfo testMethod)
    parameters:
    - id: testMethod
      type: System.Reflection.MethodInfo
      description: The test method
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IFactAttribute}
    content.vb: Public Shared Function GetMethodFactAttributes(testMethod As MethodInfo) As IReadOnlyCollection(Of IFactAttribute)
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes*
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  commentId: M:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  id: GetMethodTraits(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})
  parent: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory
  langs:
  - csharp
  - vb
  name: GetMethodTraits(MethodInfo, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  nameWithType: ExtensibilityPointFactory.GetMethodTraits(MethodInfo, IReadOnlyDictionary<string, IReadOnlyCollection<string>>?)
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
      branch: ccd27e9792077b9ee82f40320c6f414e6a0338de
      repo: https://github.com/xunit/xunit
    id: GetMethodTraits
    path: ../src/xunit.v3.core/Utility/ExtensibilityPointFactory.TestMethod.cs
    startLine: 59
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Gets the traits that are attached to the test method via <xref href="v3.2.0.2:Xunit.v3.ITraitAttribute" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>> GetMethodTraits(MethodInfo testMethod, IReadOnlyDictionary<string, IReadOnlyCollection<string>>? testClassTraits)
    parameters:
    - id: testMethod
      type: System.Reflection.MethodInfo
      description: The test method
    - id: testClassTraits
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
      description: The traits inherited from the test class
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Shared Function GetMethodTraits(testMethod As MethodInfo, testClassTraits As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits*
  nameWithType.vb: ExtensibilityPointFactory.GetMethodTraits(MethodInfo, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
  fullName.vb: Xunit.v3.ExtensibilityPointFactory.GetMethodTraits(System.Reflection.MethodInfo, System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String)))
  name.vb: GetMethodTraits(MethodInfo, IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String)))
references:
- uid: v3.2.0.2:Xunit.v3
  commentId: N:Xunit.v3
  href: Xunit.html
  name: Xunit.v3
  nameWithType: Xunit.v3
  fullName: Xunit.v3
  spec.csharp:
  - uid: v3.2.0.2:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.2:Xunit.v3
    name: v3
    href: Xunit.v3.html
  spec.vb:
  - uid: v3.2.0.2:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.2:Xunit.v3
    name: v3
    href: Xunit.v3.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.Get*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.Get
  href: Xunit.v3.ExtensibilityPointFactory.Get.html#Xunit_v3_ExtensibilityPointFactory_Get__1_System_Type_System_Object___
  name: Get
  nameWithType: ExtensibilityPointFactory.Get
  fullName: Xunit.v3.ExtensibilityPointFactory.Get
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: '{TInterface}'
  commentId: '!:TInterface'
  definition: TInterface
  name: TInterface
  nameWithType: TInterface
  fullName: TInterface
- uid: TInterface
  commentId: '!:TInterface'
  name: TInterface
  nameWithType: TInterface
  fullName: TInterface
- uid: v3.2.0.2:Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink,System.Boolean,System.Boolean)
  commentId: M:Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink,System.Boolean,System.Boolean)
  isExternal: true
  href: Xunit.TestContext.SetForInitialization.html#Xunit_TestContext_SetForInitialization_Xunit_Sdk_IMessageSink_System_Boolean_System_Boolean_
  name: SetForInitialization(IMessageSink, bool, bool)
  nameWithType: TestContext.SetForInitialization(IMessageSink, bool, bool)
  fullName: Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink, bool, bool)
  nameWithType.vb: TestContext.SetForInitialization(IMessageSink, Boolean, Boolean)
  fullName.vb: Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink, Boolean, Boolean)
  name.vb: SetForInitialization(IMessageSink, Boolean, Boolean)
  spec.csharp:
  - uid: v3.2.0.2:Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink,System.Boolean,System.Boolean)
    name: SetForInitialization
    href: Xunit.TestContext.SetForInitialization.html#Xunit_TestContext_SetForInitialization_Xunit_Sdk_IMessageSink_System_Boolean_System_Boolean_
  - name: (
  - uid: v3.2.0.2:Xunit.Sdk.IMessageSink
    name: IMessageSink
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: v3.2.0.2:Xunit.TestContext.SetForInitialization(Xunit.Sdk.IMessageSink,System.Boolean,System.Boolean)
    name: SetForInitialization
    href: Xunit.TestContext.SetForInitialization.html#Xunit_TestContext_SetForInitialization_Xunit_Sdk_IMessageSink_System_Boolean_System_Boolean_
  - name: (
  - uid: v3.2.0.2:Xunit.Sdk.IMessageSink
    name: IMessageSink
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetTestFramework*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetTestFramework
  href: Xunit.v3.ExtensibilityPointFactory.GetTestFramework.html#Xunit_v3_ExtensibilityPointFactory_GetTestFramework_System_Reflection_Assembly_
  name: GetTestFramework
  nameWithType: ExtensibilityPointFactory.GetTestFramework
  fullName: Xunit.v3.ExtensibilityPointFactory.GetTestFramework
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: v3.2.0.2:Xunit.v3.ITestFramework
  commentId: T:Xunit.v3.ITestFramework
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.ITestFramework.html
  name: ITestFramework
  nameWithType: ITestFramework
  fullName: Xunit.v3.ITestFramework
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer
  href: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer.html#Xunit_v3_ExtensibilityPointFactory_GetXunitTestCaseDiscoverer_System_Type_
  name: GetXunitTestCaseDiscoverer
  nameWithType: ExtensibilityPointFactory.GetXunitTestCaseDiscoverer
  fullName: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCaseDiscoverer
- uid: v3.2.0.2:Xunit.v3.IXunitTestCaseDiscoverer
  commentId: T:Xunit.v3.IXunitTestCaseDiscoverer
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IXunitTestCaseDiscoverer.html
  name: IXunitTestCaseDiscoverer
  nameWithType: IXunitTestCaseDiscoverer
  fullName: Xunit.v3.IXunitTestCaseDiscoverer
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory
  href: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory.html#Xunit_v3_ExtensibilityPointFactory_GetXunitTestCollectionFactory_System_Type_Xunit_v3_IXunitTestAssembly_
  name: GetXunitTestCollectionFactory
  nameWithType: ExtensibilityPointFactory.GetXunitTestCollectionFactory
  fullName: Xunit.v3.ExtensibilityPointFactory.GetXunitTestCollectionFactory
- uid: v3.2.0.2:Xunit.v3.IXunitTestAssembly
  commentId: T:Xunit.v3.IXunitTestAssembly
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IXunitTestAssembly.html
  name: IXunitTestAssembly
  nameWithType: IXunitTestAssembly
  fullName: Xunit.v3.IXunitTestAssembly
- uid: v3.2.0.2:Xunit.v3.IXunitTestCollectionFactory
  commentId: T:Xunit.v3.IXunitTestCollectionFactory
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IXunitTestCollectionFactory.html
  name: IXunitTestCollectionFactory
  nameWithType: IXunitTestCollectionFactory
  fullName: Xunit.v3.IXunitTestCollectionFactory
- uid: v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute
  commentId: T:Xunit.v3.IBeforeAfterTestAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IBeforeAfterTestAttribute.html
  name: IBeforeAfterTestAttribute
  nameWithType: IBeforeAfterTestAttribute
  fullName: Xunit.v3.IBeforeAfterTestAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetAssemblyBeforeAfterTestAttributes_System_Reflection_Assembly_
  name: GetAssemblyBeforeAfterTestAttributes
  nameWithType: ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyBeforeAfterTestAttributes
- uid: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IBeforeAfterTestAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IBeforeAfterTestAttribute>
  nameWithType: IReadOnlyCollection<IBeforeAfterTestAttribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IBeforeAfterTestAttribute>
  nameWithType.vb: IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IBeforeAfterTestAttribute)
  name.vb: IReadOnlyCollection(Of IBeforeAfterTestAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute
    name: IBeforeAfterTestAttribute
    href: Xunit.v3.IBeforeAfterTestAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.2.0.2:Xunit.v3.IBeforeAfterTestAttribute
    name: IBeforeAfterTestAttribute
    href: Xunit.v3.IBeforeAfterTestAttribute.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: v3.2.0.2:Xunit.v3.IAssemblyFixtureAttribute
  commentId: T:Xunit.v3.IAssemblyFixtureAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IAssemblyFixtureAttribute.html
  name: IAssemblyFixtureAttribute
  nameWithType: IAssemblyFixtureAttribute
  fullName: Xunit.v3.IAssemblyFixtureAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes
  href: Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes.html#Xunit_v3_ExtensibilityPointFactory_GetAssemblyFixtureTypes_System_Reflection_Assembly_
  name: GetAssemblyFixtureTypes
  nameWithType: ExtensibilityPointFactory.GetAssemblyFixtureTypes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyFixtureTypes
- uid: System.Collections.Generic.IReadOnlyCollection{System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Type>
  nameWithType: IReadOnlyCollection<Type>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Type>
  nameWithType.vb: IReadOnlyCollection(Of Type)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Type)
  name.vb: IReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer
  href: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer.html#Xunit_v3_ExtensibilityPointFactory_GetAssemblyTestCaseOrderer_System_Reflection_Assembly_
  name: GetAssemblyTestCaseOrderer
  nameWithType: ExtensibilityPointFactory.GetAssemblyTestCaseOrderer
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCaseOrderer
- uid: v3.2.0.2:Xunit.v3.ITestCaseOrderer
  commentId: T:Xunit.v3.ITestCaseOrderer
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.ITestCaseOrderer.html
  name: ITestCaseOrderer
  nameWithType: ITestCaseOrderer
  fullName: Xunit.v3.ITestCaseOrderer
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer
  href: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer.html#Xunit_v3_ExtensibilityPointFactory_GetAssemblyTestCollectionOrderer_System_Reflection_Assembly_
  name: GetAssemblyTestCollectionOrderer
  nameWithType: ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTestCollectionOrderer
- uid: v3.2.0.2:Xunit.v3.ITestCollectionOrderer
  commentId: T:Xunit.v3.ITestCollectionOrderer
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.ITestCollectionOrderer.html
  name: ITestCollectionOrderer
  nameWithType: ITestCollectionOrderer
  fullName: Xunit.v3.ITestCollectionOrderer
- uid: v3.2.0.2:Xunit.v3.ITraitAttribute
  commentId: T:Xunit.v3.ITraitAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.ITraitAttribute.html
  name: ITraitAttribute
  nameWithType: ITraitAttribute
  fullName: Xunit.v3.ITraitAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits
  href: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits.html#Xunit_v3_ExtensibilityPointFactory_GetAssemblyTraits_System_Reflection_Assembly_
  name: GetAssemblyTraits
  nameWithType: ExtensibilityPointFactory.GetAssemblyTraits
  fullName: Xunit.v3.ExtensibilityPointFactory.GetAssemblyTraits
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, IReadOnlyCollection<string>>
  nameWithType: IReadOnlyDictionary<string, IReadOnlyCollection<string>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>
  nameWithType.vb: IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))
  name.vb: IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetClassBeforeAfterTestAttributes_System_Type_System_Collections_Generic_IReadOnlyCollection_Xunit_v3_IBeforeAfterTestAttribute__
  name: GetClassBeforeAfterTestAttributes
  nameWithType: ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassBeforeAfterTestAttributes
- uid: v3.2.0.2:Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  href: Xunit.IClassFixture-1.html
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullName.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: v3.2.0.2:Xunit.IClassFixture`1
    name: IClassFixture
    href: Xunit.IClassFixture-1.html
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: v3.2.0.2:Xunit.IClassFixture`1
    name: IClassFixture
    href: Xunit.IClassFixture-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes
  href: Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes.html#Xunit_v3_ExtensibilityPointFactory_GetClassClassFixtureTypes_System_Type_System_Collections_Generic_IReadOnlyCollection_System_Type__
  name: GetClassClassFixtureTypes
  nameWithType: ExtensibilityPointFactory.GetClassClassFixtureTypes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassClassFixtureTypes
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer
  href: Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer.html#Xunit_v3_ExtensibilityPointFactory_GetClassTestCaseOrderer_System_Type_
  name: GetClassTestCaseOrderer
  nameWithType: ExtensibilityPointFactory.GetClassTestCaseOrderer
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassTestCaseOrderer
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetClassTraits*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetClassTraits
  href: Xunit.v3.ExtensibilityPointFactory.GetClassTraits.html#Xunit_v3_ExtensibilityPointFactory_GetClassTraits_System_Type_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Collections_Generic_IReadOnlyCollection_System_String___
  name: GetClassTraits
  nameWithType: ExtensibilityPointFactory.GetClassTraits
  fullName: Xunit.v3.ExtensibilityPointFactory.GetClassTraits
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionBeforeAfterTestAttributes_System_Type_System_Collections_Generic_IReadOnlyCollection_Xunit_v3_IBeforeAfterTestAttribute__
  name: GetCollectionBeforeAfterTestAttributes
  nameWithType: ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionBeforeAfterTestAttributes
- uid: v3.2.0.2:Xunit.v3.ICollectionBehaviorAttribute
  commentId: T:Xunit.v3.ICollectionBehaviorAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.ICollectionBehaviorAttribute.html
  name: ICollectionBehaviorAttribute
  nameWithType: ICollectionBehaviorAttribute
  fullName: Xunit.v3.ICollectionBehaviorAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionBehavior_System_Reflection_Assembly_
  name: GetCollectionBehavior
  nameWithType: ExtensibilityPointFactory.GetCollectionBehavior
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionBehavior
- uid: v3.2.0.2:Xunit.CollectionDefinitionAttribute
  commentId: T:Xunit.CollectionDefinitionAttribute
  href: Xunit.CollectionDefinitionAttribute.html
  name: CollectionDefinitionAttribute
  nameWithType: CollectionDefinitionAttribute
  fullName: Xunit.CollectionDefinitionAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionDefinitions_System_Reflection_Assembly_
  name: GetCollectionDefinitions
  nameWithType: ExtensibilityPointFactory.GetCollectionDefinitions
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionDefinitions
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)>
  nameWithType: IReadOnlyDictionary<string, (Type Type, CollectionDefinitionAttribute Attribute)>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, (System.Type Type, Xunit.CollectionDefinitionAttribute Attribute)>
  nameWithType.vb: IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, (Type As System.Type, Attribute As Xunit.CollectionDefinitionAttribute))
  name.vb: IReadOnlyDictionary(Of String, (Type As Type, Attribute As CollectionDefinitionAttribute))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: " "
  - uid: System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.type
  - name: ','
  - name: " "
  - uid: v3.2.0.2:Xunit.CollectionDefinitionAttribute
    name: CollectionDefinitionAttribute
    href: Xunit.CollectionDefinitionAttribute.html
  - name: " "
  - uid: System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}.Attribute
    name: Attribute
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.attribute
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.type
  - name: " "
  - name: As
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Type,Xunit.CollectionDefinitionAttribute}.Attribute
    name: Attribute
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,xunit.collectiondefinitionattribute-.attribute
  - name: " "
  - name: As
  - name: " "
  - uid: v3.2.0.2:Xunit.CollectionDefinitionAttribute
    name: CollectionDefinitionAttribute
    href: Xunit.CollectionDefinitionAttribute.html
  - name: )
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionClassFixtureTypes_System_Type_
  name: GetCollectionClassFixtureTypes
  nameWithType: ExtensibilityPointFactory.GetCollectionClassFixtureTypes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionClassFixtureTypes
- uid: v3.2.0.2:Xunit.ICollectionFixture`1
  commentId: T:Xunit.ICollectionFixture`1
  href: Xunit.ICollectionFixture-1.html
  name: ICollectionFixture<TFixture>
  nameWithType: ICollectionFixture<TFixture>
  fullName: Xunit.ICollectionFixture<TFixture>
  nameWithType.vb: ICollectionFixture(Of TFixture)
  fullName.vb: Xunit.ICollectionFixture(Of TFixture)
  name.vb: ICollectionFixture(Of TFixture)
  spec.csharp:
  - uid: v3.2.0.2:Xunit.ICollectionFixture`1
    name: ICollectionFixture
    href: Xunit.ICollectionFixture-1.html
  - name: <
  - name: TFixture
  - name: '>'
  spec.vb:
  - uid: v3.2.0.2:Xunit.ICollectionFixture`1
    name: ICollectionFixture
    href: Xunit.ICollectionFixture-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TFixture
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionCollectionFixtureTypes_System_Type_
  name: GetCollectionCollectionFixtureTypes
  nameWithType: ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionCollectionFixtureTypes
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionTestCaseOrderer_System_Type_
  name: GetCollectionTestCaseOrderer
  nameWithType: ExtensibilityPointFactory.GetCollectionTestCaseOrderer
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionTestCaseOrderer
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits
  href: Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits.html#Xunit_v3_ExtensibilityPointFactory_GetCollectionTraits_System_Type_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Collections_Generic_IReadOnlyCollection_System_String___
  name: GetCollectionTraits
  nameWithType: ExtensibilityPointFactory.GetCollectionTraits
  fullName: Xunit.v3.ExtensibilityPointFactory.GetCollectionTraits
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetMethodBeforeAfterTestAttributes_System_Reflection_MethodInfo_System_Collections_Generic_IReadOnlyCollection_Xunit_v3_IBeforeAfterTestAttribute__
  name: GetMethodBeforeAfterTestAttributes
  nameWithType: ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodBeforeAfterTestAttributes
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: v3.2.0.2:Xunit.v3.IDataAttribute
  commentId: T:Xunit.v3.IDataAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IDataAttribute.html
  name: IDataAttribute
  nameWithType: IDataAttribute
  fullName: Xunit.v3.IDataAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetMethodDataAttributes_System_Reflection_MethodInfo_
  name: GetMethodDataAttributes
  nameWithType: ExtensibilityPointFactory.GetMethodDataAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodDataAttributes
- uid: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IDataAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IDataAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IDataAttribute>
  nameWithType: IReadOnlyCollection<IDataAttribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IDataAttribute>
  nameWithType.vb: IReadOnlyCollection(Of IDataAttribute)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IDataAttribute)
  name.vb: IReadOnlyCollection(Of IDataAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: v3.2.0.2:Xunit.v3.IDataAttribute
    name: IDataAttribute
    href: Xunit.v3.IDataAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.2.0.2:Xunit.v3.IDataAttribute
    name: IDataAttribute
    href: Xunit.v3.IDataAttribute.html
  - name: )
- uid: v3.2.0.2:Xunit.v3.IFactAttribute
  commentId: T:Xunit.v3.IFactAttribute
  parent: v3.2.0.2:Xunit.v3
  href: Xunit.v3.IFactAttribute.html
  name: IFactAttribute
  nameWithType: IFactAttribute
  fullName: Xunit.v3.IFactAttribute
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes
  href: Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes.html#Xunit_v3_ExtensibilityPointFactory_GetMethodFactAttributes_System_Reflection_MethodInfo_
  name: GetMethodFactAttributes
  nameWithType: ExtensibilityPointFactory.GetMethodFactAttributes
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodFactAttributes
- uid: System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IFactAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Xunit.v3.IFactAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IFactAttribute>
  nameWithType: IReadOnlyCollection<IFactAttribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<Xunit.v3.IFactAttribute>
  nameWithType.vb: IReadOnlyCollection(Of IFactAttribute)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Xunit.v3.IFactAttribute)
  name.vb: IReadOnlyCollection(Of IFactAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: v3.2.0.2:Xunit.v3.IFactAttribute
    name: IFactAttribute
    href: Xunit.v3.IFactAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.2.0.2:Xunit.v3.IFactAttribute
    name: IFactAttribute
    href: Xunit.v3.IFactAttribute.html
  - name: )
- uid: v3.2.0.2:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits*
  commentId: Overload:Xunit.v3.ExtensibilityPointFactory.GetMethodTraits
  href: Xunit.v3.ExtensibilityPointFactory.GetMethodTraits.html#Xunit_v3_ExtensibilityPointFactory_GetMethodTraits_System_Reflection_MethodInfo_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Collections_Generic_IReadOnlyCollection_System_String___
  name: GetMethodTraits
  nameWithType: ExtensibilityPointFactory.GetMethodTraits
  fullName: Xunit.v3.ExtensibilityPointFactory.GetMethodTraits
memberLayout: SeparatePages
