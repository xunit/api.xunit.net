### YamlMime:ManagedReference
items:
- uid: v3.1.0.1:Xunit.Record
  commentId: T:Xunit.Record
  id: Record
  parent: v3.1.0.1:Xunit
  children:
  - v3.1.0.1:Xunit.Record.Exception(System.Action)
  - v3.1.0.1:Xunit.Record.Exception(System.Func{System.Object})
  - v3.1.0.1:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.Task})
  - v3.1.0.1:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.ValueTask})
  - v3.1.0.1:Xunit.Record.ExceptionAsync``1(System.Func{System.Threading.Tasks.ValueTask{``0}})
  langs:
  - csharp
  - vb
  name: Record
  nameWithType: Record
  fullName: Xunit.Record
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Record
    path: ../src/xunit.v3.core/Record.cs
    startLine: 11
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Allows the user to record actions for a test.
  example: []
  syntax:
    content: public static class Record
    content.vb: Public Module Record
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.1.0.1:Xunit.Record.Exception(System.Action)
  commentId: M:Xunit.Record.Exception(System.Action)
  id: Exception(System.Action)
  parent: v3.1.0.1:Xunit.Record
  langs:
  - csharp
  - vb
  name: Exception(Action)
  nameWithType: Record.Exception(Action)
  fullName: Xunit.Record.Exception(System.Action)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Exception
    path: ../src/xunit.v3.core/Record.cs
    startLine: 18
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Records any exception which is thrown by the given code.
  example: []
  syntax:
    content: public static Exception? Exception(Action testCode)
    parameters:
    - id: testCode
      type: System.Action
      description: The code which may throw an exception.
    return:
      type: System.Exception
      description: Returns the exception that was thrown by the code; null, otherwise.
    content.vb: Public Shared Function Exception(testCode As Action) As Exception
  overload: v3.1.0.1:Xunit.Record.Exception*
- uid: v3.1.0.1:Xunit.Record.Exception(System.Func{System.Object})
  commentId: M:Xunit.Record.Exception(System.Func{System.Object})
  id: Exception(System.Func{System.Object})
  parent: v3.1.0.1:Xunit.Record
  langs:
  - csharp
  - vb
  name: Exception(Func<object?>)
  nameWithType: Record.Exception(Func<object?>)
  fullName: Xunit.Record.Exception(System.Func<object?>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Exception
    path: ../src/xunit.v3.core/Record.cs
    startLine: 39
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Records any exception which is thrown by the given code that has

    a return value. Generally used for testing property accessors.
  example: []
  syntax:
    content: public static Exception? Exception(Func<object?> testCode)
    parameters:
    - id: testCode
      type: System.Func{System.Object}
      description: The code which may throw an exception.
    return:
      type: System.Exception
      description: Returns the exception that was thrown by the code; null, otherwise.
    content.vb: Public Shared Function Exception(testCode As Func(Of Object)) As Exception
  overload: v3.1.0.1:Xunit.Record.Exception*
  nameWithType.vb: Record.Exception(Func(Of Object))
  fullName.vb: Xunit.Record.Exception(System.Func(Of Object))
  name.vb: Exception(Func(Of Object))
- uid: v3.1.0.1:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.Task})
  commentId: M:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.Task})
  id: ExceptionAsync(System.Func{System.Threading.Tasks.Task})
  parent: v3.1.0.1:Xunit.Record
  langs:
  - csharp
  - vb
  name: ExceptionAsync(Func<Task>)
  nameWithType: Record.ExceptionAsync(Func<Task>)
  fullName: Xunit.Record.ExceptionAsync(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: ExceptionAsync
    path: ../src/xunit.v3.core/Record.cs
    startLine: 85
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Records any exception which is thrown by the given task.
  example: []
  syntax:
    content: public static ValueTask<Exception?> ExceptionAsync(Func<Task> testCode)
    parameters:
    - id: testCode
      type: System.Func{System.Threading.Tasks.Task}
      description: The task which may throw an exception.
    return:
      type: System.Threading.Tasks.ValueTask{System.Exception}
      description: Returns the exception that was thrown by the code; null, otherwise.
    content.vb: Public Shared Function ExceptionAsync(testCode As Func(Of Task)) As ValueTask(Of Exception)
  overload: v3.1.0.1:Xunit.Record.ExceptionAsync*
  nameWithType.vb: Record.ExceptionAsync(Func(Of Task))
  fullName.vb: Xunit.Record.ExceptionAsync(System.Func(Of System.Threading.Tasks.Task))
  name.vb: ExceptionAsync(Func(Of Task))
- uid: v3.1.0.1:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.ValueTask})
  commentId: M:Xunit.Record.ExceptionAsync(System.Func{System.Threading.Tasks.ValueTask})
  id: ExceptionAsync(System.Func{System.Threading.Tasks.ValueTask})
  parent: v3.1.0.1:Xunit.Record
  langs:
  - csharp
  - vb
  name: ExceptionAsync(Func<ValueTask>)
  nameWithType: Record.ExceptionAsync(Func<ValueTask>)
  fullName: Xunit.Record.ExceptionAsync(System.Func<System.Threading.Tasks.ValueTask>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: ExceptionAsync
    path: ../src/xunit.v3.core/Record.cs
    startLine: 105
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Records any exception which is thrown by the given task.
  example: []
  syntax:
    content: public static ValueTask<Exception?> ExceptionAsync(Func<ValueTask> testCode)
    parameters:
    - id: testCode
      type: System.Func{System.Threading.Tasks.ValueTask}
      description: The task which may throw an exception.
    return:
      type: System.Threading.Tasks.ValueTask{System.Exception}
      description: Returns the exception that was thrown by the code; null, otherwise.
    content.vb: Public Shared Function ExceptionAsync(testCode As Func(Of ValueTask)) As ValueTask(Of Exception)
  overload: v3.1.0.1:Xunit.Record.ExceptionAsync*
  nameWithType.vb: Record.ExceptionAsync(Func(Of ValueTask))
  fullName.vb: Xunit.Record.ExceptionAsync(System.Func(Of System.Threading.Tasks.ValueTask))
  name.vb: ExceptionAsync(Func(Of ValueTask))
- uid: v3.1.0.1:Xunit.Record.ExceptionAsync``1(System.Func{System.Threading.Tasks.ValueTask{``0}})
  commentId: M:Xunit.Record.ExceptionAsync``1(System.Func{System.Threading.Tasks.ValueTask{``0}})
  id: ExceptionAsync``1(System.Func{System.Threading.Tasks.ValueTask{``0}})
  parent: v3.1.0.1:Xunit.Record
  langs:
  - csharp
  - vb
  name: ExceptionAsync<T>(Func<ValueTask<T>>)
  nameWithType: Record.ExceptionAsync<T>(Func<ValueTask<T>>)
  fullName: Xunit.Record.ExceptionAsync<T>(System.Func<System.Threading.Tasks.ValueTask<T>>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Record.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: ExceptionAsync
    path: ../src/xunit.v3.core/Record.cs
    startLine: 126
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Records any exception which is thrown by the given task.
  example: []
  syntax:
    content: public static ValueTask<Exception?> ExceptionAsync<T>(Func<ValueTask<T>> testCode)
    parameters:
    - id: testCode
      type: System.Func{System.Threading.Tasks.ValueTask{{T}}}
      description: The task which may throw an exception.
    typeParameters:
    - id: T
      description: The type of the value returned by the value task.
    return:
      type: System.Threading.Tasks.ValueTask{System.Exception}
      description: Returns the exception that was thrown by the code; null, otherwise.
    content.vb: Public Shared Function ExceptionAsync(Of T)(testCode As Func(Of ValueTask(Of T))) As ValueTask(Of Exception)
  overload: v3.1.0.1:Xunit.Record.ExceptionAsync*
  nameWithType.vb: Record.ExceptionAsync(Of T)(Func(Of ValueTask(Of T)))
  fullName.vb: Xunit.Record.ExceptionAsync(Of T)(System.Func(Of System.Threading.Tasks.ValueTask(Of T)))
  name.vb: ExceptionAsync(Of T)(Func(Of ValueTask(Of T)))
references:
- uid: v3.1.0.1:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.1.0.1:Xunit.Record.Exception*
  commentId: Overload:Xunit.Record.Exception
  href: Xunit.Record.Exception.html#Xunit_Record_Exception_System_Action_
  name: Exception
  nameWithType: Record.Exception
  fullName: Xunit.Record.Exception
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<object>
  nameWithType: Func<object>
  fullName: System.Func<object>
  nameWithType.vb: Func(Of Object)
  fullName.vb: System.Func(Of Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: v3.1.0.1:Xunit.Record.ExceptionAsync*
  commentId: Overload:Xunit.Record.ExceptionAsync
  href: Xunit.Record.ExceptionAsync.html#Xunit_Record_ExceptionAsync_System_Func_System_Threading_Tasks_Task__
  name: ExceptionAsync
  nameWithType: Record.ExceptionAsync
  fullName: Xunit.Record.ExceptionAsync
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.Exception}
  commentId: T:System.Threading.Tasks.ValueTask{System.Exception}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Exception>
  nameWithType: ValueTask<Exception>
  fullName: System.Threading.Tasks.ValueTask<System.Exception>
  nameWithType.vb: ValueTask(Of Exception)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Exception)
  name.vb: ValueTask(Of Exception)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Func{System.Threading.Tasks.ValueTask}
  commentId: T:System.Func{System.Threading.Tasks.ValueTask}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<ValueTask>
  nameWithType: Func<ValueTask>
  fullName: System.Func<System.Threading.Tasks.ValueTask>
  nameWithType.vb: Func(Of ValueTask)
  fullName.vb: System.Func(Of System.Threading.Tasks.ValueTask)
  name.vb: Func(Of ValueTask)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.ValueTask
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.ValueTask
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  - name: )
- uid: System.Func{System.Threading.Tasks.ValueTask{{T}}}
  commentId: T:System.Func{System.Threading.Tasks.ValueTask{``0}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<ValueTask<T>>
  nameWithType: Func<ValueTask<T>>
  fullName: System.Func<System.Threading.Tasks.ValueTask<T>>
  nameWithType.vb: Func(Of ValueTask(Of T))
  fullName.vb: System.Func(Of System.Threading.Tasks.ValueTask(Of T))
  name.vb: Func(Of ValueTask(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
memberLayout: SeparatePages
