### YamlMime:ManagedReference
items:
- uid: v3.1.0.1:Xunit.TheoryData`10
  commentId: T:Xunit.TheoryData`10
  id: TheoryData`10
  parent: v3.1.0.1:Xunit
  children:
  - v3.1.0.1:Xunit.TheoryData`10.#ctor
  - v3.1.0.1:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
  - v3.1.0.1:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  - v3.1.0.1:Xunit.TheoryData`10.#ctor(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
  - v3.1.0.1:Xunit.TheoryData`10.#ctor(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
  - v3.1.0.1:Xunit.TheoryData`10.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  - v3.1.0.1:Xunit.TheoryData`10.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  langs:
  - csharp
  - vb
  name: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: TheoryData
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 668
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Represents a set of data for a theory with ten parameters. Data can

    be added to the data set using the collection initializer syntax.
  example: []
  syntax:
    content: 'public class TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>, IReadOnlyCollection<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>, IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>, IEnumerable'
    typeParameters:
    - id: T1
      description: The first parameter type.
    - id: T2
      description: The second parameter type.
    - id: T3
      description: The third parameter type.
    - id: T4
      description: The fourth parameter type.
    - id: T5
      description: The fifth parameter type.
    - id: T6
      description: The sixth parameter type.
    - id: T7
      description: The seventh parameter type.
    - id: T8
      description: The eighth parameter type.
    - id: T9
      description: The ninth parameter type.
    - id: T10
      description: The tenth parameter type.
    content.vb: Public Class TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) Inherits TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)) Implements IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)), IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)), IEnumerable
  inheritance:
  - System.Object
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  derivedClasses:
  - v3.1.0.1:Xunit.MatrixTheoryData`10
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}}
  - System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Count
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Add(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Add(Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}[])
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}[])
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Convert(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor
  commentId: M:Xunit.TheoryData`10.#ctor
  id: '#ctor'
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: TheoryData()
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData()
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData()
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 674
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%6010" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData()
    content.vb: Public Sub New()
  overload: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New()
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New()
  name.vb: New()
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
  commentId: M:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})'
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: TheoryData(IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(System.Collections.Generic.IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 681
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%6010" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
      description: The initial set of values
    content.vb: Public Sub New(values As IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  overload: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(System.Collections.Generic.IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  name.vb: New(IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
  commentId: M:Xunit.TheoryData`10.#ctor(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
  id: '#ctor(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])'
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: TheoryData(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 688
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%6010" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[] values)
    parameters:
    - id: values
      type: System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}[]
      description: The initial set of values
    content.vb: Public Sub New(ParamArray values As (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  overload: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  name.vb: New(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  commentId: M:Xunit.TheoryData`10.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  id: '#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})'
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 695
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%6010" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}}
      description: The initial set of values
    content.vb: Public Sub New(values As IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  overload: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  name.vb: New(IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
  commentId: M:Xunit.TheoryData`10.#ctor(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
  id: '#ctor(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])'
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: TheoryData(params TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(params TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData(params Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 702
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%6010" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(params TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[] values)
    parameters:
    - id: values
      type: Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}[]
      description: The initial set of values
    content.vb: Public Sub New(ParamArray values As TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  overload: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(ParamArray TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New(ParamArray Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  name.vb: New(ParamArray TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
- uid: v3.1.0.1:Xunit.TheoryData`10.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  commentId: M:Xunit.TheoryData`10.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  id: Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: Add(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Add(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Add(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Add
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 718
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds data to the theory data set.
  example: []
  syntax:
    content: public void Add(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9, T10 p10)
    parameters:
    - id: p1
      type: '{T1}'
      description: The first data value.
    - id: p2
      type: '{T2}'
      description: The second data value.
    - id: p3
      type: '{T3}'
      description: The third data value.
    - id: p4
      type: '{T4}'
      description: The fourth data value.
    - id: p5
      type: '{T5}'
      description: The fifth data value.
    - id: p6
      type: '{T6}'
      description: The sixth data value.
    - id: p7
      type: '{T7}'
      description: The seventh data value.
    - id: p8
      type: '{T8}'
      description: The eighth data value.
    - id: p9
      type: '{T9}'
      description: The ninth data value.
    - id: p10
      type: '{T10}'
      description: The tenth data value.
    content.vb: Public Sub Add(p1 As T1, p2 As T2, p3 As T3, p4 As T4, p5 As T5, p6 As T6, p7 As T7, p8 As T8, p9 As T9, p10 As T10)
  overload: v3.1.0.1:Xunit.TheoryData`10.Add*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Add(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Add(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: v3.1.0.1:Xunit.TheoryData`10.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  commentId: M:Xunit.TheoryData`10.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  id: Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  parent: v3.1.0.1:Xunit.TheoryData`10
  langs:
  - csharp
  - vb
  name: Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Convert
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 722
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Convert untyped values into the appropriate theory data row.
  example: []
  syntax:
    content: protected override TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) row)
    parameters:
    - id: row
      type: System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}
      description: The raw data row
    return:
      type: Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}
    content.vb: Protected Overrides Function Convert(row As (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)) As TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  overridden: Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Convert(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}})
  overload: v3.1.0.1:Xunit.TheoryData`10.Convert*
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
references:
- uid: v3.1.0.1:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  commentId: T:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}
  parent: v3.1.0.1:Xunit
  definition: Xunit.TheoryDataBase`2
  href: Xunit.TheoryDataBase-2.html
  name: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  name.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: ','
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: ','
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  nameWithType: IReadOnlyCollection<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  fullName: System.Collections.Generic.IReadOnlyCollection<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  nameWithType.vb: IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  name.vb: IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}}
  commentId: T:System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  nameWithType: IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  fullName: System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>
  nameWithType.vb: IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  name.vb: IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Count
  commentId: P:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Count
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.Count
  href: Xunit.TheoryDataBase-2.Count.html#Xunit_TheoryDataBase_2_Count
  name: Count
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Count
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Count
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Count
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Count
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Add(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.Add(`1)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  name: Add((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Add((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Add((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Add((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Add((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Add(Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.Add(`0)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  name: Add(TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Add(TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Add(Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Add(TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Add(Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  name.vb: Add(TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Add(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  name: AddRange(IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(System.Collections.Generic.IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(System.Collections.Generic.IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  name.vb: AddRange(IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}[])
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.AddRange(`1[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  name: AddRange(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(params (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[])
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  name.vb: AddRange(ParamArray (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: params
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: ParamArray
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange(IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(IEnumerable<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  name.vb: AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.AddRange(Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}[])
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.AddRange(`0[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  name: AddRange(params TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(params TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.AddRange(params Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[])
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(ParamArray TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).AddRange(ParamArray Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  name.vb: AddRange(ParamArray TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.Convert(System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.Convert(`1)
  href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  name: Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).Convert((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.Convert(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}})
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}.GetEnumerator
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.GetEnumerator
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}},System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  definition: Xunit.TheoryDataBase`2.GetEnumerator
  href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.GetEnumerator()
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>.GetEnumerator()
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).GetEnumerator()
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)).GetEnumerator()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.1.0.1:Xunit.TheoryDataBase`2
  commentId: T:Xunit.TheoryDataBase`2
  href: Xunit.TheoryDataBase-2.html
  name: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  name.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: <
  - name: TTheoryDataRow
  - name: ','
  - name: " "
  - name: TRawDataRow
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: ','
  - name: " "
  - name: TRawDataRow
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Count
  commentId: P:Xunit.TheoryDataBase`2.Count
  href: Xunit.TheoryDataBase-2.Count.html#Xunit_TheoryDataBase_2_Count
  name: Count
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
  commentId: M:Xunit.TheoryDataBase`2.Add(`1)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  name: Add(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: TRawDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: TRawDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
  commentId: M:Xunit.TheoryDataBase`2.Add(`0)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  name: Add(TTheoryDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - name: TTheoryDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - name: TTheoryDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  name: AddRange(IEnumerable<TRawDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TRawDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TRawDataRow>)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TRawDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TRawDataRow))
  name.vb: AddRange(IEnumerable(Of TRawDataRow))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TRawDataRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TRawDataRow
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`1[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  name: AddRange(params TRawDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  name.vb: AddRange(ParamArray TRawDataRow())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: params
  - name: " "
  - name: TRawDataRow
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TRawDataRow
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange(IEnumerable<TTheoryDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TTheoryDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TTheoryDataRow>)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TTheoryDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TTheoryDataRow))
  name.vb: AddRange(IEnumerable(Of TTheoryDataRow))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TTheoryDataRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`0[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  name: AddRange(params TTheoryDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  name.vb: AddRange(ParamArray TTheoryDataRow())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - name: TTheoryDataRow
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TTheoryDataRow
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
  commentId: M:Xunit.TheoryDataBase`2.Convert(`1)
  href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  name: Convert(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: TRawDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: TRawDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
  commentId: M:Xunit.TheoryDataBase`2.GetEnumerator
  href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`10
  commentId: T:Xunit.TheoryData`10
  href: Xunit.TheoryData-10.html
  name: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryData`10
    name: TheoryData
    href: Xunit.TheoryData-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryData`10
    name: TheoryData
    href: Xunit.TheoryData-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`10.#ctor*
  commentId: Overload:Xunit.TheoryData`10.#ctor
  href: Xunit.TheoryData-10.-ctor.html#Xunit_TheoryData_10__ctor
  name: TheoryData
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.TheoryData
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  nameWithType: IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  fullName: System.Collections.Generic.IEnumerable<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>
  nameWithType.vb: IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  name.vb: IEnumerable(Of (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: )
- uid: System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}[]
  isExternal: true
  name: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[]
  nameWithType: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[]
  fullName: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)[]
  nameWithType.vb: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  fullName.vb: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  name.vb: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}[]
  isExternal: true
  href: Xunit.TheoryDataRow-10.html
  name: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[]
  nameWithType: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[]
  fullName: Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>[]
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  name.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`10.Add*
  commentId: Overload:Xunit.TheoryData`10.Add
  href: Xunit.TheoryData-10.Add.html#Xunit_TheoryData_10_Add__0__1__2__3__4__5__6__7__8__9_
  name: Add
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Add
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Add
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Add
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Add
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: '{T6}'
  commentId: '!:T6'
  definition: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: '{T7}'
  commentId: '!:T7'
  definition: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: '{T8}'
  commentId: '!:T8'
  definition: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: '{T9}'
  commentId: '!:T9'
  definition: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: '{T10}'
  commentId: '!:T10'
  definition: T10
  name: T10
  nameWithType: T10
  fullName: T10
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: T10
  name: T10
  nameWithType: T10
  fullName: T10
- uid: v3.1.0.1:Xunit.TheoryData`10.Convert*
  commentId: Overload:Xunit.TheoryData`10.Convert
  href: Xunit.TheoryData-10.Convert.html#Xunit_TheoryData_10_Convert_System_ValueTuple__0__1__2__3__4__5__6_System_ValueTuple__7__8__9___
  name: Convert
  nameWithType: TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Convert
  fullName: Xunit.TheoryData<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Convert
  nameWithType.vb: TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Convert
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10).Convert
- uid: System.ValueTuple{{T1},{T2},{T3},{T4},{T5},{T6},{T7},System.ValueTuple{{T8},{T9},{T10}}}
  commentId: T:System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,System.ValueTuple{`7,`8,`9}}
  parent: System
  definition: System.ValueTuple`8
  name: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow{{T1},{T2},{T3},{T4},{T5},{T6},{T7},{T8},{T9},{T10}}
  commentId: T:Xunit.TheoryDataRow{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}
  parent: v3.1.0.1:Xunit
  definition: Xunit.TheoryDataRow`10
  href: Xunit.TheoryDataRow-10.html
  name: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
- uid: System.ValueTuple`8
  commentId: T:System.ValueTuple`8
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-8
  name: ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>
  nameWithType: ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>
  fullName: System.ValueTuple<T1, T2, T3, T4, T5, T6, T7, TRest>
  nameWithType.vb: ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)
  fullName.vb: System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)
  name.vb: ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)
  spec.csharp:
  - uid: System.ValueTuple`8
    name: ValueTuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-8
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: TRest
  - name: '>'
  spec.vb:
  - uid: System.ValueTuple`8
    name: ValueTuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-8
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: TRest
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow`10
  commentId: T:Xunit.TheoryDataRow`10
  parent: v3.1.0.1:Xunit
  href: Xunit.TheoryDataRow-10.html
  name: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType: TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  fullName: Xunit.TheoryDataRow<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  name.vb: TheoryDataRow(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`10
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-10.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: ','
  - name: " "
  - name: T8
  - name: ','
  - name: " "
  - name: T9
  - name: ','
  - name: " "
  - name: T10
  - name: )
memberLayout: SeparatePages
