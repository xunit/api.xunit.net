### YamlMime:ManagedReference
items:
- uid: v3.1.0.1:Xunit.TheoryData`3
  commentId: T:Xunit.TheoryData`3
  id: TheoryData`3
  parent: v3.1.0.1:Xunit
  children:
  - v3.1.0.1:Xunit.TheoryData`3.#ctor
  - v3.1.0.1:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
  - v3.1.0.1:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
  - v3.1.0.1:Xunit.TheoryData`3.#ctor(System.ValueTuple{`0,`1,`2}[])
  - v3.1.0.1:Xunit.TheoryData`3.#ctor(Xunit.TheoryDataRow{`0,`1,`2}[])
  - v3.1.0.1:Xunit.TheoryData`3.Add(`0,`1,`2)
  - v3.1.0.1:Xunit.TheoryData`3.Convert(System.ValueTuple{`0,`1,`2})
  langs:
  - csharp
  - vb
  name: TheoryData<T1, T2, T3>
  nameWithType: TheoryData<T1, T2, T3>
  fullName: Xunit.TheoryData<T1, T2, T3>
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: TheoryData
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 213
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: >-
    Represents a set of data for a theory with three parameters. Data can

    be added to the data set using the collection initializer syntax.
  example: []
  syntax:
    content: 'public class TheoryData<T1, T2, T3> : TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>, IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>, IEnumerable<TheoryDataRow<T1, T2, T3>>, IEnumerable'
    typeParameters:
    - id: T1
      description: The first parameter type.
    - id: T2
      description: The second parameter type.
    - id: T3
      description: The third parameter type.
    content.vb: Public Class TheoryData(Of T1, T2, T3) Inherits TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)) Implements IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3)), IEnumerable(Of TheoryDataRow(Of T1, T2, T3)), IEnumerable
  inheritance:
  - System.Object
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  derivedClasses:
  - v3.1.0.1:Xunit.MatrixTheoryData`3
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{{T1},{T2},{T3}}}
  - System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Count
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(System.ValueTuple{{T1},{T2},{T3}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(Xunit.TheoryDataRow{{T1},{T2},{T3}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.ValueTuple{{T1},{T2},{T3}}[])
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(Xunit.TheoryDataRow{{T1},{T2},{T3}}[])
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Convert(System.ValueTuple{{T1},{T2},{T3}})
  - v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TheoryData(Of T1, T2, T3)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3)
  name.vb: TheoryData(Of T1, T2, T3)
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor
  commentId: M:Xunit.TheoryData`3.#ctor
  id: '#ctor'
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: TheoryData()
  nameWithType: TheoryData<T1, T2, T3>.TheoryData()
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData()
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 219
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%603" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData()
    content.vb: Public Sub New()
  overload: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3).New()
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New()
  name.vb: New()
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
  commentId: M:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})'
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: TheoryData(IEnumerable<(T1, T2, T3)>)
  nameWithType: TheoryData<T1, T2, T3>.TheoryData(IEnumerable<(T1, T2, T3)>)
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData(System.Collections.Generic.IEnumerable<(T1, T2, T3)>)
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 226
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%603" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(IEnumerable<(T1, T2, T3)> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3}}}
      description: The initial set of values
    content.vb: Public Sub New(values As IEnumerable(Of (T1, T2, T3)))
  overload: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3).New(IEnumerable(Of (T1, T2, T3)))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New(System.Collections.Generic.IEnumerable(Of (T1, T2, T3)))
  name.vb: New(IEnumerable(Of (T1, T2, T3)))
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor(System.ValueTuple{`0,`1,`2}[])
  commentId: M:Xunit.TheoryData`3.#ctor(System.ValueTuple{`0,`1,`2}[])
  id: '#ctor(System.ValueTuple{`0,`1,`2}[])'
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: TheoryData(params (T1, T2, T3)[])
  nameWithType: TheoryData<T1, T2, T3>.TheoryData(params (T1, T2, T3)[])
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData(params (T1, T2, T3)[])
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 233
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%603" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(params (T1, T2, T3)[] values)
    parameters:
    - id: values
      type: System.ValueTuple{{T1},{T2},{T3}}[]
      description: The initial set of values
    content.vb: Public Sub New(ParamArray values As (T1, T2, T3)())
  overload: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3).New(ParamArray (T1, T2, T3)())
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New(ParamArray (T1, T2, T3)())
  name.vb: New(ParamArray (T1, T2, T3)())
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
  commentId: M:Xunit.TheoryData`3.#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
  id: '#ctor(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})'
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3>>)
  nameWithType: TheoryData<T1, T2, T3>.TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3>>)
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData(System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3>>)
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 240
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%603" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(IEnumerable<TheoryDataRow<T1, T2, T3>> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}}
      description: The initial set of values
    content.vb: Public Sub New(values As IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))
  overload: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3).New(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New(System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3)))
  name.vb: New(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor(Xunit.TheoryDataRow{`0,`1,`2}[])
  commentId: M:Xunit.TheoryData`3.#ctor(Xunit.TheoryDataRow{`0,`1,`2}[])
  id: '#ctor(Xunit.TheoryDataRow{`0,`1,`2}[])'
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: TheoryData(params TheoryDataRow<T1, T2, T3>[])
  nameWithType: TheoryData<T1, T2, T3>.TheoryData(params TheoryDataRow<T1, T2, T3>[])
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData(params Xunit.TheoryDataRow<T1, T2, T3>[])
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 247
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.TheoryData%603" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TheoryData(params TheoryDataRow<T1, T2, T3>[] values)
    parameters:
    - id: values
      type: Xunit.TheoryDataRow{{T1},{T2},{T3}}[]
      description: The initial set of values
    content.vb: Public Sub New(ParamArray values As TheoryDataRow(Of T1, T2, T3)())
  overload: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  nameWithType.vb: TheoryData(Of T1, T2, T3).New(ParamArray TheoryDataRow(Of T1, T2, T3)())
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New(ParamArray Xunit.TheoryDataRow(Of T1, T2, T3)())
  name.vb: New(ParamArray TheoryDataRow(Of T1, T2, T3)())
- uid: v3.1.0.1:Xunit.TheoryData`3.Add(`0,`1,`2)
  commentId: M:Xunit.TheoryData`3.Add(`0,`1,`2)
  id: Add(`0,`1,`2)
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: Add(T1, T2, T3)
  nameWithType: TheoryData<T1, T2, T3>.Add(T1, T2, T3)
  fullName: Xunit.TheoryData<T1, T2, T3>.Add(T1, T2, T3)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Add
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 256
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds data to the theory data set.
  example: []
  syntax:
    content: public void Add(T1 p1, T2 p2, T3 p3)
    parameters:
    - id: p1
      type: '{T1}'
      description: The first data value.
    - id: p2
      type: '{T2}'
      description: The second data value.
    - id: p3
      type: '{T3}'
      description: The third data value.
    content.vb: Public Sub Add(p1 As T1, p2 As T2, p3 As T3)
  overload: v3.1.0.1:Xunit.TheoryData`3.Add*
  nameWithType.vb: TheoryData(Of T1, T2, T3).Add(T1, T2, T3)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).Add(T1, T2, T3)
- uid: v3.1.0.1:Xunit.TheoryData`3.Convert(System.ValueTuple{`0,`1,`2})
  commentId: M:Xunit.TheoryData`3.Convert(System.ValueTuple{`0,`1,`2})
  id: Convert(System.ValueTuple{`0,`1,`2})
  parent: v3.1.0.1:Xunit.TheoryData`3
  langs:
  - csharp
  - vb
  name: Convert((T1, T2, T3))
  nameWithType: TheoryData<T1, T2, T3>.Convert((T1, T2, T3))
  fullName: Xunit.TheoryData<T1, T2, T3>.Convert((T1, T2, T3))
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Convert
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 260
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Convert untyped values into the appropriate theory data row.
  example: []
  syntax:
    content: protected override TheoryDataRow<T1, T2, T3> Convert((T1, T2, T3) row)
    parameters:
    - id: row
      type: System.ValueTuple{{T1},{T2},{T3}}
      description: The raw data row
    return:
      type: Xunit.TheoryDataRow{{T1},{T2},{T3}}
    content.vb: Protected Overrides Function Convert(row As (T1, T2, T3)) As TheoryDataRow(Of T1, T2, T3)
  overridden: Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Convert(System.ValueTuple{{T1},{T2},{T3}})
  overload: v3.1.0.1:Xunit.TheoryData`3.Convert*
  nameWithType.vb: TheoryData(Of T1, T2, T3).Convert((T1, T2, T3))
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).Convert((T1, T2, T3))
references:
- uid: v3.1.0.1:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  commentId: T:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}
  parent: v3.1.0.1:Xunit
  definition: Xunit.TheoryDataBase`2
  href: Xunit.TheoryDataBase-2.html
  name: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))
  name.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: ','
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: ','
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{{T1},{T2},{T3}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Xunit.TheoryDataRow{`0,`1,`2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>
  nameWithType: IReadOnlyCollection<TheoryDataRow<T1, T2, T3>>
  fullName: System.Collections.Generic.IReadOnlyCollection<Xunit.TheoryDataRow<T1, T2, T3>>
  nameWithType.vb: IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Xunit.TheoryDataRow(Of T1, T2, T3))
  name.vb: IReadOnlyCollection(Of TheoryDataRow(Of T1, T2, T3))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}}
  commentId: T:System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TheoryDataRow<T1, T2, T3>>
  nameWithType: IEnumerable<TheoryDataRow<T1, T2, T3>>
  fullName: System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3>>
  nameWithType.vb: IEnumerable(Of TheoryDataRow(Of T1, T2, T3))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3))
  name.vb: IEnumerable(Of TheoryDataRow(Of T1, T2, T3))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Count
  commentId: P:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Count
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.Count
  href: Xunit.TheoryDataBase-2.Count.html#Xunit_TheoryDataBase_2_Count
  name: Count
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Count
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Count
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Count
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Count
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(System.ValueTuple{{T1},{T2},{T3}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(System.ValueTuple{`0,`1,`2})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.Add(`1)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  name: Add((T1, T2, T3))
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add((T1, T2, T3))
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add((T1, T2, T3))
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add((T1, T2, T3))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add((T1, T2, T3))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(System.ValueTuple{`0,`1,`2})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(System.ValueTuple{`0,`1,`2})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Add(Xunit.TheoryDataRow{{T1},{T2},{T3}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(Xunit.TheoryDataRow{`0,`1,`2})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.Add(`0)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  name: Add(TheoryDataRow<T1, T2, T3>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add(TheoryDataRow<T1, T2, T3>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Add(Xunit.TheoryDataRow<T1, T2, T3>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add(TheoryDataRow(Of T1, T2, T3))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Add(Xunit.TheoryDataRow(Of T1, T2, T3))
  name.vb: Add(TheoryDataRow(Of T1, T2, T3))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(Xunit.TheoryDataRow{`0,`1,`2})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Add(Xunit.TheoryDataRow{`0,`1,`2})
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  name: AddRange(IEnumerable<(T1, T2, T3)>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(IEnumerable<(T1, T2, T3)>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(System.Collections.Generic.IEnumerable<(T1, T2, T3)>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(IEnumerable(Of (T1, T2, T3)))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(System.Collections.Generic.IEnumerable(Of (T1, T2, T3)))
  name.vb: AddRange(IEnumerable(Of (T1, T2, T3)))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.ValueTuple{{T1},{T2},{T3}}[])
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.ValueTuple{`0,`1,`2}[])
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.AddRange(`1[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  name: AddRange(params (T1, T2, T3)[])
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params (T1, T2, T3)[])
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params (T1, T2, T3)[])
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray (T1, T2, T3)())
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray (T1, T2, T3)())
  name.vb: AddRange(ParamArray (T1, T2, T3)())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.ValueTuple{`0,`1,`2}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: params
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.ValueTuple{`0,`1,`2}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: ParamArray
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{{T1},{T2},{T3}}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange(IEnumerable<TheoryDataRow<T1, T2, T3>>)
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(IEnumerable<TheoryDataRow<T1, T2, T3>>)
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(System.Collections.Generic.IEnumerable<Xunit.TheoryDataRow<T1, T2, T3>>)
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(System.Collections.Generic.IEnumerable(Of Xunit.TheoryDataRow(Of T1, T2, T3)))
  name.vb: AddRange(IEnumerable(Of TheoryDataRow(Of T1, T2, T3)))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(System.Collections.Generic.IEnumerable{Xunit.TheoryDataRow{`0,`1,`2}})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.AddRange(Xunit.TheoryDataRow{{T1},{T2},{T3}}[])
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2}[])
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.AddRange(`0[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  name: AddRange(params TheoryDataRow<T1, T2, T3>[])
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params TheoryDataRow<T1, T2, T3>[])
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.AddRange(params Xunit.TheoryDataRow<T1, T2, T3>[])
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray TheoryDataRow(Of T1, T2, T3)())
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).AddRange(ParamArray Xunit.TheoryDataRow(Of T1, T2, T3)())
  name.vb: AddRange(ParamArray TheoryDataRow(Of T1, T2, T3)())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.AddRange(Xunit.TheoryDataRow{`0,`1,`2}[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.Convert(System.ValueTuple{{T1},{T2},{T3}})
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Convert(System.ValueTuple{`0,`1,`2})
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.Convert(`1)
  href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  name: Convert((T1, T2, T3))
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Convert((T1, T2, T3))
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.Convert((T1, T2, T3))
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Convert((T1, T2, T3))
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).Convert((T1, T2, T3))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Convert(System.ValueTuple{`0,`1,`2})
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.Convert(System.ValueTuple{`0,`1,`2})
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}.GetEnumerator
  commentId: M:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.GetEnumerator
  parent: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{{T1},{T2},{T3}},System.ValueTuple{{T1},{T2},{T3}}}
  definition: Xunit.TheoryDataBase`2.GetEnumerator
  href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: TheoryDataBase<TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.GetEnumerator()
  fullName: Xunit.TheoryDataBase<Xunit.TheoryDataRow<T1, T2, T3>, (T1, T2, T3)>.GetEnumerator()
  nameWithType.vb: TheoryDataBase(Of TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).GetEnumerator()
  fullName.vb: Xunit.TheoryDataBase(Of Xunit.TheoryDataRow(Of T1, T2, T3), (T1, T2, T3)).GetEnumerator()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase{Xunit.TheoryDataRow{`0,`1,`2},System.ValueTuple{`0,`1,`2}}.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.1.0.1:Xunit.TheoryDataBase`2
  commentId: T:Xunit.TheoryDataBase`2
  href: Xunit.TheoryDataBase-2.html
  name: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  name.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: <
  - name: TTheoryDataRow
  - name: ','
  - name: " "
  - name: TRawDataRow
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2
    name: TheoryDataBase
    href: Xunit.TheoryDataBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: ','
  - name: " "
  - name: TRawDataRow
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Count
  commentId: P:Xunit.TheoryDataBase`2.Count
  href: Xunit.TheoryDataBase-2.Count.html#Xunit_TheoryDataBase_2_Count
  name: Count
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
  commentId: M:Xunit.TheoryDataBase`2.Add(`1)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  name: Add(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: TRawDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`1)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  - name: (
  - name: TRawDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
  commentId: M:Xunit.TheoryDataBase`2.Add(`0)
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  name: Add(TTheoryDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - name: TTheoryDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Add(`0)
    name: Add
    href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__0_
  - name: (
  - name: TTheoryDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  name: AddRange(IEnumerable<TRawDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TRawDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TRawDataRow>)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TRawDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TRawDataRow))
  name.vb: AddRange(IEnumerable(Of TRawDataRow))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TRawDataRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TRawDataRow
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`1[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  name: AddRange(params TRawDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  name.vb: AddRange(ParamArray TRawDataRow())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: params
  - name: " "
  - name: TRawDataRow
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`1[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__1___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TRawDataRow
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  name: AddRange(IEnumerable<TTheoryDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TTheoryDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TTheoryDataRow>)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TTheoryDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TTheoryDataRow))
  name.vb: AddRange(IEnumerable(Of TTheoryDataRow))
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TTheoryDataRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`0[])
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  name: AddRange(params TTheoryDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  name.vb: AddRange(ParamArray TTheoryDataRow())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - name: TTheoryDataRow
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.AddRange(`0[])
    name: AddRange
    href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: TTheoryDataRow
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
  commentId: M:Xunit.TheoryDataBase`2.Convert(`1)
  href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  name: Convert(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: TRawDataRow
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.Convert(`1)
    name: Convert
    href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  - name: (
  - name: TRawDataRow
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
  commentId: M:Xunit.TheoryDataBase`2.GetEnumerator
  href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataBase`2.GetEnumerator
    name: GetEnumerator
    href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`3
  commentId: T:Xunit.TheoryData`3
  href: Xunit.TheoryData-3.html
  name: TheoryData<T1, T2, T3>
  nameWithType: TheoryData<T1, T2, T3>
  fullName: Xunit.TheoryData<T1, T2, T3>
  nameWithType.vb: TheoryData(Of T1, T2, T3)
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3)
  name.vb: TheoryData(Of T1, T2, T3)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryData`3
    name: TheoryData
    href: Xunit.TheoryData-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryData`3
    name: TheoryData
    href: Xunit.TheoryData-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`3.#ctor*
  commentId: Overload:Xunit.TheoryData`3.#ctor
  href: Xunit.TheoryData-3.-ctor.html#Xunit_TheoryData_3__ctor
  name: TheoryData
  nameWithType: TheoryData<T1, T2, T3>.TheoryData
  fullName: Xunit.TheoryData<T1, T2, T3>.TheoryData
  nameWithType.vb: TheoryData(Of T1, T2, T3).New
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{{T1},{T2},{T3}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{`0,`1,`2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(T1, T2, T3)>
  nameWithType: IEnumerable<(T1, T2, T3)>
  fullName: System.Collections.Generic.IEnumerable<(T1, T2, T3)>
  nameWithType.vb: IEnumerable(Of (T1, T2, T3))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (T1, T2, T3))
  name.vb: IEnumerable(Of (T1, T2, T3))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: )
- uid: System.ValueTuple{{T1},{T2},{T3}}[]
  isExternal: true
  name: (T1, T2, T3)[]
  nameWithType: (T1, T2, T3)[]
  fullName: (T1, T2, T3)[]
  nameWithType.vb: (T1, T2, T3)()
  fullName.vb: (T1, T2, T3)()
  name.vb: (T1, T2, T3)()
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow{{T1},{T2},{T3}}[]
  isExternal: true
  href: Xunit.TheoryDataRow-3.html
  name: TheoryDataRow<T1, T2, T3>[]
  nameWithType: TheoryDataRow<T1, T2, T3>[]
  fullName: Xunit.TheoryDataRow<T1, T2, T3>[]
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3)()
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3)()
  name.vb: TheoryDataRow(Of T1, T2, T3)()
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.TheoryData`3.Add*
  commentId: Overload:Xunit.TheoryData`3.Add
  href: Xunit.TheoryData-3.Add.html#Xunit_TheoryData_3_Add__0__1__2_
  name: Add
  nameWithType: TheoryData<T1, T2, T3>.Add
  fullName: Xunit.TheoryData<T1, T2, T3>.Add
  nameWithType.vb: TheoryData(Of T1, T2, T3).Add
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).Add
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: v3.1.0.1:Xunit.TheoryData`3.Convert*
  commentId: Overload:Xunit.TheoryData`3.Convert
  href: Xunit.TheoryData-3.Convert.html#Xunit_TheoryData_3_Convert_System_ValueTuple__0__1__2__
  name: Convert
  nameWithType: TheoryData<T1, T2, T3>.Convert
  fullName: Xunit.TheoryData<T1, T2, T3>.Convert
  nameWithType.vb: TheoryData(Of T1, T2, T3).Convert
  fullName.vb: Xunit.TheoryData(Of T1, T2, T3).Convert
- uid: System.ValueTuple{{T1},{T2},{T3}}
  commentId: T:System.ValueTuple{`0,`1,`2}
  parent: System
  definition: System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow{{T1},{T2},{T3}}
  commentId: T:Xunit.TheoryDataRow{`0,`1,`2}
  parent: v3.1.0.1:Xunit
  definition: Xunit.TheoryDataRow`3
  href: Xunit.TheoryDataRow-3.html
  name: TheoryDataRow<T1, T2, T3>
  nameWithType: TheoryDataRow<T1, T2, T3>
  fullName: Xunit.TheoryDataRow<T1, T2, T3>
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3)
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3)
  name.vb: TheoryDataRow(Of T1, T2, T3)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: v3.1.0.1:Xunit.TheoryDataRow`3
  commentId: T:Xunit.TheoryDataRow`3
  parent: v3.1.0.1:Xunit
  href: Xunit.TheoryDataRow-3.html
  name: TheoryDataRow<T1, T2, T3>
  nameWithType: TheoryDataRow<T1, T2, T3>
  fullName: Xunit.TheoryDataRow<T1, T2, T3>
  nameWithType.vb: TheoryDataRow(Of T1, T2, T3)
  fullName.vb: Xunit.TheoryDataRow(Of T1, T2, T3)
  name.vb: TheoryDataRow(Of T1, T2, T3)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.TheoryDataRow`3
    name: TheoryDataRow
    href: Xunit.TheoryDataRow-3.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
memberLayout: SeparatePages
