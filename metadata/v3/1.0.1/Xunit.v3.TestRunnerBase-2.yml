### YamlMime:ManagedReference
items:
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  commentId: T:Xunit.v3.TestRunnerBase`2
  id: TestRunnerBase`2
  parent: v3.1.0.1:Xunit.v3
  children:
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.#ctor
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetTestOutput(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetWarnings(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure(`0,System.Exception)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFailed(`0,System.Exception,System.Decimal,System.String,System.String[])
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestNotRun(`0,System.String,System.String[])
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestPassed(`0,System.Decimal,System.String,System.String[])
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestSkipped(`0,System.String,System.Decimal,System.String,System.String[])
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0,System.Boolean,System.Int32)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.Run(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.RunTest(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.SetTestContext(`0,Xunit.TestEngineStatus,Xunit.TestResultState,System.Object)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.ShouldTestRun(`0)
  - v3.1.0.1:Xunit.v3.TestRunnerBase`2.UpdateTestContext(System.Object,Xunit.TestResultState)
  langs:
  - csharp
  - vb
  name: TestRunnerBase<TContext, TTest>
  nameWithType: TestRunnerBase<TContext, TTest>
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: TestRunnerBase
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 20
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    A base class that provides default behavior when running a test. This includes support

    for skipping tests.
  remarks: >-
    This class does not make any assumptions about what it means to run an individual test,

    just that at some point, the test will be run. The intention with this base class is that

    it can serve as a base for non-traditional tests (e.g., tests that are not derived from

    invoking CLR methods).
  example: []
  syntax:
    content: 'public abstract class TestRunnerBase<TContext, TTest> where TContext : TestRunnerBaseContext<TTest> where TTest : class, ITest'
    typeParameters:
    - id: TContext
      description: The context type used by the runner
    - id: TTest
      description: >-
        The test type used by the test framework. Must derive from
            <xref href="v3.1.0.1:Xunit.Sdk.ITest" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public MustInherit Class TestRunnerBase(Of TContext As TestRunnerBaseContext(Of TTest), TTest As {Class, ITest})
  inheritance:
  - System.Object
  derivedClasses:
  - v3.1.0.1:Xunit.v3.TestRunner`2
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TestRunnerBase(Of TContext, TTest)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest)
  name.vb: TestRunnerBase(Of TContext, TTest)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.#ctor
  commentId: M:Xunit.v3.TestRunnerBase`2.#ctor
  id: '#ctor'
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: TestRunnerBase()
  nameWithType: TestRunnerBase<TContext, TTest>.TestRunnerBase()
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.TestRunnerBase()
  type: Constructor
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: .ctor
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 27
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Initializes a new instance of the <xref href="v3.1.0.1:Xunit.v3.TestRunner%602" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected TestRunnerBase()
    content.vb: Protected Sub New()
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.#ctor*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).New()
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).New()
  name.vb: New()
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetTestOutput(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.GetTestOutput(`0)
  id: GetTestOutput(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: GetTestOutput(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.GetTestOutput(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.GetTestOutput(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: GetTestOutput
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 40
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets any output collected from the test after execution is complete. If the test framework

    did not collect any output, or does not support collecting output, then it should

    return <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<string> GetTestOutput(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Threading.Tasks.ValueTask{System.String}
    content.vb: Protected Overridable Function GetTestOutput(ctxt As TContext) As ValueTask(Of String)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetTestOutput*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).GetTestOutput(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).GetTestOutput(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetWarnings(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.GetWarnings(`0)
  id: GetWarnings(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: GetWarnings(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.GetWarnings(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.GetWarnings(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: GetWarnings
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 48
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Gets the warnings that will be reported during test results. By default, returns <code>null</code>,

    indicating that there were no warnings
  example: []
  syntax:
    content: protected virtual ValueTask<string[]?> GetWarnings(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Threading.Tasks.ValueTask{System.String[]}
    content.vb: Protected Overridable Function GetWarnings(ctxt As TContext) As ValueTask(Of String())
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetWarnings*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).GetWarnings(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).GetWarnings(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure(`0,System.Exception)
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure(`0,System.Exception)
  id: OnTestCleanupFailure(`0,System.Exception)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestCleanupFailure(TContext, Exception)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestCleanupFailure(TContext, Exception)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestCleanupFailure(TContext, System.Exception)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestCleanupFailure
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 64
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    This method is called when an exception was thrown while cleaning up, after the test has run.

    By default, this sends (like <xref href="v3.1.0.1:Xunit.v3.TestCleanupFailure" data-throw-if-not-resolved="false"></xref>).
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown are

    converted into fatal exception messages (via <xref href="v3.1.0.1:Xunit.Sdk.IErrorMessage" data-throw-if-not-resolved="false"></xref>) and sent to the message

    bus in <code class="paramref">ctxt</code>.
  example: []
  syntax:
    content: protected virtual ValueTask<bool> OnTestCleanupFailure(TContext ctxt, Exception exception)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: exception
      type: System.Exception
      description: >-
        The exception that caused the cleanup failure (may be an instance
            of <xref href="System.AggregateException" data-throw-if-not-resolved="false"></xref> if more than one exception occurred).
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestCleanupFailure(ctxt As TContext, exception As Exception) As ValueTask(Of Boolean)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestCleanupFailure(TContext, Exception)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestCleanupFailure(TContext, System.Exception)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFailed(`0,System.Exception,System.Decimal,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestFailed(`0,System.Exception,System.Decimal,System.String,System.String[])
  id: OnTestFailed(`0,System.Exception,System.Decimal,System.String,System.String[])
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestFailed(TContext, Exception, decimal, string, string[]?)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestFailed(TContext, Exception, decimal, string, string[]?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestFailed(TContext, System.Exception, decimal, string, string[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestFailed
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 101
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: This method is called when a test has failed. By default, this sends <xref href="v3.1.0.1:Xunit.v3.TestFailed" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<(bool Continue, TestResultState ResultState)> OnTestFailed(TContext ctxt, Exception exception, decimal executionTime, string output, string[]? warnings)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: exception
      type: System.Exception
      description: The exception that caused the test failure
    - id: executionTime
      type: System.Decimal
      description: The time spent running the test
    - id: output
      type: System.String
      description: The output from the test
    - id: warnings
      type: System.String[]
      description: The warnings that were generated during the test
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestFailed(ctxt As TContext, exception As Exception, executionTime As Decimal, output As String, warnings As String()) As ValueTask(Of ([Continue] As Boolean, ResultState As TestResultState))
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFailed*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestFailed(TContext, Exception, Decimal, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestFailed(TContext, System.Exception, Decimal, String, String())
  name.vb: OnTestFailed(TContext, Exception, Decimal, String, String())
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
  id: OnTestFinished(`0,System.Decimal,System.String,System.String[])
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestFinished(TContext, decimal, string, string[]?)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestFinished(TContext, decimal, string, string[]?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestFinished(TContext, decimal, string, string[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestFinished
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 148
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    This method is called just after the test has finished running. By default, this sends

    <xref href="v3.1.0.1:Xunit.v3.TestFinished" data-throw-if-not-resolved="false"></xref>. Override this to enable any extensibility related to test

    finish.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<bool> OnTestFinished(TContext ctxt, decimal executionTime, string output, string[]? warnings)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: executionTime
      type: System.Decimal
      description: The time spent running the test
    - id: output
      type: System.String
      description: The output from the test
    - id: warnings
      type: System.String[]
      description: The warnings that were generated during the test
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestFinished(ctxt As TContext, executionTime As Decimal, output As String, warnings As String()) As ValueTask(Of Boolean)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestFinished(TContext, Decimal, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestFinished(TContext, Decimal, String, String())
  name.vb: OnTestFinished(TContext, Decimal, String, String())
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestNotRun(`0,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestNotRun(`0,System.String,System.String[])
  id: OnTestNotRun(`0,System.String,System.String[])
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestNotRun(TContext, string, string[]?)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestNotRun(TContext, string, string[]?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestNotRun(TContext, string, string[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestNotRun
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 187
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: This method is called when a test was not run. By default, this sends <xref href="v3.1.0.1:Xunit.v3.TestNotRun" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<(bool Continue, TestResultState ResultState)> OnTestNotRun(TContext ctxt, string output, string[]? warnings)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: output
      type: System.String
      description: The output from the test
    - id: warnings
      type: System.String[]
      description: The warnings that were generated during the test
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestNotRun(ctxt As TContext, output As String, warnings As String()) As ValueTask(Of ([Continue] As Boolean, ResultState As TestResultState))
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestNotRun*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestNotRun(TContext, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestNotRun(TContext, String, String())
  name.vb: OnTestNotRun(TContext, String, String())
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestPassed(`0,System.Decimal,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestPassed(`0,System.Decimal,System.String,System.String[])
  id: OnTestPassed(`0,System.Decimal,System.String,System.String[])
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestPassed(TContext, decimal, string, string[]?)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestPassed(TContext, decimal, string, string[]?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestPassed(TContext, decimal, string, string[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestPassed
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 223
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: This method is called when a test has passed. By default, this sends <xref href="v3.1.0.1:Xunit.v3.TestPassed" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<(bool Continue, TestResultState ResultState)> OnTestPassed(TContext ctxt, decimal executionTime, string output, string[]? warnings)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: executionTime
      type: System.Decimal
      description: The time spent running the test
    - id: output
      type: System.String
      description: The output from the test
    - id: warnings
      type: System.String[]
      description: The warnings that were generated during the test
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestPassed(ctxt As TContext, executionTime As Decimal, output As String, warnings As String()) As ValueTask(Of ([Continue] As Boolean, ResultState As TestResultState))
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestPassed*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestPassed(TContext, Decimal, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestPassed(TContext, Decimal, String, String())
  name.vb: OnTestPassed(TContext, Decimal, String, String())
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestSkipped(`0,System.String,System.Decimal,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestSkipped(`0,System.String,System.Decimal,System.String,System.String[])
  id: OnTestSkipped(`0,System.String,System.Decimal,System.String,System.String[])
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestSkipped(TContext, string, decimal, string, string[]?)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestSkipped(TContext, string, decimal, string, string[]?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestSkipped(TContext, string, decimal, string, string[]?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestSkipped
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 261
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: This method is called when a test is skipped. By default, this sends <xref href="v3.1.0.1:Xunit.v3.TestSkipped" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.CleaningUp" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test cleanup failure.
  example: []
  syntax:
    content: protected virtual ValueTask<(bool Continue, TestResultState ResultState)> OnTestSkipped(TContext ctxt, string skipReason, decimal executionTime, string output, string[]? warnings)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: skipReason
      type: System.String
      description: The reason given for skipping the test
    - id: executionTime
      type: System.Decimal
      description: The time spent running the test
    - id: output
      type: System.String
      description: The output from the test
    - id: warnings
      type: System.String[]
      description: The warnings that were generated during the test
    return:
      type: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestSkipped(ctxt As TContext, skipReason As String, executionTime As Decimal, output As String, warnings As String()) As ValueTask(Of ([Continue] As Boolean, ResultState As TestResultState))
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestSkipped*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestSkipped(TContext, String, Decimal, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestSkipped(TContext, String, Decimal, String, String())
  name.vb: OnTestSkipped(TContext, String, Decimal, String, String())
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0)
  id: OnTestStarting(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestStarting(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestStarting(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestStarting(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestStarting
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 300
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    This method is called just before the test is run. By default, this sends

    <xref href="v3.1.0.1:Xunit.v3.TestStarting" data-throw-if-not-resolved="false"></xref>. Override this to enable any extensibility related to test

    start.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.Initializing" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test failure (and will prevent the test from running).  Even if this method records

    exceptions, <xref href="v3.1.0.1:Xunit.v3.TestRunnerBase%602.OnTestFinished(%600%2cSystem.Decimal%2cSystem.String%2cSystem.String%5b%5d)" data-throw-if-not-resolved="false"></xref> will be called.
  example: []
  syntax:
    content: protected virtual ValueTask<bool> OnTestStarting(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
      description: Return <code>true</code> if test execution should continue; <code>false</code> if it should be shut down.
    content.vb: Protected Overridable Function OnTestStarting(ctxt As TContext) As ValueTask(Of Boolean)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestStarting(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestStarting(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0,System.Boolean,System.Int32)
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestStarting(`0,System.Boolean,System.Int32)
  id: OnTestStarting(`0,System.Boolean,System.Int32)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: OnTestStarting(TContext, bool, int)
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestStarting(TContext, bool, int)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestStarting(TContext, bool, int)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: OnTestStarting
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 310
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    This is a helper that allows passing explicit and timeout values, since those are not

    part of the core object model.
  example: []
  syntax:
    content: protected ValueTask<bool> OnTestStarting(TContext ctxt, bool @explicit, int timeout)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: explicit
      type: System.Boolean
      description: A flag which indicates whether this is an explicit test
    - id: timeout
      type: System.Int32
      description: The timeout for running this test
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Protected Function OnTestStarting(ctxt As TContext, explicit As Boolean, timeout As Integer) As ValueTask(Of Boolean)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestStarting(TContext, Boolean, Integer)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestStarting(TContext, Boolean, Integer)
  name.vb: OnTestStarting(TContext, Boolean, Integer)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.Run(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.Run(`0)
  id: Run(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: Run(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.Run(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.Run(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: Run
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 343
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Runs the test.
  remarks: This function is the primary orchestrator of test execution.
  example: []
  syntax:
    content: protected ValueTask<RunSummary> Run(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Threading.Tasks.ValueTask{Xunit.v3.RunSummary}
      description: Returns summary information about the test that was run.
    content.vb: Protected Function Run(ctxt As TContext) As ValueTask(Of RunSummary)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.Run*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).Run(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).Run(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.RunTest(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.RunTest(`0)
  id: RunTest(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: RunTest(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.RunTest(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.RunTest(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: RunTest
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 438
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Override this method to run the test.
  example: []
  syntax:
    content: protected abstract ValueTask<TimeSpan> RunTest(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Threading.Tasks.ValueTask{System.TimeSpan}
    content.vb: Protected MustOverride Function RunTest(ctxt As TContext) As ValueTask(Of TimeSpan)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.RunTest*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).RunTest(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).RunTest(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.SetTestContext(`0,Xunit.TestEngineStatus,Xunit.TestResultState,System.Object)
  commentId: M:Xunit.v3.TestRunnerBase`2.SetTestContext(`0,Xunit.TestEngineStatus,Xunit.TestResultState,System.Object)
  id: SetTestContext(`0,Xunit.TestEngineStatus,Xunit.TestResultState,System.Object)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: SetTestContext(TContext, TestEngineStatus, TestResultState?, object?)
  nameWithType: TestRunnerBase<TContext, TTest>.SetTestContext(TContext, TestEngineStatus, TestResultState?, object?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.SetTestContext(TContext, Xunit.TestEngineStatus, Xunit.TestResultState?, object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: SetTestContext
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 452
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: Sets the test context for the given test state and engine status.
  remarks: >-
    This method must never throw. Behavior is undefined if it does. Instead, exceptions that

    occur should be recorded in the aggregator in <code class="paramref">ctxt</code> and will be reflected

    in a way that's appropriate based on when this method is called.
  example: []
  syntax:
    content: protected virtual void SetTestContext(TContext ctxt, TestEngineStatus testStatus, TestResultState? testState = null, object? testClassInstance = null)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    - id: testStatus
      type: Xunit.TestEngineStatus
      description: The current engine status for the test
    - id: testState
      type: Xunit.TestResultState
      description: The current test state
    - id: testClassInstance
      type: System.Object
      description: The instance of the test class
    content.vb: Protected Overridable Sub SetTestContext(ctxt As TContext, testStatus As TestEngineStatus, testState As TestResultState = Nothing, testClassInstance As Object = Nothing)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.SetTestContext*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).SetTestContext(TContext, TestEngineStatus, TestResultState, Object)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).SetTestContext(TContext, Xunit.TestEngineStatus, Xunit.TestResultState, Object)
  name.vb: SetTestContext(TContext, TestEngineStatus, TestResultState, Object)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.ShouldTestRun(`0)
  commentId: M:Xunit.v3.TestRunnerBase`2.ShouldTestRun(`0)
  id: ShouldTestRun(`0)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: ShouldTestRun(TContext)
  nameWithType: TestRunnerBase<TContext, TTest>.ShouldTestRun(TContext)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.ShouldTestRun(TContext)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: ShouldTestRun
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 481
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Override this to determine whether a test should be run or not (meaning, if you return <code>false</code>,

    it will be reported with a status of <xref href="v3.1.0.1:Xunit.TestResult.NotRun" data-throw-if-not-resolved="false"></xref>). By default, this method will

    return <code>true</code>. This is typically used to implement the ability to exclude specific tests

    unless they've been explicitly asked to be run.
  remarks: >-
    This method runs during <xref href="v3.1.0.1:Xunit.TestEngineStatus.Running" data-throw-if-not-resolved="false"></xref> and any exceptions thrown will

    contribute to test failure.
  example: []
  syntax:
    content: protected virtual bool ShouldTestRun(TContext ctxt)
    parameters:
    - id: ctxt
      type: '{TContext}'
      description: The context that describes the current test
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function ShouldTestRun(ctxt As TContext) As Boolean
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.ShouldTestRun*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).ShouldTestRun(TContext)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).ShouldTestRun(TContext)
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.UpdateTestContext(System.Object,Xunit.TestResultState)
  commentId: M:Xunit.v3.TestRunnerBase`2.UpdateTestContext(System.Object,Xunit.TestResultState)
  id: UpdateTestContext(System.Object,Xunit.TestResultState)
  parent: v3.1.0.1:Xunit.v3.TestRunnerBase`2
  langs:
  - csharp
  - vb
  name: UpdateTestContext(object?, TestResultState?)
  nameWithType: TestRunnerBase<TContext, TTest>.UpdateTestContext(object?, TestResultState?)
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.UpdateTestContext(object?, Xunit.TestResultState?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/Runners/TestRunnerBase.cs
      branch: 654c6156d8b2f9cf91e691d6366cd78be8ae2a63
      repo: https://github.com/xunit/xunit
    id: UpdateTestContext
    path: ../src/xunit.v3.core/Runners/TestRunnerBase.cs
    startLine: 489
  assemblies:
  - xunit.v3.core
  namespace: Xunit.v3
  summary: >-
    Updates the test context values while the test is running, without swapping out the test context

    itself. This preserves the values in the existing context (notably, the cancellation token, which

    is wrapped and passed, and as such cannot be replaced).
  example: []
  syntax:
    content: protected void UpdateTestContext(object? testClassInstance, TestResultState? testState = null)
    parameters:
    - id: testClassInstance
      type: System.Object
    - id: testState
      type: Xunit.TestResultState
    content.vb: Protected Sub UpdateTestContext(testClassInstance As Object, testState As TestResultState = Nothing)
  overload: v3.1.0.1:Xunit.v3.TestRunnerBase`2.UpdateTestContext*
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).UpdateTestContext(Object, TestResultState)
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).UpdateTestContext(Object, Xunit.TestResultState)
  name.vb: UpdateTestContext(Object, TestResultState)
references:
- uid: v3.1.0.1:Xunit.Sdk.ITest
  commentId: T:Xunit.Sdk.ITest
  parent: v3.1.0.1:Xunit.Sdk
  href: Xunit.Sdk.ITest.html
  name: ITest
  nameWithType: ITest
  fullName: Xunit.Sdk.ITest
- uid: v3.1.0.1:Xunit.v3
  commentId: N:Xunit.v3
  href: Xunit.html
  name: Xunit.v3
  nameWithType: Xunit.v3
  fullName: Xunit.v3
  spec.csharp:
  - uid: v3.1.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.1:Xunit.v3
    name: v3
    href: Xunit.v3.html
  spec.vb:
  - uid: v3.1.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.1:Xunit.v3
    name: v3
    href: Xunit.v3.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: v3.1.0.1:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.1.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.1:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.1.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.1.0.1:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.1.0.1:Xunit.v3.TestRunner`2
  commentId: T:Xunit.v3.TestRunner`2
  href: Xunit.v3.TestRunner-2.html
  name: TestRunner<TContext, TTest>
  nameWithType: TestRunner<TContext, TTest>
  fullName: Xunit.v3.TestRunner<TContext, TTest>
  nameWithType.vb: TestRunner(Of TContext, TTest)
  fullName.vb: Xunit.v3.TestRunner(Of TContext, TTest)
  name.vb: TestRunner(Of TContext, TTest)
  spec.csharp:
  - uid: v3.1.0.1:Xunit.v3.TestRunner`2
    name: TestRunner
    href: Xunit.v3.TestRunner-2.html
  - name: <
  - name: TContext
  - name: ','
  - name: " "
  - name: TTest
  - name: '>'
  spec.vb:
  - uid: v3.1.0.1:Xunit.v3.TestRunner`2
    name: TestRunner
    href: Xunit.v3.TestRunner-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TContext
  - name: ','
  - name: " "
  - name: TTest
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.#ctor*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.#ctor
  href: Xunit.v3.TestRunnerBase-2.-ctor.html#Xunit_v3_TestRunnerBase_2__ctor
  name: TestRunnerBase
  nameWithType: TestRunnerBase<TContext, TTest>.TestRunnerBase
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.TestRunnerBase
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).New
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).New
  name.vb: New
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string.empty
  name: Empty
  nameWithType: string.Empty
  fullName: string.Empty
  nameWithType.vb: String.Empty
  fullName.vb: String.Empty
- uid: v3.1.0.1:Xunit.TestEngineStatus.CleaningUp
  commentId: F:Xunit.TestEngineStatus.CleaningUp
  href: Xunit.TestEngineStatus.html#Xunit_TestEngineStatus_CleaningUp
  name: CleaningUp
  nameWithType: TestEngineStatus.CleaningUp
  fullName: Xunit.TestEngineStatus.CleaningUp
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetTestOutput*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.GetTestOutput
  href: Xunit.v3.TestRunnerBase-2.GetTestOutput.html#Xunit_v3_TestRunnerBase_2_GetTestOutput__0_
  name: GetTestOutput
  nameWithType: TestRunnerBase<TContext, TTest>.GetTestOutput
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.GetTestOutput
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).GetTestOutput
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).GetTestOutput
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: System.Threading.Tasks.ValueTask{System.String}
  commentId: T:System.Threading.Tasks.ValueTask{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<string>
  nameWithType: ValueTask<string>
  fullName: System.Threading.Tasks.ValueTask<string>
  nameWithType.vb: ValueTask(Of String)
  fullName.vb: System.Threading.Tasks.ValueTask(Of String)
  name.vb: ValueTask(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.GetWarnings*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.GetWarnings
  href: Xunit.v3.TestRunnerBase-2.GetWarnings.html#Xunit_v3_TestRunnerBase_2_GetWarnings__0_
  name: GetWarnings
  nameWithType: TestRunnerBase<TContext, TTest>.GetWarnings
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.GetWarnings
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).GetWarnings
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).GetWarnings
- uid: System.Threading.Tasks.ValueTask{System.String[]}
  commentId: T:System.Threading.Tasks.ValueTask{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<string[]>
  nameWithType: ValueTask<string[]>
  fullName: System.Threading.Tasks.ValueTask<string[]>
  nameWithType.vb: ValueTask(Of String())
  fullName.vb: System.Threading.Tasks.ValueTask(Of String())
  name.vb: ValueTask(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestCleanupFailure
  commentId: T:Xunit.v3.TestCleanupFailure
  href: Xunit.v3.TestCleanupFailure.html
  name: TestCleanupFailure
  nameWithType: TestCleanupFailure
  fullName: Xunit.v3.TestCleanupFailure
- uid: v3.1.0.1:Xunit.Sdk.IErrorMessage
  commentId: T:Xunit.Sdk.IErrorMessage
  parent: v3.1.0.1:Xunit.Sdk
  href: Xunit.Sdk.IErrorMessage.html
  name: IErrorMessage
  nameWithType: IErrorMessage
  fullName: Xunit.Sdk.IErrorMessage
- uid: System.AggregateException
  commentId: T:System.AggregateException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.aggregateexception
  name: AggregateException
  nameWithType: AggregateException
  fullName: System.AggregateException
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestCleanupFailure
  href: Xunit.v3.TestRunnerBase-2.OnTestCleanupFailure.html#Xunit_v3_TestRunnerBase_2_OnTestCleanupFailure__0_System_Exception_
  name: OnTestCleanupFailure
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestCleanupFailure
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestCleanupFailure
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestCleanupFailure
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestCleanupFailure
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<bool>
  nameWithType: ValueTask<bool>
  fullName: System.Threading.Tasks.ValueTask<bool>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestFailed
  commentId: T:Xunit.v3.TestFailed
  href: Xunit.v3.TestFailed.html
  name: TestFailed
  nameWithType: TestFailed
  fullName: Xunit.v3.TestFailed
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFailed*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestFailed
  href: Xunit.v3.TestRunnerBase-2.OnTestFailed.html#Xunit_v3_TestRunnerBase_2_OnTestFailed__0_System_Exception_System_Decimal_System_String_System_String___
  name: OnTestFailed
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestFailed
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestFailed
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestFailed
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestFailed
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
  commentId: T:System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,Xunit.TestResultState}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<(bool Continue, TestResultState ResultState)>
  nameWithType: ValueTask<(bool Continue, TestResultState ResultState)>
  fullName: System.Threading.Tasks.ValueTask<(bool Continue, Xunit.TestResultState ResultState)>
  nameWithType.vb: ValueTask(Of (Continue As Boolean, ResultState As TestResultState))
  fullName.vb: System.Threading.Tasks.ValueTask(Of (Continue As Boolean, ResultState As Xunit.TestResultState))
  name.vb: ValueTask(Of (Continue As Boolean, ResultState As TestResultState))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Xunit.TestResultState}.Continue
    name: Continue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,xunit.testresultstate-.continue
  - name: ','
  - name: " "
  - uid: v3.1.0.1:Xunit.TestResultState
    name: TestResultState
    href: Xunit.TestResultState.html
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Xunit.TestResultState}.ResultState
    name: ResultState
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,xunit.testresultstate-.resultstate
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Boolean,Xunit.TestResultState}.Continue
    name: Continue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,xunit.testresultstate-.continue
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,Xunit.TestResultState}.ResultState
    name: ResultState
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,xunit.testresultstate-.resultstate
  - name: " "
  - name: As
  - name: " "
  - uid: v3.1.0.1:Xunit.TestResultState
    name: TestResultState
    href: Xunit.TestResultState.html
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestFinished
  commentId: T:Xunit.v3.TestFinished
  href: Xunit.v3.TestFinished.html
  name: TestFinished
  nameWithType: TestFinished
  fullName: Xunit.v3.TestFinished
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestFinished
  href: Xunit.v3.TestRunnerBase-2.OnTestFinished.html#Xunit_v3_TestRunnerBase_2_OnTestFinished__0_System_Decimal_System_String_System_String___
  name: OnTestFinished
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestFinished
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestFinished
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestFinished
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestFinished
- uid: v3.1.0.1:Xunit.v3.TestNotRun
  commentId: T:Xunit.v3.TestNotRun
  href: Xunit.v3.TestNotRun.html
  name: TestNotRun
  nameWithType: TestNotRun
  fullName: Xunit.v3.TestNotRun
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestNotRun*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestNotRun
  href: Xunit.v3.TestRunnerBase-2.OnTestNotRun.html#Xunit_v3_TestRunnerBase_2_OnTestNotRun__0_System_String_System_String___
  name: OnTestNotRun
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestNotRun
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestNotRun
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestNotRun
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestNotRun
- uid: v3.1.0.1:Xunit.v3.TestPassed
  commentId: T:Xunit.v3.TestPassed
  href: Xunit.v3.TestPassed.html
  name: TestPassed
  nameWithType: TestPassed
  fullName: Xunit.v3.TestPassed
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestPassed*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestPassed
  href: Xunit.v3.TestRunnerBase-2.OnTestPassed.html#Xunit_v3_TestRunnerBase_2_OnTestPassed__0_System_Decimal_System_String_System_String___
  name: OnTestPassed
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestPassed
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestPassed
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestPassed
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestPassed
- uid: v3.1.0.1:Xunit.v3.TestSkipped
  commentId: T:Xunit.v3.TestSkipped
  href: Xunit.v3.TestSkipped.html
  name: TestSkipped
  nameWithType: TestSkipped
  fullName: Xunit.v3.TestSkipped
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestSkipped*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestSkipped
  href: Xunit.v3.TestRunnerBase-2.OnTestSkipped.html#Xunit_v3_TestRunnerBase_2_OnTestSkipped__0_System_String_System_Decimal_System_String_System_String___
  name: OnTestSkipped
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestSkipped
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestSkipped
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestSkipped
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestSkipped
- uid: v3.1.0.1:Xunit.v3.TestStarting
  commentId: T:Xunit.v3.TestStarting
  href: Xunit.v3.TestStarting.html
  name: TestStarting
  nameWithType: TestStarting
  fullName: Xunit.v3.TestStarting
- uid: v3.1.0.1:Xunit.TestEngineStatus.Initializing
  commentId: F:Xunit.TestEngineStatus.Initializing
  href: Xunit.TestEngineStatus.html#Xunit_TestEngineStatus_Initializing
  name: Initializing
  nameWithType: TestEngineStatus.Initializing
  fullName: Xunit.TestEngineStatus.Initializing
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
  commentId: M:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
  isExternal: true
  href: Xunit.v3.TestRunnerBase-2.OnTestFinished.html#Xunit_v3_TestRunnerBase_2_OnTestFinished__0_System_Decimal_System_String_System_String___
  name: OnTestFinished(TContext, decimal, string, string[])
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestFinished(TContext, decimal, string, string[])
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestFinished(TContext, decimal, string, string[])
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestFinished(TContext, Decimal, String, String())
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestFinished(TContext, Decimal, String, String())
  name.vb: OnTestFinished(TContext, Decimal, String, String())
  spec.csharp:
  - uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
    name: OnTestFinished
    href: Xunit.v3.TestRunnerBase-2.OnTestFinished.html#Xunit_v3_TestRunnerBase_2_OnTestFinished__0_System_Decimal_System_String_System_String___
  - name: (
  - name: TContext
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestFinished(`0,System.Decimal,System.String,System.String[])
    name: OnTestFinished
    href: Xunit.v3.TestRunnerBase-2.OnTestFinished.html#Xunit_v3_TestRunnerBase_2_OnTestFinished__0_System_Decimal_System_String_System_String___
  - name: (
  - name: TContext
  - name: ','
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.OnTestStarting*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.OnTestStarting
  href: Xunit.v3.TestRunnerBase-2.OnTestStarting.html#Xunit_v3_TestRunnerBase_2_OnTestStarting__0_
  name: OnTestStarting
  nameWithType: TestRunnerBase<TContext, TTest>.OnTestStarting
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.OnTestStarting
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).OnTestStarting
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).OnTestStarting
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.Run*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.Run
  href: Xunit.v3.TestRunnerBase-2.Run.html#Xunit_v3_TestRunnerBase_2_Run__0_
  name: Run
  nameWithType: TestRunnerBase<TContext, TTest>.Run
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.Run
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).Run
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).Run
- uid: System.Threading.Tasks.ValueTask{Xunit.v3.RunSummary}
  commentId: T:System.Threading.Tasks.ValueTask{Xunit.v3.RunSummary}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<RunSummary>
  nameWithType: ValueTask<RunSummary>
  fullName: System.Threading.Tasks.ValueTask<Xunit.v3.RunSummary>
  nameWithType.vb: ValueTask(Of RunSummary)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Xunit.v3.RunSummary)
  name.vb: ValueTask(Of RunSummary)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: v3.1.0.1:Xunit.v3.RunSummary
    name: RunSummary
    href: Xunit.v3.RunSummary.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: v3.1.0.1:Xunit.v3.RunSummary
    name: RunSummary
    href: Xunit.v3.RunSummary.html
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.RunTest*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.RunTest
  href: Xunit.v3.TestRunnerBase-2.RunTest.html#Xunit_v3_TestRunnerBase_2_RunTest__0_
  name: RunTest
  nameWithType: TestRunnerBase<TContext, TTest>.RunTest
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.RunTest
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).RunTest
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).RunTest
- uid: System.Threading.Tasks.ValueTask{System.TimeSpan}
  commentId: T:System.Threading.Tasks.ValueTask{System.TimeSpan}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TimeSpan>
  nameWithType: ValueTask<TimeSpan>
  fullName: System.Threading.Tasks.ValueTask<System.TimeSpan>
  nameWithType.vb: ValueTask(Of TimeSpan)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.TimeSpan)
  name.vb: ValueTask(Of TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.SetTestContext*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.SetTestContext
  href: Xunit.v3.TestRunnerBase-2.SetTestContext.html#Xunit_v3_TestRunnerBase_2_SetTestContext__0_Xunit_TestEngineStatus_Xunit_TestResultState_System_Object_
  name: SetTestContext
  nameWithType: TestRunnerBase<TContext, TTest>.SetTestContext
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.SetTestContext
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).SetTestContext
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).SetTestContext
- uid: v3.1.0.1:Xunit.TestEngineStatus
  commentId: T:Xunit.TestEngineStatus
  parent: v3.1.0.1:Xunit
  href: Xunit.TestEngineStatus.html
  name: TestEngineStatus
  nameWithType: TestEngineStatus
  fullName: Xunit.TestEngineStatus
- uid: v3.1.0.1:Xunit.TestResultState
  commentId: T:Xunit.TestResultState
  parent: v3.1.0.1:Xunit
  href: Xunit.TestResultState.html
  name: TestResultState
  nameWithType: TestResultState
  fullName: Xunit.TestResultState
- uid: v3.1.0.1:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: v3.1.0.1:Xunit.TestResult.NotRun
  commentId: F:Xunit.TestResult.NotRun
  href: Xunit.TestResult.html#Xunit_TestResult_NotRun
  name: NotRun
  nameWithType: TestResult.NotRun
  fullName: Xunit.TestResult.NotRun
- uid: v3.1.0.1:Xunit.TestEngineStatus.Running
  commentId: F:Xunit.TestEngineStatus.Running
  href: Xunit.TestEngineStatus.html#Xunit_TestEngineStatus_Running
  name: Running
  nameWithType: TestEngineStatus.Running
  fullName: Xunit.TestEngineStatus.Running
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.ShouldTestRun*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.ShouldTestRun
  href: Xunit.v3.TestRunnerBase-2.ShouldTestRun.html#Xunit_v3_TestRunnerBase_2_ShouldTestRun__0_
  name: ShouldTestRun
  nameWithType: TestRunnerBase<TContext, TTest>.ShouldTestRun
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.ShouldTestRun
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).ShouldTestRun
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).ShouldTestRun
- uid: v3.1.0.1:Xunit.v3.TestRunnerBase`2.UpdateTestContext*
  commentId: Overload:Xunit.v3.TestRunnerBase`2.UpdateTestContext
  href: Xunit.v3.TestRunnerBase-2.UpdateTestContext.html#Xunit_v3_TestRunnerBase_2_UpdateTestContext_System_Object_Xunit_TestResultState_
  name: UpdateTestContext
  nameWithType: TestRunnerBase<TContext, TTest>.UpdateTestContext
  fullName: Xunit.v3.TestRunnerBase<TContext, TTest>.UpdateTestContext
  nameWithType.vb: TestRunnerBase(Of TContext, TTest).UpdateTestContext
  fullName.vb: Xunit.v3.TestRunnerBase(Of TContext, TTest).UpdateTestContext
memberLayout: SeparatePages
