### YamlMime:ManagedReference
items:
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  commentId: T:Xunit.Sdk.JsonDeserializer
  id: JsonDeserializer
  parent: v3.2.0.1:Xunit.Sdk
  children:
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryDeserialize(System.String,System.Object@)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString(System.Object,System.Boolean)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Object)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  - v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Object)
  langs:
  - csharp
  - vb
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: Xunit.Sdk.JsonDeserializer
  type: Class
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: JsonDeserializer
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 27
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    A special-purpose untyped deserializer for JSON. JSON strings are returned as <xref href="System.String" data-throw-if-not-resolved="false"></xref>,

    JSON numbers are returned as <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>, JSON booleans are returns as <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>,

    JSON objects are returned as <code>IReadOnlyDictionary&lt;string, object?&gt;</code>, JSON arrays are

    returned as <code>object?[]</code>, and JSON null values are returned as <code>null</code>. Static methods exist

    here to help retrieve values from object dictionaries as well as convert to the commonly supported

    data types (<xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>, <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>, <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>, <xref href="System.Enum" data-throw-if-not-resolved="false"></xref>,

    <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>, <xref href="System.String" data-throw-if-not-resolved="false"></xref>, and trait dictionaries (which are

    decoded to <code>IReadOnlyDictionary&lt;string, IReadOnlyList&lt;string&gt;&gt;</code>), as well as arrays

    of all the supported types (except trait dictionaries). Developers who need support for other types

    are encouraged to encode and decode then as strings as needed (for examples, you can see how

    <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> and <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> values are handled here).
  remarks: >-
    These types are made public for third parties only for the purpose of serializing and

    deserializing messages that are sent across the process boundary (that is, types which

    implement <xref href="v3.2.0.1:Xunit.Sdk.IMessageSinkMessage" data-throw-if-not-resolved="false"></xref>). Any other usage is not supported.
  example: []
  syntax:
    content: public static class JsonDeserializer
    content.vb: Public Module JsonDeserializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryDeserialize(System.String,System.Object@)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryDeserialize(System.String,System.Object@)
  id: TryDeserialize(System.String,System.Object@)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryDeserialize(string, out object?)
  nameWithType: JsonDeserializer.TryDeserialize(string, out object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryDeserialize(string, out object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryDeserialize
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 71
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: ''
  example: []
  syntax:
    content: public static bool TryDeserialize(string json, out object? result)
    parameters:
    - id: json
      type: System.String
    - id: result
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryDeserialize(json As String, result As Object) As Boolean
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryDeserialize*
  nameWithType.vb: JsonDeserializer.TryDeserialize(String, Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryDeserialize(String, Object)
  name.vb: TryDeserialize(String, Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArray(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArray(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArray(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArray(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArray
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 274
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an untyped array value from a deserialized JSON object.
  example: []
  syntax:
    content: public static object?[]? TryGetArray(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Object[]
    content.vb: Public Shared Function TryGetArray(obj As IReadOnlyDictionary(Of String, Object), key As String) As Object()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray*
  nameWithType.vb: JsonDeserializer.TryGetArray(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArray(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArray(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArray(System.Object)
  id: TryGetArray(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArray(object?)
  nameWithType: JsonDeserializer.TryGetArray(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArray(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArray
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 283
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an untyped array value from a deserialized JSON value.
  example: []
  syntax:
    content: public static object?[]? TryGetArray(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Object[]
    content.vb: Public Shared Function TryGetArray(value As Object) As Object()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray*
  nameWithType.vb: JsonDeserializer.TryGetArray(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArray(Object)
  name.vb: TryGetArray(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfBoolean(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfBoolean(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfBoolean
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 294
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static bool[]? TryGetArrayOfBoolean(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Boolean[]
    content.vb: Public Shared Function TryGetArrayOfBoolean(obj As IReadOnlyDictionary(Of String, Object), key As String) As Boolean()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfBoolean(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfBoolean(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(System.Object)
  id: TryGetArrayOfBoolean(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfBoolean(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfBoolean(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfBoolean
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 306
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static bool[]? TryGetArrayOfBoolean(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Boolean[]
    content.vb: Public Shared Function TryGetArrayOfBoolean(value As Object) As Boolean()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfBoolean(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean(Object)
  name.vb: TryGetArrayOfBoolean(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfDateTimeOffset(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfDateTimeOffset(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfDateTimeOffset
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 317
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static DateTimeOffset[]? TryGetArrayOfDateTimeOffset(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.DateTimeOffset[]
    content.vb: Public Shared Function TryGetArrayOfDateTimeOffset(obj As IReadOnlyDictionary(Of String, Object), key As String) As DateTimeOffset()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfDateTimeOffset(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfDateTimeOffset(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(System.Object)
  id: TryGetArrayOfDateTimeOffset(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfDateTimeOffset(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfDateTimeOffset(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfDateTimeOffset
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 329
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static DateTimeOffset[]? TryGetArrayOfDateTimeOffset(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.DateTimeOffset[]
    content.vb: Public Shared Function TryGetArrayOfDateTimeOffset(value As Object) As DateTimeOffset()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfDateTimeOffset(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset(Object)
  name.vb: TryGetArrayOfDateTimeOffset(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfDecimal(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfDecimal(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfDecimal
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 340
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static decimal[]? TryGetArrayOfDecimal(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Decimal[]
    content.vb: Public Shared Function TryGetArrayOfDecimal(obj As IReadOnlyDictionary(Of String, Object), key As String) As Decimal()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfDecimal(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfDecimal(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(System.Object)
  id: TryGetArrayOfDecimal(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfDecimal(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfDecimal(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfDecimal
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 352
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static decimal[]? TryGetArrayOfDecimal(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Decimal[]
    content.vb: Public Shared Function TryGetArrayOfDecimal(value As Object) As Decimal()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfDecimal(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal(Object)
  name.vb: TryGetArrayOfDecimal(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfEnum<TEnum>(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfEnum<TEnum>(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum<TEnum>(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfEnum
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 363
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <code class="typeparamref">TEnum</code> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <code class="typeparamref">TEnum</code>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: 'public static TEnum[]? TryGetArrayOfEnum<TEnum>(IReadOnlyDictionary<string, object?> obj, string key) where TEnum : struct, Enum'
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    typeParameters:
    - id: TEnum
    return:
      type: '{TEnum}[]'
    content.vb: Public Shared Function TryGetArrayOfEnum(Of TEnum As {Structure, [Enum]})(obj As IReadOnlyDictionary(Of String, Object), key As String) As TEnum()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfEnum(Of TEnum)(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum(Of TEnum)(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfEnum(Of TEnum)(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum``1(System.Object)
  id: TryGetArrayOfEnum``1(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfEnum<TEnum>(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfEnum<TEnum>(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum<TEnum>(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfEnum
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 376
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <code class="typeparamref">TEnum</code> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <code class="typeparamref">TEnum</code>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: 'public static TEnum[]? TryGetArrayOfEnum<TEnum>(object? value) where TEnum : struct, Enum'
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    typeParameters:
    - id: TEnum
    return:
      type: '{TEnum}[]'
    content.vb: Public Shared Function TryGetArrayOfEnum(Of TEnum As {Structure, [Enum]})(value As Object) As TEnum()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfEnum(Of TEnum)(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum(Of TEnum)(Object)
  name.vb: TryGetArrayOfEnum(Of TEnum)(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfInt(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfInt(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfInt
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 388
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static int[]? TryGetArrayOfInt(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Int32[]
    content.vb: Public Shared Function TryGetArrayOfInt(obj As IReadOnlyDictionary(Of String, Object), key As String) As Integer()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfInt(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfInt(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(System.Object)
  id: TryGetArrayOfInt(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfInt(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfInt(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfInt
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 400
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static int[]? TryGetArrayOfInt(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Int32[]
    content.vb: Public Shared Function TryGetArrayOfInt(value As Object) As Integer()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfInt(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt(Object)
  name.vb: TryGetArrayOfInt(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfLong(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfLong(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfLong
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 411
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static long[]? TryGetArrayOfLong(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Int64[]
    content.vb: Public Shared Function TryGetArrayOfLong(obj As IReadOnlyDictionary(Of String, Object), key As String) As Long()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfLong(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfLong(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(System.Object)
  id: TryGetArrayOfLong(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfLong(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfLong(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfLong
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 423
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static long[]? TryGetArrayOfLong(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Int64[]
    content.vb: Public Shared Function TryGetArrayOfLong(value As Object) As Long()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfLong(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong(Object)
  name.vb: TryGetArrayOfLong(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfNullableString(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfNullableString(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfNullableString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 434
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.String" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.String" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are permitted.
  example: []
  syntax:
    content: public static string?[]? TryGetArrayOfNullableString(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.String[]
    content.vb: Public Shared Function TryGetArrayOfNullableString(obj As IReadOnlyDictionary(Of String, Object), key As String) As String()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfNullableString(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfNullableString(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(System.Object)
  id: TryGetArrayOfNullableString(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfNullableString(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfNullableString(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfNullableString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 446
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.String" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.String" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are permitted.
  example: []
  syntax:
    content: public static string?[]? TryGetArrayOfNullableString(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.String[]
    content.vb: Public Shared Function TryGetArrayOfNullableString(value As Object) As String()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfNullableString(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString(Object)
  name.vb: TryGetArrayOfNullableString(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfString(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetArrayOfString(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 457
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.String" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    object. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.String" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static string[]? TryGetArrayOfString(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.String[]
    content.vb: Public Shared Function TryGetArrayOfString(obj As IReadOnlyDictionary(Of String, Object), key As String) As String()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfString(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetArrayOfString(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(System.Object)
  id: TryGetArrayOfString(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetArrayOfString(object?)
  nameWithType: JsonDeserializer.TryGetArrayOfString(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetArrayOfString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 469
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: >-
    Tries to get an array of <xref href="System.String" data-throw-if-not-resolved="false"></xref> values from a deserialized JSON

    value. If the value isn't an array, or if any of the values in the array

    aren't compatible with <xref href="System.String" data-throw-if-not-resolved="false"></xref>, then returns <code>null</code>.

    Null values in the array are not permitted.
  example: []
  syntax:
    content: public static string[]? TryGetArrayOfString(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.String[]
    content.vb: Public Shared Function TryGetArrayOfString(value As Object) As String()
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString*
  nameWithType.vb: JsonDeserializer.TryGetArrayOfString(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString(Object)
  name.vb: TryGetArrayOfString(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetBoolean(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetBoolean(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetBoolean
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 477
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static bool? TryGetBoolean(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Function TryGetBoolean(obj As IReadOnlyDictionary(Of String, Object), key As String) As Boolean?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean*
  nameWithType.vb: JsonDeserializer.TryGetBoolean(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetBoolean(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetBoolean(System.Object)
  id: TryGetBoolean(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetBoolean(object?)
  nameWithType: JsonDeserializer.TryGetBoolean(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetBoolean(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetBoolean
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 486
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static bool? TryGetBoolean(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Function TryGetBoolean(value As Object) As Boolean?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean*
  nameWithType.vb: JsonDeserializer.TryGetBoolean(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetBoolean(Object)
  name.vb: TryGetBoolean(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetDateTimeOffset(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetDateTimeOffset(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetDateTimeOffset
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 494
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static DateTimeOffset? TryGetDateTimeOffset(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Shared Function TryGetDateTimeOffset(obj As IReadOnlyDictionary(Of String, Object), key As String) As DateTimeOffset?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset*
  nameWithType.vb: JsonDeserializer.TryGetDateTimeOffset(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetDateTimeOffset(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(System.Object)
  id: TryGetDateTimeOffset(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetDateTimeOffset(object?)
  nameWithType: JsonDeserializer.TryGetDateTimeOffset(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetDateTimeOffset
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 503
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static DateTimeOffset? TryGetDateTimeOffset(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Shared Function TryGetDateTimeOffset(value As Object) As DateTimeOffset?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset*
  nameWithType.vb: JsonDeserializer.TryGetDateTimeOffset(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset(Object)
  name.vb: TryGetDateTimeOffset(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetDecimal(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetDecimal(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetDecimal
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 511
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static decimal? TryGetDecimal(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function TryGetDecimal(obj As IReadOnlyDictionary(Of String, Object), key As String) As Decimal?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal*
  nameWithType.vb: JsonDeserializer.TryGetDecimal(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetDecimal(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetDecimal(System.Object)
  id: TryGetDecimal(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetDecimal(object?)
  nameWithType: JsonDeserializer.TryGetDecimal(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDecimal(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetDecimal
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 520
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static decimal? TryGetDecimal(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function TryGetDecimal(value As Object) As Decimal?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal*
  nameWithType.vb: JsonDeserializer.TryGetDecimal(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetDecimal(Object)
  name.vb: TryGetDecimal(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetEnum``1(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetEnum<TEnum>(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetEnum<TEnum>(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetEnum<TEnum>(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetEnum
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 528
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: 'public static TEnum? TryGetEnum<TEnum>(IReadOnlyDictionary<string, object?> obj, string key) where TEnum : struct, Enum'
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    typeParameters:
    - id: TEnum
    return:
      type: System.Nullable{{TEnum}}
    content.vb: Public Shared Function TryGetEnum(Of TEnum As {Structure, [Enum]})(obj As IReadOnlyDictionary(Of String, Object), key As String) As TEnum?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum*
  nameWithType.vb: JsonDeserializer.TryGetEnum(Of TEnum)(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetEnum(Of TEnum)(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetEnum(Of TEnum)(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetEnum``1(System.Object)
  id: TryGetEnum``1(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetEnum<TEnum>(object?)
  nameWithType: JsonDeserializer.TryGetEnum<TEnum>(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetEnum<TEnum>(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetEnum
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 538
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: 'public static TEnum? TryGetEnum<TEnum>(object? value) where TEnum : struct, Enum'
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    typeParameters:
    - id: TEnum
    return:
      type: System.Nullable{{TEnum}}
    content.vb: Public Shared Function TryGetEnum(Of TEnum As {Structure, [Enum]})(value As Object) As TEnum?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum*
  nameWithType.vb: JsonDeserializer.TryGetEnum(Of TEnum)(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetEnum(Of TEnum)(Object)
  name.vb: TryGetEnum(Of TEnum)(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetInt(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetInt(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetInt(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetInt(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetInt
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 547
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static int? TryGetInt(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function TryGetInt(obj As IReadOnlyDictionary(Of String, Object), key As String) As Integer?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt*
  nameWithType.vb: JsonDeserializer.TryGetInt(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetInt(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetInt(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetInt(System.Object)
  id: TryGetInt(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetInt(object?)
  nameWithType: JsonDeserializer.TryGetInt(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetInt(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetInt
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 556
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static int? TryGetInt(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function TryGetInt(value As Object) As Integer?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt*
  nameWithType.vb: JsonDeserializer.TryGetInt(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetInt(Object)
  name.vb: TryGetInt(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetLong(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetLong(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetLong(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetLong(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetLong
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 564
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static long? TryGetLong(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function TryGetLong(obj As IReadOnlyDictionary(Of String, Object), key As String) As Long?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong*
  nameWithType.vb: JsonDeserializer.TryGetLong(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetLong(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetLong(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetLong(System.Object)
  id: TryGetLong(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetLong(object?)
  nameWithType: JsonDeserializer.TryGetLong(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetLong(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetLong
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 573
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static long? TryGetLong(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function TryGetLong(value As Object) As Long?
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong*
  nameWithType.vb: JsonDeserializer.TryGetLong(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetLong(Object)
  name.vb: TryGetLong(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetObject(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetObject(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetObject(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetObject(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetObject
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 581
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an untyped object value from a deserialized JSON object.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, object?>? TryGetObject(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    content.vb: Public Shared Function TryGetObject(obj As IReadOnlyDictionary(Of String, Object), key As String) As IReadOnlyDictionary(Of String, Object)
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject*
  nameWithType.vb: JsonDeserializer.TryGetObject(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetObject(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetObject(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetObject(System.Object)
  id: TryGetObject(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetObject(object?)
  nameWithType: JsonDeserializer.TryGetObject(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetObject(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetObject
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 590
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an untyped object value from a deserialized JSON value.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, object?>? TryGetObject(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    content.vb: Public Shared Function TryGetObject(value As Object) As IReadOnlyDictionary(Of String, Object)
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject*
  nameWithType.vb: JsonDeserializer.TryGetObject(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetObject(Object)
  name.vb: TryGetObject(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  id: TryGetString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetString(IReadOnlyDictionary<string, object?>, string, bool)
  nameWithType: JsonDeserializer.TryGetString(IReadOnlyDictionary<string, object?>, string, bool)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetString(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string, bool)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 600
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.String" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static string? TryGetString(IReadOnlyDictionary<string, object?> obj, string key, bool defaultEmptyString = false)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    - id: defaultEmptyString
      type: System.Boolean
      description: Flag to indicate if a default empty string should be returned instead of <code>null</code>
    return:
      type: System.String
      description: Returns the value if present; <code>null</code>, otherwise.
    content.vb: Public Shared Function TryGetString(obj As IReadOnlyDictionary(Of String, Object), key As String, defaultEmptyString As Boolean = False) As String
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString*
  nameWithType.vb: JsonDeserializer.TryGetString(IReadOnlyDictionary(Of String, Object), String, Boolean)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetString(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String, Boolean)
  name.vb: TryGetString(IReadOnlyDictionary(Of String, Object), String, Boolean)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString(System.Object,System.Boolean)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetString(System.Object,System.Boolean)
  id: TryGetString(System.Object,System.Boolean)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetString(object?, bool)
  nameWithType: JsonDeserializer.TryGetString(object?, bool)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetString(object?, bool)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetString
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 612
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get an <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static string? TryGetString(object? value, bool defaultEmptyString = false)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    - id: defaultEmptyString
      type: System.Boolean
      description: Flag to indicate if a default empty string should be returned instead of <code>null</code>
    return:
      type: System.String
      description: Returns the value if present; <code>null</code>, otherwise.
    content.vb: Public Shared Function TryGetString(value As Object, defaultEmptyString As Boolean = False) As String
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString*
  nameWithType.vb: JsonDeserializer.TryGetString(Object, Boolean)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetString(Object, Boolean)
  name.vb: TryGetString(Object, Boolean)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  id: TryGetTraits(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String,System.Boolean)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetTraits(IReadOnlyDictionary<string, object?>, string, bool)
  nameWithType: JsonDeserializer.TryGetTraits(IReadOnlyDictionary<string, object?>, string, bool)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string, bool)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetTraits
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 623
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a trait dictionary value from a deserialized JSON object.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>>? TryGetTraits(IReadOnlyDictionary<string, object?> obj, string key, bool defaultEmptyDictionary = true)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    - id: defaultEmptyDictionary
      type: System.Boolean
      description: Flag to indicate if a default empty dictionary should be returned instead of <code>null</code>
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
    content.vb: Public Shared Function TryGetTraits(obj As IReadOnlyDictionary(Of String, Object), key As String, defaultEmptyDictionary As Boolean = True) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits*
  nameWithType.vb: JsonDeserializer.TryGetTraits(IReadOnlyDictionary(Of String, Object), String, Boolean)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String, Boolean)
  name.vb: TryGetTraits(IReadOnlyDictionary(Of String, Object), String, Boolean)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  id: TryGetVersion(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.String)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetVersion(IReadOnlyDictionary<string, object?>, string)
  nameWithType: JsonDeserializer.TryGetVersion(IReadOnlyDictionary<string, object?>, string)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Collections.Generic.IReadOnlyDictionary<string, object?>, string)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetVersion
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 634
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Version" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON object.
  example: []
  syntax:
    content: public static Version? TryGetVersion(IReadOnlyDictionary<string, object?> obj, string key)
    parameters:
    - id: obj
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
      description: The deserialized JSON object
    - id: key
      type: System.String
      description: The key for the value
    return:
      type: System.Version
    content.vb: Public Shared Function TryGetVersion(obj As IReadOnlyDictionary(Of String, Object), key As String) As Version
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion*
  nameWithType.vb: JsonDeserializer.TryGetVersion(IReadOnlyDictionary(Of String, Object), String)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Collections.Generic.IReadOnlyDictionary(Of String, Object), String)
  name.vb: TryGetVersion(IReadOnlyDictionary(Of String, Object), String)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetVersion(System.Object)
  id: TryGetVersion(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetVersion(object?)
  nameWithType: JsonDeserializer.TryGetVersion(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetVersion(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetVersion
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 643
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.Version" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static Version? TryGetVersion(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Version
    content.vb: Public Shared Function TryGetVersion(value As Object) As Version
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion*
  nameWithType.vb: JsonDeserializer.TryGetVersion(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetVersion(Object)
  name.vb: TryGetVersion(Object)
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Object)
  commentId: M:Xunit.Sdk.JsonDeserializer.TryGetTraits(System.Object)
  id: TryGetTraits(System.Object)
  parent: v3.2.0.1:Xunit.Sdk.JsonDeserializer
  langs:
  - csharp
  - vb
  name: TryGetTraits(object?)
  nameWithType: JsonDeserializer.TryGetTraits(object?)
  fullName: Xunit.Sdk.JsonDeserializer.TryGetTraits(object?)
  type: Method
  source:
    remote:
      path: src/xunit.v3.common/Json/JsonDeserializer.cs
      branch: b2368b05c70a2b4bdc024d177ce7f1a0982eeaae
      repo: https://github.com/xunit/xunit
    id: TryGetTraits
    path: ../src/xunit.v3.common/Json/JsonDeserializer.cs
    startLine: 651
  assemblies:
  - xunit.v3.common
  namespace: Xunit.Sdk
  summary: Tries to get a <xref href="System.String" data-throw-if-not-resolved="false"></xref> value from a deserialized JSON value.
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, IReadOnlyCollection<string>>? TryGetTraits(object? value)
    parameters:
    - id: value
      type: System.Object
      description: The deserialized JSON value
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
      description: Returns the value if present; <code>null</code>, otherwise.
    content.vb: Public Shared Function TryGetTraits(value As Object) As IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  overload: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits*
  nameWithType.vb: JsonDeserializer.TryGetTraits(Object)
  fullName.vb: Xunit.Sdk.JsonDeserializer.TryGetTraits(Object)
  name.vb: TryGetTraits(Object)
references:
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.enum
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int64
  commentId: T:System.Int64
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: v3.2.0.1:Xunit.Sdk.IMessageSinkMessage
  commentId: T:Xunit.Sdk.IMessageSinkMessage
  parent: v3.2.0.1:Xunit.Sdk
  href: Xunit.Sdk.IMessageSinkMessage.html
  name: IMessageSinkMessage
  nameWithType: IMessageSinkMessage
  fullName: Xunit.Sdk.IMessageSinkMessage
- uid: v3.2.0.1:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.2.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.1:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.2.0.1:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.1:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryDeserialize*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryDeserialize
  href: Xunit.Sdk.JsonDeserializer.TryDeserialize.html#Xunit_Sdk_JsonDeserializer_TryDeserialize_System_String_System_Object__
  name: TryDeserialize
  nameWithType: JsonDeserializer.TryDeserialize
  fullName: Xunit.Sdk.JsonDeserializer.TryDeserialize
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArray*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArray
  href: Xunit.Sdk.JsonDeserializer.TryGetArray.html#Xunit_Sdk_JsonDeserializer_TryGetArray_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArray
  nameWithType: JsonDeserializer.TryGetArray
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArray
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, object>
  nameWithType: IReadOnlyDictionary<string, object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfBoolean_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfBoolean
  nameWithType: JsonDeserializer.TryGetArrayOfBoolean
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfBoolean
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfDateTimeOffset_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfDateTimeOffset
  nameWithType: JsonDeserializer.TryGetArrayOfDateTimeOffset
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDateTimeOffset
- uid: System.DateTimeOffset[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset[]
  nameWithType: DateTimeOffset[]
  fullName: System.DateTimeOffset[]
  nameWithType.vb: DateTimeOffset()
  fullName.vb: System.DateTimeOffset()
  name.vb: DateTimeOffset()
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfDecimal_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfDecimal
  nameWithType: JsonDeserializer.TryGetArrayOfDecimal
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfDecimal
- uid: System.Decimal[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal[]
  nameWithType: decimal[]
  fullName: decimal[]
  nameWithType.vb: Decimal()
  fullName.vb: Decimal()
  name.vb: Decimal()
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfEnum__1_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfEnum
  nameWithType: JsonDeserializer.TryGetArrayOfEnum
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfEnum
- uid: '{TEnum}[]'
  isExternal: true
  name: TEnum[]
  nameWithType: TEnum[]
  fullName: TEnum[]
  nameWithType.vb: TEnum()
  fullName.vb: TEnum()
  name.vb: TEnum()
  spec.csharp:
  - name: TEnum
  - name: '['
  - name: ']'
  spec.vb:
  - name: TEnum
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfInt_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfInt
  nameWithType: JsonDeserializer.TryGetArrayOfInt
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfInt
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfLong_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfLong
  nameWithType: JsonDeserializer.TryGetArrayOfLong
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfLong
- uid: System.Int64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long[]
  nameWithType: long[]
  fullName: long[]
  nameWithType.vb: Long()
  fullName.vb: Long()
  name.vb: Long()
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfNullableString_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfNullableString
  nameWithType: JsonDeserializer.TryGetArrayOfNullableString
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfNullableString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetArrayOfString
  href: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString.html#Xunit_Sdk_JsonDeserializer_TryGetArrayOfString_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetArrayOfString
  nameWithType: JsonDeserializer.TryGetArrayOfString
  fullName: Xunit.Sdk.JsonDeserializer.TryGetArrayOfString
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetBoolean*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetBoolean
  href: Xunit.Sdk.JsonDeserializer.TryGetBoolean.html#Xunit_Sdk_JsonDeserializer_TryGetBoolean_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetBoolean
  nameWithType: JsonDeserializer.TryGetBoolean
  fullName: Xunit.Sdk.JsonDeserializer.TryGetBoolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset
  href: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset.html#Xunit_Sdk_JsonDeserializer_TryGetDateTimeOffset_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetDateTimeOffset
  nameWithType: JsonDeserializer.TryGetDateTimeOffset
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetDecimal*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetDecimal
  href: Xunit.Sdk.JsonDeserializer.TryGetDecimal.html#Xunit_Sdk_JsonDeserializer_TryGetDecimal_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetDecimal
  nameWithType: JsonDeserializer.TryGetDecimal
  fullName: Xunit.Sdk.JsonDeserializer.TryGetDecimal
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetEnum*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetEnum
  href: Xunit.Sdk.JsonDeserializer.TryGetEnum.html#Xunit_Sdk_JsonDeserializer_TryGetEnum__1_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetEnum
  nameWithType: JsonDeserializer.TryGetEnum
  fullName: Xunit.Sdk.JsonDeserializer.TryGetEnum
- uid: System.Nullable{{TEnum}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: TEnum?
  nameWithType: TEnum?
  fullName: TEnum?
  spec.csharp:
  - name: TEnum
  - name: '?'
  spec.vb:
  - name: TEnum
  - name: '?'
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetInt*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetInt
  href: Xunit.Sdk.JsonDeserializer.TryGetInt.html#Xunit_Sdk_JsonDeserializer_TryGetInt_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetInt
  nameWithType: JsonDeserializer.TryGetInt
  fullName: Xunit.Sdk.JsonDeserializer.TryGetInt
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetLong*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetLong
  href: Xunit.Sdk.JsonDeserializer.TryGetLong.html#Xunit_Sdk_JsonDeserializer_TryGetLong_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetLong
  nameWithType: JsonDeserializer.TryGetLong
  fullName: Xunit.Sdk.JsonDeserializer.TryGetLong
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetObject*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetObject
  href: Xunit.Sdk.JsonDeserializer.TryGetObject.html#Xunit_Sdk_JsonDeserializer_TryGetObject_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetObject
  nameWithType: JsonDeserializer.TryGetObject
  fullName: Xunit.Sdk.JsonDeserializer.TryGetObject
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetString*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetString
  href: Xunit.Sdk.JsonDeserializer.TryGetString.html#Xunit_Sdk_JsonDeserializer_TryGetString_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_System_Boolean_
  name: TryGetString
  nameWithType: JsonDeserializer.TryGetString
  fullName: Xunit.Sdk.JsonDeserializer.TryGetString
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetTraits*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetTraits
  href: Xunit.Sdk.JsonDeserializer.TryGetTraits.html#Xunit_Sdk_JsonDeserializer_TryGetTraits_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_System_Boolean_
  name: TryGetTraits
  nameWithType: JsonDeserializer.TryGetTraits
  fullName: Xunit.Sdk.JsonDeserializer.TryGetTraits
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, IReadOnlyCollection<string>>
  nameWithType: IReadOnlyDictionary<string, IReadOnlyCollection<string>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IReadOnlyCollection<string>>
  nameWithType.vb: IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, System.Collections.Generic.IReadOnlyCollection(Of String))
  name.vb: IReadOnlyDictionary(Of String, IReadOnlyCollection(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.version
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: v3.2.0.1:Xunit.Sdk.JsonDeserializer.TryGetVersion*
  commentId: Overload:Xunit.Sdk.JsonDeserializer.TryGetVersion
  href: Xunit.Sdk.JsonDeserializer.TryGetVersion.html#Xunit_Sdk_JsonDeserializer_TryGetVersion_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Object__System_String_
  name: TryGetVersion
  nameWithType: JsonDeserializer.TryGetVersion
  fullName: Xunit.Sdk.JsonDeserializer.TryGetVersion
memberLayout: SeparatePages
