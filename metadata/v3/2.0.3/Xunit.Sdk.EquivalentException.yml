### YamlMime:ManagedReference
items:
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException
  commentId: T:Xunit.Sdk.EquivalentException
  id: EquivalentException
  parent: v3.2.0.3:Xunit.Sdk
  children:
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForCircularReference(System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForExceededDepth(System.Int32,System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForExtraCollectionValue(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues(System.Object,System.Object,System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberListMismatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberValueMismatch(System.Object,System.Object,System.String,System.Exception)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForMismatchedTypes(System.Type,System.Type,System.String)
  - v3.2.0.3:Xunit.Sdk.EquivalentException.ForMissingCollectionValue(System.Object,System.Collections.Generic.IEnumerable{System.Object},System.String)
  langs:
  - csharp
  - vb
  name: EquivalentException
  nameWithType: EquivalentException
  fullName: Xunit.Sdk.EquivalentException
  type: Class
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: EquivalentException
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 24
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: Exception thrown when Assert.Equivalent fails.
  example: []
  syntax:
    content: 'public class EquivalentException : XunitException, ISerializable, IAssertionException'
    content.vb: Public Class EquivalentException Inherits XunitException Implements ISerializable, IAssertionException
  inheritance:
  - System.Object
  - System.Exception
  - v3.2.0.3:Xunit.Sdk.XunitException
  implements:
  - System.Runtime.Serialization.ISerializable
  - v3.2.0.3:Xunit.Sdk.IAssertionException
  inheritedMembers:
  - v3.2.0.3:Xunit.Sdk.XunitException.ToString
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForCircularReference(System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForCircularReference(System.String)
  id: ForCircularReference(System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForCircularReference(string)
  nameWithType: EquivalentException.ForCircularReference(string)
  fullName: Xunit.Sdk.EquivalentException.ForCircularReference(string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForCircularReference
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 52
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    a circular reference was discovered.
  example: []
  syntax:
    content: public static EquivalentException ForCircularReference(string memberName)
    parameters:
    - id: memberName
      type: System.String
      description: The name of the member that caused the circular reference
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForCircularReference(memberName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForCircularReference*
  nameWithType.vb: EquivalentException.ForCircularReference(String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForCircularReference(String)
  name.vb: ForCircularReference(String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExceededDepth(System.Int32,System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForExceededDepth(System.Int32,System.String)
  id: ForExceededDepth(System.Int32,System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForExceededDepth(int, string)
  nameWithType: EquivalentException.ForExceededDepth(int, string)
  fullName: Xunit.Sdk.EquivalentException.ForExceededDepth(int, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForExceededDepth
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 67
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that the maximum comparison depth was exceeded.
  example: []
  syntax:
    content: public static EquivalentException ForExceededDepth(int depth, string memberName)
    parameters:
    - id: depth
      type: System.Int32
      description: The depth reached
    - id: memberName
      type: System.String
      description: The member access which caused the failure
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForExceededDepth(depth As Integer, memberName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExceededDepth*
  nameWithType.vb: EquivalentException.ForExceededDepth(Integer, String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForExceededDepth(Integer, String)
  name.vb: ForExceededDepth(Integer, String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues(System.Object,System.Object,System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues(System.Object,System.Object,System.String)
  id: ForGroupingWithMismatchedValues(System.Object,System.Object,System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForGroupingWithMismatchedValues(object?, object?, string)
  nameWithType: EquivalentException.ForGroupingWithMismatchedValues(object?, object?, string)
  fullName: Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues(object?, object?, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForGroupingWithMismatchedValues
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 86
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that the fault comes from an individual value mismatch one of the members.
  example: []
  syntax:
    content: public static EquivalentException ForGroupingWithMismatchedValues(object? expected, object? actual, string keyName)
    parameters:
    - id: expected
      type: System.Object
      description: The expected member value
    - id: actual
      type: System.Object
      description: The actual member value
    - id: keyName
      type: System.String
      description: The name of the key with mismatched values
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForGroupingWithMismatchedValues(expected As Object, actual As Object, keyName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues*
  nameWithType.vb: EquivalentException.ForGroupingWithMismatchedValues(Object, Object, String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues(Object, Object, String)
  name.vb: ForGroupingWithMismatchedValues(Object, Object, String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberListMismatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForMemberListMismatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)
  id: ForMemberListMismatch(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForMemberListMismatch(IEnumerable<string>, IEnumerable<string>, string)
  nameWithType: EquivalentException.ForMemberListMismatch(IEnumerable<string>, IEnumerable<string>, string)
  fullName: Xunit.Sdk.EquivalentException.ForMemberListMismatch(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForMemberListMismatch
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 115
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that the list of available members does not match.
  example: []
  syntax:
    content: public static EquivalentException ForMemberListMismatch(IEnumerable<string> expectedMemberNames, IEnumerable<string> actualMemberNames, string prefix)
    parameters:
    - id: expectedMemberNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The expected member names
    - id: actualMemberNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The actual member names
    - id: prefix
      type: System.String
      description: >-
        The prefix to be applied to the member names (may be an empty string for a
            top-level object, or a name in "member." format used as a prefix to show the member name list)
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForMemberListMismatch(expectedMemberNames As IEnumerable(Of String), actualMemberNames As IEnumerable(Of String), prefix As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberListMismatch*
  nameWithType.vb: EquivalentException.ForMemberListMismatch(IEnumerable(Of String), IEnumerable(Of String), String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForMemberListMismatch(System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of String), String)
  name.vb: ForMemberListMismatch(IEnumerable(Of String), IEnumerable(Of String), String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberValueMismatch(System.Object,System.Object,System.String,System.Exception)
  commentId: M:Xunit.Sdk.EquivalentException.ForMemberValueMismatch(System.Object,System.Object,System.String,System.Exception)
  id: ForMemberValueMismatch(System.Object,System.Object,System.String,System.Exception)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForMemberValueMismatch(object?, object?, string, Exception?)
  nameWithType: EquivalentException.ForMemberValueMismatch(object?, object?, string, Exception?)
  fullName: Xunit.Sdk.EquivalentException.ForMemberValueMismatch(object?, object?, string, System.Exception?)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForMemberValueMismatch
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 140
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that the fault comes from an individual value mismatch one of the members.
  example: []
  syntax:
    content: public static EquivalentException ForMemberValueMismatch(object? expected, object? actual, string memberName, Exception? innerException = null)
    parameters:
    - id: expected
      type: System.Object
      description: The expected member value
    - id: actual
      type: System.Object
      description: The actual member value
    - id: memberName
      type: System.String
      description: >-
        The name of the mismatched member (may be an empty string for a
            top-level object)
    - id: innerException
      type: System.Exception
      description: >-
        The inner exception that was thrown during value comparison,
            typically during a call to <xref href="System.IComparable.CompareTo(System.Object)" data-throw-if-not-resolved="false"></xref>
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForMemberValueMismatch(expected As Object, actual As Object, memberName As String, innerException As Exception = Nothing) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberValueMismatch*
  nameWithType.vb: EquivalentException.ForMemberValueMismatch(Object, Object, String, Exception)
  fullName.vb: Xunit.Sdk.EquivalentException.ForMemberValueMismatch(Object, Object, String, System.Exception)
  name.vb: ForMemberValueMismatch(Object, Object, String, Exception)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMissingCollectionValue(System.Object,System.Collections.Generic.IEnumerable{System.Object},System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForMissingCollectionValue(System.Object,System.Collections.Generic.IEnumerable{System.Object},System.String)
  id: ForMissingCollectionValue(System.Object,System.Collections.Generic.IEnumerable{System.Object},System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForMissingCollectionValue(object?, IEnumerable<object?>, string)
  nameWithType: EquivalentException.ForMissingCollectionValue(object?, IEnumerable<object?>, string)
  fullName: Xunit.Sdk.EquivalentException.ForMissingCollectionValue(object?, System.Collections.Generic.IEnumerable<object?>, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForMissingCollectionValue
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 175
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    a value was missing from the <code class="paramref">actual</code> collection.
  example: []
  syntax:
    content: public static EquivalentException ForMissingCollectionValue(object? expected, IEnumerable<object?> actual, string memberName)
    parameters:
    - id: expected
      type: System.Object
      description: The object that was expected to be found in <code class="paramref">actual</code> collection.
    - id: actual
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The actual collection which was missing the object.
    - id: memberName
      type: System.String
      description: >-
        The name of the member that was being inspected (may be an empty
            string for a top-level collection)
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForMissingCollectionValue(expected As Object, actual As IEnumerable(Of Object), memberName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMissingCollectionValue*
  nameWithType.vb: EquivalentException.ForMissingCollectionValue(Object, IEnumerable(Of Object), String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForMissingCollectionValue(Object, System.Collections.Generic.IEnumerable(Of Object), String)
  name.vb: ForMissingCollectionValue(Object, IEnumerable(Of Object), String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExtraCollectionValue(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForExtraCollectionValue(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.String)
  id: ForExtraCollectionValue(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForExtraCollectionValue(IEnumerable<object?>, IEnumerable<object?>, IEnumerable<object?>, string)
  nameWithType: EquivalentException.ForExtraCollectionValue(IEnumerable<object?>, IEnumerable<object?>, IEnumerable<object?>, string)
  fullName: Xunit.Sdk.EquivalentException.ForExtraCollectionValue(System.Collections.Generic.IEnumerable<object?>, System.Collections.Generic.IEnumerable<object?>, System.Collections.Generic.IEnumerable<object?>, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForExtraCollectionValue
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 208
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that <code class="paramref">actual</code> contained one or more values that were not specified

    in <code class="paramref">expected</code>.
  example: []
  syntax:
    content: public static EquivalentException ForExtraCollectionValue(IEnumerable<object?> expected, IEnumerable<object?> actual, IEnumerable<object?> actualLeftovers, string memberName)
    parameters:
    - id: expected
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: >-
        The values expected to be found in the <code class="paramref">actual</code>
            collection.
    - id: actual
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The actual collection values.
    - id: actualLeftovers
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: >-
        The values from <code class="paramref">actual</code> that did not have
            matching <code class="paramref">expected</code> values
    - id: memberName
      type: System.String
      description: >-
        The name of the member that was being inspected (may be an empty
            string for a top-level collection)
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForExtraCollectionValue(expected As IEnumerable(Of Object), actual As IEnumerable(Of Object), actualLeftovers As IEnumerable(Of Object), memberName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExtraCollectionValue*
  nameWithType.vb: EquivalentException.ForExtraCollectionValue(IEnumerable(Of Object), IEnumerable(Of Object), IEnumerable(Of Object), String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForExtraCollectionValue(System.Collections.Generic.IEnumerable(Of Object), System.Collections.Generic.IEnumerable(Of Object), System.Collections.Generic.IEnumerable(Of Object), String)
  name.vb: ForExtraCollectionValue(IEnumerable(Of Object), IEnumerable(Of Object), IEnumerable(Of Object), String)
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMismatchedTypes(System.Type,System.Type,System.String)
  commentId: M:Xunit.Sdk.EquivalentException.ForMismatchedTypes(System.Type,System.Type,System.String)
  id: ForMismatchedTypes(System.Type,System.Type,System.String)
  parent: v3.2.0.3:Xunit.Sdk.EquivalentException
  langs:
  - csharp
  - vb
  name: ForMismatchedTypes(Type, Type, string)
  nameWithType: EquivalentException.ForMismatchedTypes(Type, Type, string)
  fullName: Xunit.Sdk.EquivalentException.ForMismatchedTypes(System.Type, System.Type, string)
  type: Method
  source:
    remote:
      path: Sdk/Exceptions/EquivalentException.cs
      branch: d61847f1ba2595c0cad96f57fc778a03ee292506
      repo: https://github.com/xunit/assert.xunit
    id: ForMismatchedTypes
    path: ../src/xunit.v3.assert/Asserts/Sdk/Exceptions/EquivalentException.cs
    startLine: 243
  assemblies:
  - xunit.v3.assert
  namespace: Xunit.Sdk
  summary: >-
    Creates a new instance of <xref href="v3.2.0.3:Xunit.Sdk.EquivalentException" data-throw-if-not-resolved="false"></xref> which shows a message that indicates

    that <code class="paramref">expectedType</code> does not match <code class="paramref">actualType</code>. This is typically

    only used in special case comparison where it would be known that general comparison would fail

    for other reasons, like two objects derived from <xref href="System.IO.FileSystemInfo" data-throw-if-not-resolved="false"></xref> with

    different concrete types.
  example: []
  syntax:
    content: public static EquivalentException ForMismatchedTypes(Type expectedType, Type actualType, string memberName)
    parameters:
    - id: expectedType
      type: System.Type
      description: The expected type
    - id: actualType
      type: System.Type
      description: The actual type
    - id: memberName
      type: System.String
      description: >-
        The name of the member that was being inspected (may be an empty
            string for a top-level comparison)
    return:
      type: Xunit.Sdk.EquivalentException
    content.vb: Public Shared Function ForMismatchedTypes(expectedType As Type, actualType As Type, memberName As String) As EquivalentException
  overload: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMismatchedTypes*
  nameWithType.vb: EquivalentException.ForMismatchedTypes(Type, Type, String)
  fullName.vb: Xunit.Sdk.EquivalentException.ForMismatchedTypes(System.Type, System.Type, String)
  name.vb: ForMismatchedTypes(Type, Type, String)
references:
- uid: v3.2.0.3:Xunit.Sdk
  commentId: N:Xunit.Sdk
  href: Xunit.html
  name: Xunit.Sdk
  nameWithType: Xunit.Sdk
  fullName: Xunit.Sdk
  spec.csharp:
  - uid: v3.2.0.3:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.3:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
  spec.vb:
  - uid: v3.2.0.3:Xunit
    name: Xunit
    href: Xunit.html
  - name: .
  - uid: v3.2.0.3:Xunit.Sdk
    name: Sdk
    href: Xunit.Sdk.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: v3.2.0.3:Xunit.Sdk.XunitException
  commentId: T:Xunit.Sdk.XunitException
  parent: v3.2.0.3:Xunit.Sdk
  href: Xunit.Sdk.XunitException.html
  name: XunitException
  nameWithType: XunitException
  fullName: Xunit.Sdk.XunitException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: v3.2.0.3:Xunit.Sdk.IAssertionException
  commentId: T:Xunit.Sdk.IAssertionException
  parent: v3.2.0.3:Xunit.Sdk
  href: Xunit.Sdk.IAssertionException.html
  name: IAssertionException
  nameWithType: IAssertionException
  fullName: Xunit.Sdk.IAssertionException
- uid: v3.2.0.3:Xunit.Sdk.XunitException.ToString
  commentId: M:Xunit.Sdk.XunitException.ToString
  parent: v3.2.0.3:Xunit.Sdk.XunitException
  href: Xunit.Sdk.XunitException.ToString.html#Xunit_Sdk_XunitException_ToString
  name: ToString()
  nameWithType: XunitException.ToString()
  fullName: Xunit.Sdk.XunitException.ToString()
  spec.csharp:
  - uid: v3.2.0.3:Xunit.Sdk.XunitException.ToString
    name: ToString
    href: Xunit.Sdk.XunitException.ToString.html#Xunit_Sdk_XunitException_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: v3.2.0.3:Xunit.Sdk.XunitException.ToString
    name: ToString
    href: Xunit.Sdk.XunitException.ToString.html#Xunit_Sdk_XunitException_ToString
  - name: (
  - name: )
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getbaseexception
  - name: (
  - name: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception.gettype
  - name: (
  - name: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.data
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.helplink
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.hresult
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.innerexception
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.message
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.source
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.stacktrace
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.targetsite
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.serializeobjectstate
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException
  commentId: T:Xunit.Sdk.EquivalentException
  parent: v3.2.0.3:Xunit.Sdk
  href: Xunit.Sdk.EquivalentException.html
  name: EquivalentException
  nameWithType: EquivalentException
  fullName: Xunit.Sdk.EquivalentException
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForCircularReference*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForCircularReference
  href: Xunit.Sdk.EquivalentException.ForCircularReference.html#Xunit_Sdk_EquivalentException_ForCircularReference_System_String_
  name: ForCircularReference
  nameWithType: EquivalentException.ForCircularReference
  fullName: Xunit.Sdk.EquivalentException.ForCircularReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExceededDepth*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForExceededDepth
  href: Xunit.Sdk.EquivalentException.ForExceededDepth.html#Xunit_Sdk_EquivalentException_ForExceededDepth_System_Int32_System_String_
  name: ForExceededDepth
  nameWithType: EquivalentException.ForExceededDepth
  fullName: Xunit.Sdk.EquivalentException.ForExceededDepth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues
  href: Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues.html#Xunit_Sdk_EquivalentException_ForGroupingWithMismatchedValues_System_Object_System_Object_System_String_
  name: ForGroupingWithMismatchedValues
  nameWithType: EquivalentException.ForGroupingWithMismatchedValues
  fullName: Xunit.Sdk.EquivalentException.ForGroupingWithMismatchedValues
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberListMismatch*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForMemberListMismatch
  href: Xunit.Sdk.EquivalentException.ForMemberListMismatch.html#Xunit_Sdk_EquivalentException_ForMemberListMismatch_System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IEnumerable_System_String__System_String_
  name: ForMemberListMismatch
  nameWithType: EquivalentException.ForMemberListMismatch
  fullName: Xunit.Sdk.EquivalentException.ForMemberListMismatch
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  name: CompareTo(object)
  nameWithType: IComparable.CompareTo(object)
  fullName: System.IComparable.CompareTo(object)
  nameWithType.vb: IComparable.CompareTo(Object)
  fullName.vb: System.IComparable.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable.compareto
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMemberValueMismatch*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForMemberValueMismatch
  href: Xunit.Sdk.EquivalentException.ForMemberValueMismatch.html#Xunit_Sdk_EquivalentException_ForMemberValueMismatch_System_Object_System_Object_System_String_System_Exception_
  name: ForMemberValueMismatch
  nameWithType: EquivalentException.ForMemberValueMismatch
  fullName: Xunit.Sdk.EquivalentException.ForMemberValueMismatch
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMissingCollectionValue*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForMissingCollectionValue
  href: Xunit.Sdk.EquivalentException.ForMissingCollectionValue.html#Xunit_Sdk_EquivalentException_ForMissingCollectionValue_System_Object_System_Collections_Generic_IEnumerable_System_Object__System_String_
  name: ForMissingCollectionValue
  nameWithType: EquivalentException.ForMissingCollectionValue
  fullName: Xunit.Sdk.EquivalentException.ForMissingCollectionValue
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForExtraCollectionValue*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForExtraCollectionValue
  href: Xunit.Sdk.EquivalentException.ForExtraCollectionValue.html#Xunit_Sdk_EquivalentException_ForExtraCollectionValue_System_Collections_Generic_IEnumerable_System_Object__System_Collections_Generic_IEnumerable_System_Object__System_Collections_Generic_IEnumerable_System_Object__System_String_
  name: ForExtraCollectionValue
  nameWithType: EquivalentException.ForExtraCollectionValue
  fullName: Xunit.Sdk.EquivalentException.ForExtraCollectionValue
- uid: System.IO.FileSystemInfo
  commentId: T:System.IO.FileSystemInfo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filesysteminfo
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: System.IO.FileSystemInfo
- uid: v3.2.0.3:Xunit.Sdk.EquivalentException.ForMismatchedTypes*
  commentId: Overload:Xunit.Sdk.EquivalentException.ForMismatchedTypes
  href: Xunit.Sdk.EquivalentException.ForMismatchedTypes.html#Xunit_Sdk_EquivalentException_ForMismatchedTypes_System_Type_System_Type_System_String_
  name: ForMismatchedTypes
  nameWithType: EquivalentException.ForMismatchedTypes
  fullName: Xunit.Sdk.EquivalentException.ForMismatchedTypes
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
memberLayout: SeparatePages
