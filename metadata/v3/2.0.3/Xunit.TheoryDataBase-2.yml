### YamlMime:ManagedReference
items:
- uid: v3.2.0.3:Xunit.TheoryDataBase`2
  commentId: T:Xunit.TheoryDataBase`2
  id: TheoryDataBase`2
  parent: v3.2.0.3:Xunit
  children:
  - v3.2.0.3:Xunit.TheoryDataBase`2.Add(`0)
  - v3.2.0.3:Xunit.TheoryDataBase`2.Add(`1)
  - v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  - v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  - v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(`0[])
  - v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(`1[])
  - v3.2.0.3:Xunit.TheoryDataBase`2.Convert(`1)
  - v3.2.0.3:Xunit.TheoryDataBase`2.Count
  - v3.2.0.3:Xunit.TheoryDataBase`2.GetEnumerator
  langs:
  - csharp
  - vb
  name: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>
  type: Class
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: TheoryDataBase
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 12
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Provides a base type for theories based on collection initialization syntax.
  example: []
  syntax:
    content: 'public abstract class TheoryDataBase<TTheoryDataRow, TRawDataRow> : IReadOnlyCollection<TTheoryDataRow>, IEnumerable<TTheoryDataRow>, IEnumerable where TTheoryDataRow : class, ITheoryDataRow'
    typeParameters:
    - id: TTheoryDataRow
      description: The type of the theory data row (must implement <xref href="v3.2.0.3:Xunit.ITheoryDataRow" data-throw-if-not-resolved="false"></xref>).
    - id: TRawDataRow
      description: The raw data row that requires conversion to <code class="typeparamref">TTheoryDataRow</code>.
    content.vb: Public MustInherit Class TheoryDataBase(Of TTheoryDataRow As {Class, ITheoryDataRow}, TRawDataRow) Implements IReadOnlyCollection(Of TTheoryDataRow), IEnumerable(Of TTheoryDataRow), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - v3.2.0.3:Xunit.TheoryData
  - v3.2.0.3:Xunit.TheoryData`1
  - v3.2.0.3:Xunit.TheoryData`10
  - v3.2.0.3:Xunit.TheoryData`11
  - v3.2.0.3:Xunit.TheoryData`12
  - v3.2.0.3:Xunit.TheoryData`13
  - v3.2.0.3:Xunit.TheoryData`14
  - v3.2.0.3:Xunit.TheoryData`15
  - v3.2.0.3:Xunit.TheoryData`2
  - v3.2.0.3:Xunit.TheoryData`3
  - v3.2.0.3:Xunit.TheoryData`4
  - v3.2.0.3:Xunit.TheoryData`5
  - v3.2.0.3:Xunit.TheoryData`6
  - v3.2.0.3:Xunit.TheoryData`7
  - v3.2.0.3:Xunit.TheoryData`8
  - v3.2.0.3:Xunit.TheoryData`9
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}
  - System.Collections.Generic.IEnumerable{{TTheoryDataRow}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
  name.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow)
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Count
  commentId: P:Xunit.TheoryDataBase`2.Count
  id: Count
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  type: Property
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: Count
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 18
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}.Count
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Add(`1)
  commentId: M:Xunit.TheoryDataBase`2.Add(`1)
  id: Add(`1)
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: Add(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TRawDataRow)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: Add
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 24
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds a row to the theory.
  example: []
  syntax:
    content: public void Add(TRawDataRow row)
    parameters:
    - id: row
      type: '{TRawDataRow}'
      description: The row of data to be added.
    content.vb: Public Sub Add(row As TRawDataRow)
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.Add*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TRawDataRow)
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Add(`0)
  commentId: M:Xunit.TheoryDataBase`2.Add(`0)
  id: Add(`0)
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: Add(TTheoryDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add(TTheoryDataRow)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: Add
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 31
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds a row to the theory.
  example: []
  syntax:
    content: public virtual void Add(TTheoryDataRow row)
    parameters:
    - id: row
      type: '{TTheoryDataRow}'
      description: The row of data to be added.
    content.vb: Public Overridable Sub Add(row As TTheoryDataRow)
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.Add*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add(TTheoryDataRow)
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`1})
  id: AddRange(System.Collections.Generic.IEnumerable{`1})
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<TRawDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TRawDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TRawDataRow>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: AddRange
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 39
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds multiple rows to the theory.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<TRawDataRow> rows)
    parameters:
    - id: rows
      type: System.Collections.Generic.IEnumerable{{TRawDataRow}}
      description: The rows of data to be added.
    content.vb: Public Sub AddRange(rows As IEnumerable(Of TRawDataRow))
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TRawDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TRawDataRow))
  name.vb: AddRange(IEnumerable(Of TRawDataRow))
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(`1[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`1[])
  id: AddRange(`1[])
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: AddRange(params TRawDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TRawDataRow[])
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: AddRange
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 49
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds multiple rows to the theory.
  example: []
  syntax:
    content: public void AddRange(params TRawDataRow[] rows)
    parameters:
    - id: rows
      type: '{TRawDataRow}[]'
      description: The rows of data to be added.
    content.vb: Public Sub AddRange(ParamArray rows As TRawDataRow())
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TRawDataRow())
  name.vb: AddRange(ParamArray TRawDataRow())
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Xunit.TheoryDataBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: AddRange(IEnumerable<TTheoryDataRow>)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(IEnumerable<TTheoryDataRow>)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(System.Collections.Generic.IEnumerable<TTheoryDataRow>)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: AddRange
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 59
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds multiple rows to the theory.
  example: []
  syntax:
    content: public void AddRange(IEnumerable<TTheoryDataRow> rows)
    parameters:
    - id: rows
      type: System.Collections.Generic.IEnumerable{{TTheoryDataRow}}
      description: The rows of data to be added.
    content.vb: Public Sub AddRange(rows As IEnumerable(Of TTheoryDataRow))
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(IEnumerable(Of TTheoryDataRow))
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(System.Collections.Generic.IEnumerable(Of TTheoryDataRow))
  name.vb: AddRange(IEnumerable(Of TTheoryDataRow))
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange(`0[])
  commentId: M:Xunit.TheoryDataBase`2.AddRange(`0[])
  id: AddRange(`0[])
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: AddRange(params TTheoryDataRow[])
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange(params TTheoryDataRow[])
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: AddRange
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 69
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Adds multiple rows to the theory.
  example: []
  syntax:
    content: public void AddRange(params TTheoryDataRow[] rows)
    parameters:
    - id: rows
      type: '{TTheoryDataRow}[]'
      description: The rows of data to be added.
    content.vb: Public Sub AddRange(ParamArray rows As TTheoryDataRow())
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange(ParamArray TTheoryDataRow())
  name.vb: AddRange(ParamArray TTheoryDataRow())
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Convert(`1)
  commentId: M:Xunit.TheoryDataBase`2.Convert(`1)
  id: Convert(`1)
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: Convert(TRawDataRow)
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert(TRawDataRow)
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: Convert
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 79
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  summary: Convert untyped values into the appropriate theory data row.
  example: []
  syntax:
    content: protected abstract TTheoryDataRow Convert(TRawDataRow row)
    parameters:
    - id: row
      type: '{TRawDataRow}'
      description: The raw data row
    return:
      type: '{TTheoryDataRow}'
    content.vb: Protected MustOverride Function Convert(row As TRawDataRow) As TTheoryDataRow
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.Convert*
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert(TRawDataRow)
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.GetEnumerator
  commentId: M:Xunit.TheoryDataBase`2.GetEnumerator
  id: GetEnumerator
  parent: v3.2.0.3:Xunit.TheoryDataBase`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/xunit.v3.core/TheoryData.cs
      branch: 216a74a29281094873c8be5b9a9d755fc534bd9e
      repo: https://github.com/xunit/xunit
    id: GetEnumerator
    path: ../src/xunit.v3.core/TheoryData.cs
    startLine: 82
  assemblies:
  - xunit.v3.core
  namespace: Xunit
  example: []
  syntax:
    content: public IEnumerator<TTheoryDataRow> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TTheoryDataRow}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of TTheoryDataRow)
  overload: v3.2.0.3:Xunit.TheoryDataBase`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TTheoryDataRow}}.GetEnumerator
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator()
references:
- uid: v3.2.0.3:Xunit.ITheoryDataRow
  commentId: T:Xunit.ITheoryDataRow
  parent: v3.2.0.3:Xunit
  href: Xunit.ITheoryDataRow.html
  name: ITheoryDataRow
  nameWithType: ITheoryDataRow
  fullName: Xunit.ITheoryDataRow
- uid: v3.2.0.3:Xunit
  commentId: N:Xunit
  href: Xunit.html
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TTheoryDataRow>
  nameWithType: IReadOnlyCollection<TTheoryDataRow>
  fullName: System.Collections.Generic.IReadOnlyCollection<TTheoryDataRow>
  nameWithType.vb: IReadOnlyCollection(Of TTheoryDataRow)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TTheoryDataRow)
  name.vb: IReadOnlyCollection(Of TTheoryDataRow)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: TTheoryDataRow
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TTheoryDataRow}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TTheoryDataRow>
  nameWithType: IEnumerable<TTheoryDataRow>
  fullName: System.Collections.Generic.IEnumerable<TTheoryDataRow>
  nameWithType.vb: IEnumerable(Of TTheoryDataRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TTheoryDataRow)
  name.vb: IEnumerable(Of TTheoryDataRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TTheoryDataRow
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Count*
  commentId: Overload:Xunit.TheoryDataBase`2.Count
  href: Xunit.TheoryDataBase-2.Count.html#Xunit_TheoryDataBase_2_Count
  name: Count
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Count
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Count
- uid: System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{TTheoryDataRow}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<TTheoryDataRow>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<TTheoryDataRow>.Count
  nameWithType.vb: IReadOnlyCollection(Of TTheoryDataRow).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TTheoryDataRow).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Add*
  commentId: Overload:Xunit.TheoryDataBase`2.Add
  href: Xunit.TheoryDataBase-2.Add.html#Xunit_TheoryDataBase_2_Add__1_
  name: Add
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Add
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Add
- uid: '{TRawDataRow}'
  commentId: '!:TRawDataRow'
  definition: TRawDataRow
  name: TRawDataRow
  nameWithType: TRawDataRow
  fullName: TRawDataRow
- uid: TRawDataRow
  name: TRawDataRow
  nameWithType: TRawDataRow
  fullName: TRawDataRow
- uid: '{TTheoryDataRow}'
  commentId: '!:TTheoryDataRow'
  definition: TTheoryDataRow
  name: TTheoryDataRow
  nameWithType: TTheoryDataRow
  fullName: TTheoryDataRow
- uid: TTheoryDataRow
  name: TTheoryDataRow
  nameWithType: TTheoryDataRow
  fullName: TTheoryDataRow
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.AddRange*
  commentId: Overload:Xunit.TheoryDataBase`2.AddRange
  href: Xunit.TheoryDataBase-2.AddRange.html#Xunit_TheoryDataBase_2_AddRange_System_Collections_Generic_IEnumerable__1__
  name: AddRange
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.AddRange
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).AddRange
- uid: System.Collections.Generic.IEnumerable{{TRawDataRow}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TRawDataRow>
  nameWithType: IEnumerable<TRawDataRow>
  fullName: System.Collections.Generic.IEnumerable<TRawDataRow>
  nameWithType.vb: IEnumerable(Of TRawDataRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TRawDataRow)
  name.vb: IEnumerable(Of TRawDataRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TRawDataRow
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TRawDataRow
  - name: )
- uid: '{TRawDataRow}[]'
  isExternal: true
  name: TRawDataRow[]
  nameWithType: TRawDataRow[]
  fullName: TRawDataRow[]
  nameWithType.vb: TRawDataRow()
  fullName.vb: TRawDataRow()
  name.vb: TRawDataRow()
  spec.csharp:
  - name: TRawDataRow
  - name: '['
  - name: ']'
  spec.vb:
  - name: TRawDataRow
  - name: (
  - name: )
- uid: '{TTheoryDataRow}[]'
  isExternal: true
  name: TTheoryDataRow[]
  nameWithType: TTheoryDataRow[]
  fullName: TTheoryDataRow[]
  nameWithType.vb: TTheoryDataRow()
  fullName.vb: TTheoryDataRow()
  name.vb: TTheoryDataRow()
  spec.csharp:
  - name: TTheoryDataRow
  - name: '['
  - name: ']'
  spec.vb:
  - name: TTheoryDataRow
  - name: (
  - name: )
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.Convert*
  commentId: Overload:Xunit.TheoryDataBase`2.Convert
  href: Xunit.TheoryDataBase-2.Convert.html#Xunit_TheoryDataBase_2_Convert__1_
  name: Convert
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.Convert
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).Convert
- uid: v3.2.0.3:Xunit.TheoryDataBase`2.GetEnumerator*
  commentId: Overload:Xunit.TheoryDataBase`2.GetEnumerator
  href: Xunit.TheoryDataBase-2.GetEnumerator.html#Xunit_TheoryDataBase_2_GetEnumerator
  name: GetEnumerator
  nameWithType: TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator
  fullName: Xunit.TheoryDataBase<TTheoryDataRow, TRawDataRow>.GetEnumerator
  nameWithType.vb: TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator
  fullName.vb: Xunit.TheoryDataBase(Of TTheoryDataRow, TRawDataRow).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TTheoryDataRow}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TTheoryDataRow}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TTheoryDataRow>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TTheoryDataRow>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TTheoryDataRow).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TTheoryDataRow).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{TTheoryDataRow}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<TTheoryDataRow>
  nameWithType: IEnumerator<TTheoryDataRow>
  fullName: System.Collections.Generic.IEnumerator<TTheoryDataRow>
  nameWithType.vb: IEnumerator(Of TTheoryDataRow)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TTheoryDataRow)
  name.vb: IEnumerator(Of TTheoryDataRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: TTheoryDataRow
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: TTheoryDataRow
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
memberLayout: SeparatePages
